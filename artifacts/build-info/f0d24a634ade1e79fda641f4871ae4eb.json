{
	"id": "f0d24a634ade1e79fda641f4871ae4eb",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"Staking.sol": {
				"content": "/// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.26;\n\nimport \"./IJERC20.sol\";\nimport \"./IStaking.sol\";\n\ncontract Staking is IStaking {\n    IERC20 public immutable token; // The ERC20 token used for staking\n    address public owner; // Declare the owner variable\n\n    constructor() {\n        address _tokenAddress = address(0xd9145CCE52D386f254917e481eB44e9943F39138); // Define the address\n        token = IERC20(_tokenAddress); // Assign the address to the token variable\n        owner = msg.sender; // the deployer is the owner\n    }\n\n    mapping(address => Stake) stakes; // Track stakes for each user\n\n    /**\n     * @notice Stake a certain amount of tokens for a certain duration\n     * @param _amount The amount of tokens to stake\n     * @param _duration The duration of the stake in years (1, 2, or 3)\n     */\n\n    function stake(uint256 _amount, uint256 _duration)\n        external\n        returns (uint256, address)\n    {\n        uint256 myAmount;\n        address myAddress;\n        if (_duration < 1 || _duration > 3) {\n            revert InvalidDuration();\n        }\n\n        token.transferFrom(msg.sender, address(this), _amount);\n\n        stakes[msg.sender] = Stake({\n            amount: _amount,\n            startTime: block.timestamp,\n            duration: _duration * 365 days, // Convert years to seconds\n            claimed: false\n        });\n\n        emit Staked(msg.sender, _amount, _duration);\n\n        myAmount = _amount;\n        myAddress = msg.sender;\n        return (myAmount, myAddress);\n    }\n\n    /**\n     * @notice Allows the owner to deposit tokens to ensure liquidity\n     * @param _amount The amount of tokens to deposit\n     */\n    function ownerDeposit(uint256 _amount) external onlyOwner {\n        token.transferFrom(msg.sender, address(this), _amount);\n        emit OwnerDeposit(msg.sender, _amount);\n    }\n\n    /**\n     * @dev Calculates the reward amount for a given user.\n     * @param _user The address of the user.\n     * @return The calculated reward amount.\n     */\n    function calculateReward(address _user) internal view returns (uint256) {\n        Stake memory userStake = stakes[_user];\n        if (block.timestamp < userStake.startTime + userStake.duration) {\n            return 0; // No rewards before maturity\n        }\n\n        uint256 rewardPercentage = (userStake.duration / 365 days) * 25; // 25% per year\n        return (userStake.amount * rewardPercentage) / 100;\n    }\n\n    /**\n     * @notice Claim the rewards\n     * @return reward\n     */\n\n    function claimReward() external returns (uint256) {\n        Stake storage userStake = stakes[msg.sender];\n        if (userStake.amount == 0) {\n            revert NoStakeFound();\n        }\n\n        uint256 reward = calculateReward(msg.sender);\n        if (reward == 0) {\n            revert StakeNotMature();\n        }\n\n        userStake.claimed = true;\n        token.transfer(msg.sender, reward);\n        emit RewardsClaimed(msg.sender, reward);\n        return reward;\n    }\n\n    /**\n     * @notice Unstake the tokens\n     * @dev If the user unstakes before the duration, they will only get the staked amount\n     * If the user unstakes after the duration, they will get the staked amount plus the rewards\n     */\n    function unStake() external {\n        Stake storage userStake = stakes[msg.sender];\n        if (userStake.amount == 0) {\n            revert NoStakeFound();\n        }\n\n        uint256 reward = calculateReward(msg.sender);\n        uint256 totalAmount = userStake.amount + reward;\n\n        if (\n            block.timestamp < userStake.startTime + userStake.duration &&\n            reward > 0\n        ) {\n            totalAmount = userStake.amount; // Penalize for early unstaking\n        }\n\n        delete stakes[msg.sender];\n        token.transfer(msg.sender, totalAmount);\n        emit Unstaked(msg.sender, totalAmount);\n    }\n\n    /**\n     * @notice Get the staked amount and the address of the staker for a specific user.\n     * @param _userAddress The address of the user.\n     * @return amount The amount of tokens staked by the user.\n     * @return stakerAddress The address of the user who staked the tokens.\n     */\n    function getStaker(address _userAddress)\n        external\n        view\n        returns (uint256, address)\n    {\n        Stake memory staky = stakes[_userAddress];\n        return (staky.amount, _userAddress);\n    }\n\n    modifier onlyOwner() {\n        require(msg.sender == owner, \"Not owner\");\n        _;\n    }\n}\n"
			},
			"IStaking.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\n// IStaking.sol\n\npragma solidity ^0.8.26;\n\n/*///////////////////////////////////////////////////////////////\n        STRUCTS\n    //////////////////////////////////////////////////////////////*/\nstruct Stake {\n    uint256 amount; // Amount of tokens staked\n    uint256 startTime; // Timestamp of when the stake started\n    uint256 duration; // Duration of the stake (1, 2, or 3 years)\n    bool claimed; // Flag to track if rewards have been claimed\n}\n\ninterface IStaking {\n    /*///////////////////////////////////////////////////////////////\n        EVENTS\n    //////////////////////////////////////////////////////////////*/\n\n    event Staked(address indexed user, uint256 amount, uint256 duration);\n    event Unstaked(address indexed user, uint256 amount);\n    event RewardsClaimed(address indexed user, uint256 amount);\n    event OwnerDeposit(address indexed owner, uint256 amount);\n\n    /*///////////////////////////////////////////////////////////////\n     //   ERRORS\n    //////////////////////////////////////////////////////////////*/\n\n    error InvalidDuration();\n    error NoStakeFound();\n    error StakeNotMature();\n\n    /*///////////////////////////////////////////////////////////////\n        //VIEWS\n    //////////////////////////////////////////////////////////////*/\n    /**\n     * @notice Get the staked amount and the address of the staker for a specific user.\n     * @param _userAddress The address of the user.\n     * @return amount The amount of tokens staked by the user.\n     * @return stakerAddress The address of the user who staked the tokens.\n     */\n    function getStaker(address _userAddress)\n        external\n        view\n        returns (uint256, address);\n\n    /*///////////////////////////////////////////////////////////////\n        LOGIC\n    //////////////////////////////////////////////////////////////*/\n    /**\n     * @notice Stake a certain amount of tokens for a certain duration\n     * @param _amount The amount of tokens to stake\n     * @param _duration The duration of the stake in years (1, 2, or 3)\n     */\n\n    function stake(uint256 _amount, uint256 _duration)\n        external\n        returns (uint256, address);\n\n    /**\n     * @notice Unstake the tokens\n     * @dev If the user unstakes before the duration, they will only get the staked amount\n     * If the user unstakes after the duration, they will get the staked amount plus the rewards\n     */\n    function unStake() external;\n\n    /**\n     * @notice Claim the rewards\n     * @return reward\n     */\n    function claimReward() external returns (uint256);\n\n    /**\n     * @notice Allows the owner to deposit tokens to ensure liquidity\n     * @param _amount The amount of tokens to deposit\n     */\n    function ownerDeposit(uint256 _amount) external;\n}\n"
			},
			"IJERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.26;\r\n\r\n/**\r\n * @title ERC-20 Token Standard Interface\r\n */\r\n \r\ninterface IERC20 {\r\n    /**\r\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\r\n     * another (`to`).\r\n     * Note that `value` may be zero.\r\n     */\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    /**\r\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\r\n     * a call to {approve}. `value` is the new allowance.\r\n     */\r\n    event Approval(address indexed owner, address indexed spender, uint256 value); \r\n\r\n    /**\r\n     * @dev Returns the total amount of tokens in existence.\r\n     */\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Returns the amount of tokens owned by `account`.\r\n     */\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from the caller's account to `to`.\r\n      * Returns a ~ success boolean value\r\n      * Emits a {Transfer} event.\r\n     */\r\n    function transfer(address to, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Returns the remaining number of tokens that `spender` will be\r\n     * allowed to spend on behalf of `owner` through {transferFrom}. \r\n     * default: 0\r\n     * This value changes when {approve} or {transferFrom} are called.\r\n     */\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     */\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from `from` to `to` using the\r\n     * allowance mechanism. `amount` is then deducted from the caller's\r\n     * allowance.\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 amount\r\n    ) external returns (bool);\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"IJERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}.  default: 0 This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the total amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a ~ success boolean value Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"title": "ERC-20 Token Standard Interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}.  default: 0 This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the total amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a ~ success boolean value Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"title\":\"ERC-20 Token Standard Interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"IJERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"IJERC20.sol\":{\"keccak256\":\"0xe6ef2d9e089ac6c188ee22c4413834fad8bf65c83e7218c714d4c703bb7552d9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://abdbdc6d524ce8e9023ab5a284f05d3d3fa3b8814de556a17c8e86f3b066aed9\",\"dweb:/ipfs/QmYKDFkRMxJ7cTM44MebadMTYGTgmP2rYdcVubAcbr7VXS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"IStaking.sol": {
				"IStaking": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidDuration",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NoStakeFound",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "StakeNotMature",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "OwnerDeposit",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "RewardsClaimed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "duration",
									"type": "uint256"
								}
							],
							"name": "Staked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Unstaked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "claimReward",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_userAddress",
									"type": "address"
								}
							],
							"name": "getStaker",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "ownerDeposit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_duration",
									"type": "uint256"
								}
							],
							"name": "stake",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unStake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"claimReward()": {
								"returns": {
									"_0": "reward"
								}
							},
							"getStaker(address)": {
								"params": {
									"_userAddress": "The address of the user."
								},
								"returns": {
									"_0": "amount The amount of tokens staked by the user.",
									"_1": "stakerAddress The address of the user who staked the tokens."
								}
							},
							"ownerDeposit(uint256)": {
								"params": {
									"_amount": "The amount of tokens to deposit"
								}
							},
							"stake(uint256,uint256)": {
								"params": {
									"_amount": "The amount of tokens to stake",
									"_duration": "The duration of the stake in years (1, 2, or 3)"
								}
							},
							"unStake()": {
								"details": "If the user unstakes before the duration, they will only get the staked amount If the user unstakes after the duration, they will get the staked amount plus the rewards"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"claimReward()": "b88a802f",
							"getStaker(address)": "a23c44b1",
							"ownerDeposit(uint256)": "141833dc",
							"stake(uint256,uint256)": "7b0472f0",
							"unStake()": "73cf575a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidDuration\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoStakeFound\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StakeNotMature\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"OwnerDeposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RewardsClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"}],\"name\":\"Staked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Unstaked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"claimReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"}],\"name\":\"getStaker\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"ownerDeposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_duration\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"claimReward()\":{\"returns\":{\"_0\":\"reward\"}},\"getStaker(address)\":{\"params\":{\"_userAddress\":\"The address of the user.\"},\"returns\":{\"_0\":\"amount The amount of tokens staked by the user.\",\"_1\":\"stakerAddress The address of the user who staked the tokens.\"}},\"ownerDeposit(uint256)\":{\"params\":{\"_amount\":\"The amount of tokens to deposit\"}},\"stake(uint256,uint256)\":{\"params\":{\"_amount\":\"The amount of tokens to stake\",\"_duration\":\"The duration of the stake in years (1, 2, or 3)\"}},\"unStake()\":{\"details\":\"If the user unstakes before the duration, they will only get the staked amount If the user unstakes after the duration, they will get the staked amount plus the rewards\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"claimReward()\":{\"notice\":\"Claim the rewards\"},\"getStaker(address)\":{\"notice\":\"Get the staked amount and the address of the staker for a specific user.\"},\"ownerDeposit(uint256)\":{\"notice\":\"Allows the owner to deposit tokens to ensure liquidity\"},\"stake(uint256,uint256)\":{\"notice\":\"Stake a certain amount of tokens for a certain duration\"},\"unStake()\":{\"notice\":\"Unstake the tokens\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"IStaking.sol\":\"IStaking\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"IStaking.sol\":{\"keccak256\":\"0xd4f47bd4774fb40d739e697141dcdd218e632f0f003e6dd59c271df963a62b4f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://94a0bb13c52d43f18fd8b57c90a4fdc8ade27f997751b6b6c6a5b03b2a651410\",\"dweb:/ipfs/QmTxNGfVczRgtDmYj4r1MnuYqcqP9oP6LmjskAGSXQ5ENN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"claimReward()": {
								"notice": "Claim the rewards"
							},
							"getStaker(address)": {
								"notice": "Get the staked amount and the address of the staker for a specific user."
							},
							"ownerDeposit(uint256)": {
								"notice": "Allows the owner to deposit tokens to ensure liquidity"
							},
							"stake(uint256,uint256)": {
								"notice": "Stake a certain amount of tokens for a certain duration"
							},
							"unStake()": {
								"notice": "Unstake the tokens"
							}
						},
						"version": 1
					}
				}
			},
			"Staking.sol": {
				"Staking": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "InvalidDuration",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NoStakeFound",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "StakeNotMature",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "OwnerDeposit",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "RewardsClaimed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "duration",
									"type": "uint256"
								}
							],
							"name": "Staked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Unstaked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "claimReward",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_userAddress",
									"type": "address"
								}
							],
							"name": "getStaker",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "ownerDeposit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_duration",
									"type": "uint256"
								}
							],
							"name": "stake",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unStake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"claimReward()": {
								"returns": {
									"_0": "reward"
								}
							},
							"getStaker(address)": {
								"params": {
									"_userAddress": "The address of the user."
								},
								"returns": {
									"_0": "amount The amount of tokens staked by the user.",
									"_1": "stakerAddress The address of the user who staked the tokens."
								}
							},
							"ownerDeposit(uint256)": {
								"params": {
									"_amount": "The amount of tokens to deposit"
								}
							},
							"stake(uint256,uint256)": {
								"params": {
									"_amount": "The amount of tokens to stake",
									"_duration": "The duration of the stake in years (1, 2, or 3)"
								}
							},
							"unStake()": {
								"details": "If the user unstakes before the duration, they will only get the staked amount If the user unstakes after the duration, they will get the staked amount plus the rewards"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Staking.sol\":110:4464  contract Staking is IStaking {... */\n  mstore(0x40, 0xa0)\n    /* \"Staking.sol\":273:541  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"Staking.sol\":297:318  address _tokenAddress */\n  0x00\n    /* \"Staking.sol\":329:371  0xd9145CCE52D386f254917e481eB44e9943F39138 */\n  0xd9145cce52d386f254917e481eb44e9943f39138\n    /* \"Staking.sol\":297:372  address _tokenAddress = address(0xd9145CCE52D386f254917e481eB44e9943F39138) */\n  swap1\n  pop\n    /* \"Staking.sol\":419:432  _tokenAddress */\n  dup1\n    /* \"Staking.sol\":404:433  token = IERC20(_tokenAddress) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x80\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"Staking.sol\":495:505  msg.sender */\n  caller\n    /* \"Staking.sol\":487:492  owner */\n  0x00\n  dup1\n    /* \"Staking.sol\":487:505  owner = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Staking.sol\":287:541  {... */\n  pop\n    /* \"Staking.sol\":110:4464  contract Staking is IStaking {... */\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0xbf08d8a2d7c7780024ba6e6dbe12d3d5a5a747ea3071fca63d8a2ede50d3472a\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"Staking.sol\":110:4464  contract Staking is IStaking {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8da5cb5b\n      gt\n      tag_10\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xa23c44b1\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xb88a802f\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xfc0c546a\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_10:\n      dup1\n      0x141833dc\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x73cf575a\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x7b0472f0\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"Staking.sol\":1671:1848  function ownerDeposit(uint256 _amount) external onlyOwner {... */\n    tag_3:\n      tag_11\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_12\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_12:\n      tag_14\n      jump\t// in\n    tag_11:\n      stop\n        /* \"Staking.sol\":3227:3852  function unStake() external {... */\n    tag_4:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      stop\n        /* \"Staking.sol\":828:1525  function stake(uint256 _amount, uint256 _duration)... */\n    tag_5:\n      tag_17\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_18\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      tag_20\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      tag_21\n      swap3\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Staking.sol\":216:236  address public owner */\n    tag_6:\n      tag_23\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Staking.sol\":4153:4366  function getStaker(address _userAddress)... */\n    tag_7:\n      tag_27\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      tag_30\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      tag_31\n      swap3\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Staking.sol\":2510:2983  function claimReward() external returns (uint256) {... */\n    tag_8:\n      tag_32\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Staking.sol\":145:174  IERC20 public immutable token */\n    tag_9:\n      tag_36\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Staking.sol\":1671:1848  function ownerDeposit(uint256 _amount) external onlyOwner {... */\n    tag_14:\n        /* \"Staking.sol\":4425:4430  owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Staking.sol\":4411:4430  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Staking.sol\":4411:4421  msg.sender */\n      caller\n        /* \"Staking.sol\":4411:4430  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Staking.sol\":4403:4444  require(msg.sender == owner, \"Not owner\") */\n      tag_41\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_42\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_41:\n        /* \"Staking.sol\":1739:1744  token */\n      immutable(\"0xbf08d8a2d7c7780024ba6e6dbe12d3d5a5a747ea3071fca63d8a2ede50d3472a\")\n        /* \"Staking.sol\":1739:1757  token.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"Staking.sol\":1758:1768  msg.sender */\n      caller\n        /* \"Staking.sol\":1778:1782  this */\n      address\n        /* \"Staking.sol\":1785:1792  _amount */\n      dup5\n        /* \"Staking.sol\":1739:1793  token.transferFrom(msg.sender, address(this), _amount) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_45\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_48\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_48:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_49\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n      pop\n        /* \"Staking.sol\":1821:1831  msg.sender */\n      caller\n        /* \"Staking.sol\":1808:1841  OwnerDeposit(msg.sender, _amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xc286f3b83e4f244dafdd6f12a30c1792eb5c99ba0ee6cb1181aaf6eac30286e8\n        /* \"Staking.sol\":1833:1840  _amount */\n      dup3\n        /* \"Staking.sol\":1808:1841  OwnerDeposit(msg.sender, _amount) */\n      mload(0x40)\n      tag_51\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"Staking.sol\":1671:1848  function ownerDeposit(uint256 _amount) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"Staking.sol\":3227:3852  function unStake() external {... */\n    tag_16:\n        /* \"Staking.sol\":3265:3288  Stake storage userStake */\n      0x00\n        /* \"Staking.sol\":3291:3297  stakes */\n      0x01\n        /* \"Staking.sol\":3291:3309  stakes[msg.sender] */\n      0x00\n        /* \"Staking.sol\":3298:3308  msg.sender */\n      caller\n        /* \"Staking.sol\":3291:3309  stakes[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Staking.sol\":3265:3309  Stake storage userStake = stakes[msg.sender] */\n      swap1\n      pop\n        /* \"Staking.sol\":3343:3344  0 */\n      0x00\n        /* \"Staking.sol\":3323:3332  userStake */\n      dup2\n        /* \"Staking.sol\":3323:3339  userStake.amount */\n      0x00\n      add\n      sload\n        /* \"Staking.sol\":3323:3344  userStake.amount == 0 */\n      sub\n        /* \"Staking.sol\":3319:3392  if (userStake.amount == 0) {... */\n      tag_53\n      jumpi\n        /* \"Staking.sol\":3367:3381  NoStakeFound() */\n      mload(0x40)\n      0x59be8f0200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Staking.sol\":3319:3392  if (userStake.amount == 0) {... */\n    tag_53:\n        /* \"Staking.sol\":3402:3416  uint256 reward */\n      0x00\n        /* \"Staking.sol\":3419:3446  calculateReward(msg.sender) */\n      tag_54\n        /* \"Staking.sol\":3435:3445  msg.sender */\n      caller\n        /* \"Staking.sol\":3419:3434  calculateReward */\n      tag_55\n        /* \"Staking.sol\":3419:3446  calculateReward(msg.sender) */\n      jump\t// in\n    tag_54:\n        /* \"Staking.sol\":3402:3446  uint256 reward = calculateReward(msg.sender) */\n      swap1\n      pop\n        /* \"Staking.sol\":3456:3475  uint256 totalAmount */\n      0x00\n        /* \"Staking.sol\":3497:3503  reward */\n      dup2\n        /* \"Staking.sol\":3478:3487  userStake */\n      dup4\n        /* \"Staking.sol\":3478:3494  userStake.amount */\n      0x00\n      add\n      sload\n        /* \"Staking.sol\":3478:3503  userStake.amount + reward */\n      tag_56\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_56:\n        /* \"Staking.sol\":3456:3503  uint256 totalAmount = userStake.amount + reward */\n      swap1\n      pop\n        /* \"Staking.sol\":3571:3580  userStake */\n      dup3\n        /* \"Staking.sol\":3571:3589  userStake.duration */\n      0x02\n      add\n      sload\n        /* \"Staking.sol\":3549:3558  userStake */\n      dup4\n        /* \"Staking.sol\":3549:3568  userStake.startTime */\n      0x01\n      add\n      sload\n        /* \"Staking.sol\":3549:3589  userStake.startTime + userStake.duration */\n      tag_58\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_58:\n        /* \"Staking.sol\":3531:3546  block.timestamp */\n      timestamp\n        /* \"Staking.sol\":3531:3589  block.timestamp < userStake.startTime + userStake.duration */\n      lt\n        /* \"Staking.sol\":3531:3615  block.timestamp < userStake.startTime + userStake.duration &&... */\n      dup1\n      iszero\n      tag_59\n      jumpi\n      pop\n        /* \"Staking.sol\":3614:3615  0 */\n      0x00\n        /* \"Staking.sol\":3605:3611  reward */\n      dup3\n        /* \"Staking.sol\":3605:3615  reward > 0 */\n      gt\n        /* \"Staking.sol\":3531:3615  block.timestamp < userStake.startTime + userStake.duration &&... */\n    tag_59:\n        /* \"Staking.sol\":3514:3713  if (... */\n      iszero\n      tag_60\n      jumpi\n        /* \"Staking.sol\":3654:3663  userStake */\n      dup3\n        /* \"Staking.sol\":3654:3670  userStake.amount */\n      0x00\n      add\n      sload\n        /* \"Staking.sol\":3640:3670  totalAmount = userStake.amount */\n      swap1\n      pop\n        /* \"Staking.sol\":3514:3713  if (... */\n    tag_60:\n        /* \"Staking.sol\":3730:3736  stakes */\n      0x01\n        /* \"Staking.sol\":3730:3748  stakes[msg.sender] */\n      0x00\n        /* \"Staking.sol\":3737:3747  msg.sender */\n      caller\n        /* \"Staking.sol\":3730:3748  stakes[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"Staking.sol\":3723:3748  delete stakes[msg.sender] */\n      dup1\n      dup3\n      add\n      0x00\n      swap1\n      sstore\n      0x01\n      dup3\n      add\n      0x00\n      swap1\n      sstore\n      0x02\n      dup3\n      add\n      0x00\n      swap1\n      sstore\n      0x03\n      dup3\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      swap1\n      0xff\n      mul\n      not\n      and\n      swap1\n      sstore\n      pop\n      pop\n        /* \"Staking.sol\":3758:3763  token */\n      immutable(\"0xbf08d8a2d7c7780024ba6e6dbe12d3d5a5a747ea3071fca63d8a2ede50d3472a\")\n        /* \"Staking.sol\":3758:3772  token.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"Staking.sol\":3773:3783  msg.sender */\n      caller\n        /* \"Staking.sol\":3785:3796  totalAmount */\n      dup4\n        /* \"Staking.sol\":3758:3797  token.transfer(msg.sender, totalAmount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_61\n      swap3\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_61:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_64\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_64:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_65\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_65:\n      pop\n        /* \"Staking.sol\":3821:3831  msg.sender */\n      caller\n        /* \"Staking.sol\":3812:3845  Unstaked(msg.sender, totalAmount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x0f5bb82176feb1b5e747e28471aa92156a04d9f3ab9f45f28e2d704232b93f75\n        /* \"Staking.sol\":3833:3844  totalAmount */\n      dup3\n        /* \"Staking.sol\":3812:3845  Unstaked(msg.sender, totalAmount) */\n      mload(0x40)\n      tag_66\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"Staking.sol\":3255:3852  {... */\n      pop\n      pop\n      pop\n        /* \"Staking.sol\":3227:3852  function unStake() external {... */\n      jump\t// out\n        /* \"Staking.sol\":828:1525  function stake(uint256 _amount, uint256 _duration)... */\n    tag_20:\n        /* \"Staking.sol\":913:920  uint256 */\n      0x00\n        /* \"Staking.sol\":922:929  address */\n      dup1\n        /* \"Staking.sol\":945:961  uint256 myAmount */\n      0x00\n        /* \"Staking.sol\":971:988  address myAddress */\n      dup1\n        /* \"Staking.sol\":1014:1015  1 */\n      0x01\n        /* \"Staking.sol\":1002:1011  _duration */\n      dup6\n        /* \"Staking.sol\":1002:1015  _duration < 1 */\n      lt\n        /* \"Staking.sol\":1002:1032  _duration < 1 || _duration > 3 */\n      dup1\n      tag_68\n      jumpi\n      pop\n        /* \"Staking.sol\":1031:1032  3 */\n      0x03\n        /* \"Staking.sol\":1019:1028  _duration */\n      dup6\n        /* \"Staking.sol\":1019:1032  _duration > 3 */\n      gt\n        /* \"Staking.sol\":1002:1032  _duration < 1 || _duration > 3 */\n    tag_68:\n        /* \"Staking.sol\":998:1083  if (_duration < 1 || _duration > 3) {... */\n      iszero\n      tag_69\n      jumpi\n        /* \"Staking.sol\":1055:1072  InvalidDuration() */\n      mload(0x40)\n      0x7616640100000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Staking.sol\":998:1083  if (_duration < 1 || _duration > 3) {... */\n    tag_69:\n        /* \"Staking.sol\":1093:1098  token */\n      immutable(\"0xbf08d8a2d7c7780024ba6e6dbe12d3d5a5a747ea3071fca63d8a2ede50d3472a\")\n        /* \"Staking.sol\":1093:1111  token.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"Staking.sol\":1112:1122  msg.sender */\n      caller\n        /* \"Staking.sol\":1132:1136  this */\n      address\n        /* \"Staking.sol\":1139:1146  _amount */\n      dup10\n        /* \"Staking.sol\":1093:1147  token.transferFrom(msg.sender, address(this), _amount) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_70\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_70:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_72\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_72:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_73\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_73:\n      pop\n        /* \"Staking.sol\":1179:1365  Stake({... */\n      mload(0x40)\n      dup1\n      0x80\n      add\n      0x40\n      mstore\n      dup1\n        /* \"Staking.sol\":1207:1214  _amount */\n      dup8\n        /* \"Staking.sol\":1179:1365  Stake({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"Staking.sol\":1239:1254  block.timestamp */\n      timestamp\n        /* \"Staking.sol\":1179:1365  Stake({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"Staking.sol\":1290:1298  365 days */\n      0x01e13380\n        /* \"Staking.sol\":1278:1287  _duration */\n      dup8\n        /* \"Staking.sol\":1278:1298  _duration * 365 days */\n      tag_74\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_74:\n        /* \"Staking.sol\":1179:1365  Stake({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"Staking.sol\":1349:1354  false */\n      0x00\n        /* \"Staking.sol\":1179:1365  Stake({... */\n      iszero\n      iszero\n      dup2\n      mstore\n      pop\n        /* \"Staking.sol\":1158:1164  stakes */\n      0x01\n        /* \"Staking.sol\":1158:1176  stakes[msg.sender] */\n      0x00\n        /* \"Staking.sol\":1165:1175  msg.sender */\n      caller\n        /* \"Staking.sol\":1158:1176  stakes[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Staking.sol\":1158:1365  stakes[msg.sender] = Stake({... */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      sstore\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      sstore\n      0x60\n      dup3\n      add\n      mload\n      dup2\n      0x03\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n      swap1\n      pop\n      pop\n        /* \"Staking.sol\":1388:1398  msg.sender */\n      caller\n        /* \"Staking.sol\":1381:1419  Staked(msg.sender, _amount, _duration) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x1449c6dd7851abc30abf37f57715f492010519147cc2652fbc38202c18a6ee90\n        /* \"Staking.sol\":1400:1407  _amount */\n      dup8\n        /* \"Staking.sol\":1409:1418  _duration */\n      dup8\n        /* \"Staking.sol\":1381:1419  Staked(msg.sender, _amount, _duration) */\n      mload(0x40)\n      tag_76\n      swap3\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"Staking.sol\":1441:1448  _amount */\n      dup6\n        /* \"Staking.sol\":1430:1448  myAmount = _amount */\n      swap2\n      pop\n        /* \"Staking.sol\":1470:1480  msg.sender */\n      caller\n        /* \"Staking.sol\":1458:1480  myAddress = msg.sender */\n      swap1\n      pop\n        /* \"Staking.sol\":1498:1506  myAmount */\n      dup2\n        /* \"Staking.sol\":1508:1517  myAddress */\n      dup2\n        /* \"Staking.sol\":1490:1518  return (myAmount, myAddress) */\n      swap4\n      pop\n      swap4\n      pop\n      pop\n      pop\n        /* \"Staking.sol\":828:1525  function stake(uint256 _amount, uint256 _duration)... */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"Staking.sol\":216:236  address public owner */\n    tag_24:\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"Staking.sol\":4153:4366  function getStaker(address _userAddress)... */\n    tag_30:\n        /* \"Staking.sol\":4241:4248  uint256 */\n      0x00\n        /* \"Staking.sol\":4250:4257  address */\n      dup1\n        /* \"Staking.sol\":4273:4291  Stake memory staky */\n      0x00\n        /* \"Staking.sol\":4294:4300  stakes */\n      0x01\n        /* \"Staking.sol\":4294:4314  stakes[_userAddress] */\n      0x00\n        /* \"Staking.sol\":4301:4313  _userAddress */\n      dup6\n        /* \"Staking.sol\":4294:4314  stakes[_userAddress] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Staking.sol\":4273:4314  Stake memory staky = stakes[_userAddress] */\n      mload(0x40)\n      dup1\n      0x80\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x02\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x03\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"Staking.sol\":4332:4337  staky */\n      dup1\n        /* \"Staking.sol\":4332:4344  staky.amount */\n      0x00\n      add\n      mload\n        /* \"Staking.sol\":4346:4358  _userAddress */\n      dup5\n        /* \"Staking.sol\":4324:4359  return (staky.amount, _userAddress) */\n      swap3\n      pop\n      swap3\n      pop\n      pop\n        /* \"Staking.sol\":4153:4366  function getStaker(address _userAddress)... */\n      swap2\n      pop\n      swap2\n      jump\t// out\n        /* \"Staking.sol\":2510:2983  function claimReward() external returns (uint256) {... */\n    tag_33:\n        /* \"Staking.sol\":2551:2558  uint256 */\n      0x00\n        /* \"Staking.sol\":2570:2593  Stake storage userStake */\n      dup1\n        /* \"Staking.sol\":2596:2602  stakes */\n      0x01\n        /* \"Staking.sol\":2596:2614  stakes[msg.sender] */\n      0x00\n        /* \"Staking.sol\":2603:2613  msg.sender */\n      caller\n        /* \"Staking.sol\":2596:2614  stakes[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Staking.sol\":2570:2614  Stake storage userStake = stakes[msg.sender] */\n      swap1\n      pop\n        /* \"Staking.sol\":2648:2649  0 */\n      0x00\n        /* \"Staking.sol\":2628:2637  userStake */\n      dup2\n        /* \"Staking.sol\":2628:2644  userStake.amount */\n      0x00\n      add\n      sload\n        /* \"Staking.sol\":2628:2649  userStake.amount == 0 */\n      sub\n        /* \"Staking.sol\":2624:2697  if (userStake.amount == 0) {... */\n      tag_80\n      jumpi\n        /* \"Staking.sol\":2672:2686  NoStakeFound() */\n      mload(0x40)\n      0x59be8f0200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Staking.sol\":2624:2697  if (userStake.amount == 0) {... */\n    tag_80:\n        /* \"Staking.sol\":2707:2721  uint256 reward */\n      0x00\n        /* \"Staking.sol\":2724:2751  calculateReward(msg.sender) */\n      tag_81\n        /* \"Staking.sol\":2740:2750  msg.sender */\n      caller\n        /* \"Staking.sol\":2724:2739  calculateReward */\n      tag_55\n        /* \"Staking.sol\":2724:2751  calculateReward(msg.sender) */\n      jump\t// in\n    tag_81:\n        /* \"Staking.sol\":2707:2751  uint256 reward = calculateReward(msg.sender) */\n      swap1\n      pop\n        /* \"Staking.sol\":2775:2776  0 */\n      0x00\n        /* \"Staking.sol\":2765:2771  reward */\n      dup2\n        /* \"Staking.sol\":2765:2776  reward == 0 */\n      sub\n        /* \"Staking.sol\":2761:2826  if (reward == 0) {... */\n      tag_82\n      jumpi\n        /* \"Staking.sol\":2799:2815  StakeNotMature() */\n      mload(0x40)\n      0xa5a3111c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Staking.sol\":2761:2826  if (reward == 0) {... */\n    tag_82:\n        /* \"Staking.sol\":2856:2860  true */\n      0x01\n        /* \"Staking.sol\":2836:2845  userStake */\n      dup3\n        /* \"Staking.sol\":2836:2853  userStake.claimed */\n      0x03\n      add\n      0x00\n        /* \"Staking.sol\":2836:2860  userStake.claimed = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Staking.sol\":2870:2875  token */\n      immutable(\"0xbf08d8a2d7c7780024ba6e6dbe12d3d5a5a747ea3071fca63d8a2ede50d3472a\")\n        /* \"Staking.sol\":2870:2884  token.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"Staking.sol\":2885:2895  msg.sender */\n      caller\n        /* \"Staking.sol\":2897:2903  reward */\n      dup4\n        /* \"Staking.sol\":2870:2904  token.transfer(msg.sender, reward) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_83\n      swap3\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_83:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_85\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_85:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_86\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_86:\n      pop\n        /* \"Staking.sol\":2934:2944  msg.sender */\n      caller\n        /* \"Staking.sol\":2919:2953  RewardsClaimed(msg.sender, reward) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xfc30cddea38e2bf4d6ea7d3f9ed3b6ad7f176419f4963bd81318067a4aee73fe\n        /* \"Staking.sol\":2946:2952  reward */\n      dup3\n        /* \"Staking.sol\":2919:2953  RewardsClaimed(msg.sender, reward) */\n      mload(0x40)\n      tag_87\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"Staking.sol\":2970:2976  reward */\n      dup1\n        /* \"Staking.sol\":2963:2976  return reward */\n      swap3\n      pop\n      pop\n      pop\n        /* \"Staking.sol\":2510:2983  function claimReward() external returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"Staking.sol\":145:174  IERC20 public immutable token */\n    tag_37:\n      immutable(\"0xbf08d8a2d7c7780024ba6e6dbe12d3d5a5a747ea3071fca63d8a2ede50d3472a\")\n      dup2\n      jump\t// out\n        /* \"Staking.sol\":2019:2432  function calculateReward(address _user) internal view returns (uint256) {... */\n    tag_55:\n        /* \"Staking.sol\":2082:2089  uint256 */\n      0x00\n        /* \"Staking.sol\":2101:2123  Stake memory userStake */\n      dup1\n        /* \"Staking.sol\":2126:2132  stakes */\n      0x01\n        /* \"Staking.sol\":2126:2139  stakes[_user] */\n      0x00\n        /* \"Staking.sol\":2133:2138  _user */\n      dup5\n        /* \"Staking.sol\":2126:2139  stakes[_user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Staking.sol\":2101:2139  Stake memory userStake = stakes[_user] */\n      mload(0x40)\n      dup1\n      0x80\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x02\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x03\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"Staking.sol\":2193:2202  userStake */\n      dup1\n        /* \"Staking.sol\":2193:2211  userStake.duration */\n      0x40\n      add\n      mload\n        /* \"Staking.sol\":2171:2180  userStake */\n      dup2\n        /* \"Staking.sol\":2171:2190  userStake.startTime */\n      0x20\n      add\n      mload\n        /* \"Staking.sol\":2171:2211  userStake.startTime + userStake.duration */\n      tag_89\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_89:\n        /* \"Staking.sol\":2153:2168  block.timestamp */\n      timestamp\n        /* \"Staking.sol\":2153:2211  block.timestamp < userStake.startTime + userStake.duration */\n      lt\n        /* \"Staking.sol\":2149:2276  if (block.timestamp < userStake.startTime + userStake.duration) {... */\n      iszero\n      tag_90\n      jumpi\n        /* \"Staking.sol\":2234:2235  0 */\n      0x00\n        /* \"Staking.sol\":2227:2235  return 0 */\n      swap2\n      pop\n      pop\n      jump(tag_88)\n        /* \"Staking.sol\":2149:2276  if (block.timestamp < userStake.startTime + userStake.duration) {... */\n    tag_90:\n        /* \"Staking.sol\":2286:2310  uint256 rewardPercentage */\n      0x00\n        /* \"Staking.sol\":2347:2349  25 */\n      0x19\n        /* \"Staking.sol\":2335:2343  365 days */\n      0x01e13380\n        /* \"Staking.sol\":2314:2323  userStake */\n      dup4\n        /* \"Staking.sol\":2314:2332  userStake.duration */\n      0x40\n      add\n      mload\n        /* \"Staking.sol\":2314:2343  userStake.duration / 365 days */\n      tag_91\n      swap2\n      swap1\n      tag_92\n      jump\t// in\n    tag_91:\n        /* \"Staking.sol\":2313:2349  (userStake.duration / 365 days) * 25 */\n      tag_93\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_93:\n        /* \"Staking.sol\":2286:2349  uint256 rewardPercentage = (userStake.duration / 365 days) * 25 */\n      swap1\n      pop\n        /* \"Staking.sol\":2422:2425  100 */\n      0x64\n        /* \"Staking.sol\":2402:2418  rewardPercentage */\n      dup2\n        /* \"Staking.sol\":2383:2392  userStake */\n      dup4\n        /* \"Staking.sol\":2383:2399  userStake.amount */\n      0x00\n      add\n      mload\n        /* \"Staking.sol\":2383:2418  userStake.amount * rewardPercentage */\n      tag_94\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_94:\n        /* \"Staking.sol\":2382:2425  (userStake.amount * rewardPercentage) / 100 */\n      tag_95\n      swap2\n      swap1\n      tag_92\n      jump\t// in\n    tag_95:\n        /* \"Staking.sol\":2375:2425  return (userStake.amount * rewardPercentage) / 100 */\n      swap3\n      pop\n      pop\n      pop\n        /* \"Staking.sol\":2019:2432  function calculateReward(address _user) internal view returns (uint256) {... */\n    tag_88:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_97:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:411   */\n    tag_99:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":400:405   */\n      dup2\n        /* \"#utility.yul\":389:405   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:411   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":417:539   */\n    tag_100:\n        /* \"#utility.yul\":490:514   */\n      tag_127\n        /* \"#utility.yul\":508:513   */\n      dup2\n        /* \"#utility.yul\":490:514   */\n      tag_99\n      jump\t// in\n    tag_127:\n        /* \"#utility.yul\":483:488   */\n      dup2\n        /* \"#utility.yul\":480:515   */\n      eq\n        /* \"#utility.yul\":470:533   */\n      tag_128\n      jumpi\n        /* \"#utility.yul\":529:530   */\n      0x00\n        /* \"#utility.yul\":526:527   */\n      dup1\n        /* \"#utility.yul\":519:531   */\n      revert\n        /* \"#utility.yul\":470:533   */\n    tag_128:\n        /* \"#utility.yul\":417:539   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":545:684   */\n    tag_101:\n        /* \"#utility.yul\":591:596   */\n      0x00\n        /* \"#utility.yul\":629:635   */\n      dup2\n        /* \"#utility.yul\":616:636   */\n      calldataload\n        /* \"#utility.yul\":607:636   */\n      swap1\n      pop\n        /* \"#utility.yul\":645:678   */\n      tag_130\n        /* \"#utility.yul\":672:677   */\n      dup2\n        /* \"#utility.yul\":645:678   */\n      tag_100\n      jump\t// in\n    tag_130:\n        /* \"#utility.yul\":545:684   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":690:1019   */\n    tag_13:\n        /* \"#utility.yul\":749:755   */\n      0x00\n        /* \"#utility.yul\":798:800   */\n      0x20\n        /* \"#utility.yul\":786:795   */\n      dup3\n        /* \"#utility.yul\":777:784   */\n      dup5\n        /* \"#utility.yul\":773:796   */\n      sub\n        /* \"#utility.yul\":769:801   */\n      slt\n        /* \"#utility.yul\":766:885   */\n      iszero\n      tag_132\n      jumpi\n        /* \"#utility.yul\":804:883   */\n      tag_133\n      tag_97\n      jump\t// in\n    tag_133:\n        /* \"#utility.yul\":766:885   */\n    tag_132:\n        /* \"#utility.yul\":924:925   */\n      0x00\n        /* \"#utility.yul\":949:1002   */\n      tag_134\n        /* \"#utility.yul\":994:1001   */\n      dup5\n        /* \"#utility.yul\":985:991   */\n      dup3\n        /* \"#utility.yul\":974:983   */\n      dup6\n        /* \"#utility.yul\":970:992   */\n      add\n        /* \"#utility.yul\":949:1002   */\n      tag_101\n      jump\t// in\n    tag_134:\n        /* \"#utility.yul\":939:1002   */\n      swap2\n      pop\n        /* \"#utility.yul\":895:1012   */\n      pop\n        /* \"#utility.yul\":690:1019   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1025:1499   */\n    tag_19:\n        /* \"#utility.yul\":1093:1099   */\n      0x00\n        /* \"#utility.yul\":1101:1107   */\n      dup1\n        /* \"#utility.yul\":1150:1152   */\n      0x40\n        /* \"#utility.yul\":1138:1147   */\n      dup4\n        /* \"#utility.yul\":1129:1136   */\n      dup6\n        /* \"#utility.yul\":1125:1148   */\n      sub\n        /* \"#utility.yul\":1121:1153   */\n      slt\n        /* \"#utility.yul\":1118:1237   */\n      iszero\n      tag_136\n      jumpi\n        /* \"#utility.yul\":1156:1235   */\n      tag_137\n      tag_97\n      jump\t// in\n    tag_137:\n        /* \"#utility.yul\":1118:1237   */\n    tag_136:\n        /* \"#utility.yul\":1276:1277   */\n      0x00\n        /* \"#utility.yul\":1301:1354   */\n      tag_138\n        /* \"#utility.yul\":1346:1353   */\n      dup6\n        /* \"#utility.yul\":1337:1343   */\n      dup3\n        /* \"#utility.yul\":1326:1335   */\n      dup7\n        /* \"#utility.yul\":1322:1344   */\n      add\n        /* \"#utility.yul\":1301:1354   */\n      tag_101\n      jump\t// in\n    tag_138:\n        /* \"#utility.yul\":1291:1354   */\n      swap3\n      pop\n        /* \"#utility.yul\":1247:1364   */\n      pop\n        /* \"#utility.yul\":1403:1405   */\n      0x20\n        /* \"#utility.yul\":1429:1482   */\n      tag_139\n        /* \"#utility.yul\":1474:1481   */\n      dup6\n        /* \"#utility.yul\":1465:1471   */\n      dup3\n        /* \"#utility.yul\":1454:1463   */\n      dup7\n        /* \"#utility.yul\":1450:1472   */\n      add\n        /* \"#utility.yul\":1429:1482   */\n      tag_101\n      jump\t// in\n    tag_139:\n        /* \"#utility.yul\":1419:1482   */\n      swap2\n      pop\n        /* \"#utility.yul\":1374:1492   */\n      pop\n        /* \"#utility.yul\":1025:1499   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1505:1623   */\n    tag_102:\n        /* \"#utility.yul\":1592:1616   */\n      tag_141\n        /* \"#utility.yul\":1610:1615   */\n      dup2\n        /* \"#utility.yul\":1592:1616   */\n      tag_99\n      jump\t// in\n    tag_141:\n        /* \"#utility.yul\":1587:1590   */\n      dup3\n        /* \"#utility.yul\":1580:1617   */\n      mstore\n        /* \"#utility.yul\":1505:1623   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1629:1755   */\n    tag_103:\n        /* \"#utility.yul\":1666:1673   */\n      0x00\n        /* \"#utility.yul\":1706:1748   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1699:1704   */\n      dup3\n        /* \"#utility.yul\":1695:1749   */\n      and\n        /* \"#utility.yul\":1684:1749   */\n      swap1\n      pop\n        /* \"#utility.yul\":1629:1755   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1761:1857   */\n    tag_104:\n        /* \"#utility.yul\":1798:1805   */\n      0x00\n        /* \"#utility.yul\":1827:1851   */\n      tag_144\n        /* \"#utility.yul\":1845:1850   */\n      dup3\n        /* \"#utility.yul\":1827:1851   */\n      tag_103\n      jump\t// in\n    tag_144:\n        /* \"#utility.yul\":1816:1851   */\n      swap1\n      pop\n        /* \"#utility.yul\":1761:1857   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1863:1981   */\n    tag_105:\n        /* \"#utility.yul\":1950:1974   */\n      tag_146\n        /* \"#utility.yul\":1968:1973   */\n      dup2\n        /* \"#utility.yul\":1950:1974   */\n      tag_104\n      jump\t// in\n    tag_146:\n        /* \"#utility.yul\":1945:1948   */\n      dup3\n        /* \"#utility.yul\":1938:1975   */\n      mstore\n        /* \"#utility.yul\":1863:1981   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1987:2319   */\n    tag_22:\n        /* \"#utility.yul\":2108:2112   */\n      0x00\n        /* \"#utility.yul\":2146:2148   */\n      0x40\n        /* \"#utility.yul\":2135:2144   */\n      dup3\n        /* \"#utility.yul\":2131:2149   */\n      add\n        /* \"#utility.yul\":2123:2149   */\n      swap1\n      pop\n        /* \"#utility.yul\":2159:2230   */\n      tag_148\n        /* \"#utility.yul\":2227:2228   */\n      0x00\n        /* \"#utility.yul\":2216:2225   */\n      dup4\n        /* \"#utility.yul\":2212:2229   */\n      add\n        /* \"#utility.yul\":2203:2209   */\n      dup6\n        /* \"#utility.yul\":2159:2230   */\n      tag_102\n      jump\t// in\n    tag_148:\n        /* \"#utility.yul\":2240:2312   */\n      tag_149\n        /* \"#utility.yul\":2308:2310   */\n      0x20\n        /* \"#utility.yul\":2297:2306   */\n      dup4\n        /* \"#utility.yul\":2293:2311   */\n      add\n        /* \"#utility.yul\":2284:2290   */\n      dup5\n        /* \"#utility.yul\":2240:2312   */\n      tag_105\n      jump\t// in\n    tag_149:\n        /* \"#utility.yul\":1987:2319   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2325:2547   */\n    tag_26:\n        /* \"#utility.yul\":2418:2422   */\n      0x00\n        /* \"#utility.yul\":2456:2458   */\n      0x20\n        /* \"#utility.yul\":2445:2454   */\n      dup3\n        /* \"#utility.yul\":2441:2459   */\n      add\n        /* \"#utility.yul\":2433:2459   */\n      swap1\n      pop\n        /* \"#utility.yul\":2469:2540   */\n      tag_151\n        /* \"#utility.yul\":2537:2538   */\n      0x00\n        /* \"#utility.yul\":2526:2535   */\n      dup4\n        /* \"#utility.yul\":2522:2539   */\n      add\n        /* \"#utility.yul\":2513:2519   */\n      dup5\n        /* \"#utility.yul\":2469:2540   */\n      tag_105\n      jump\t// in\n    tag_151:\n        /* \"#utility.yul\":2325:2547   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2553:2675   */\n    tag_106:\n        /* \"#utility.yul\":2626:2650   */\n      tag_153\n        /* \"#utility.yul\":2644:2649   */\n      dup2\n        /* \"#utility.yul\":2626:2650   */\n      tag_104\n      jump\t// in\n    tag_153:\n        /* \"#utility.yul\":2619:2624   */\n      dup2\n        /* \"#utility.yul\":2616:2651   */\n      eq\n        /* \"#utility.yul\":2606:2669   */\n      tag_154\n      jumpi\n        /* \"#utility.yul\":2665:2666   */\n      0x00\n        /* \"#utility.yul\":2662:2663   */\n      dup1\n        /* \"#utility.yul\":2655:2667   */\n      revert\n        /* \"#utility.yul\":2606:2669   */\n    tag_154:\n        /* \"#utility.yul\":2553:2675   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2681:2820   */\n    tag_107:\n        /* \"#utility.yul\":2727:2732   */\n      0x00\n        /* \"#utility.yul\":2765:2771   */\n      dup2\n        /* \"#utility.yul\":2752:2772   */\n      calldataload\n        /* \"#utility.yul\":2743:2772   */\n      swap1\n      pop\n        /* \"#utility.yul\":2781:2814   */\n      tag_156\n        /* \"#utility.yul\":2808:2813   */\n      dup2\n        /* \"#utility.yul\":2781:2814   */\n      tag_106\n      jump\t// in\n    tag_156:\n        /* \"#utility.yul\":2681:2820   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2826:3155   */\n    tag_29:\n        /* \"#utility.yul\":2885:2891   */\n      0x00\n        /* \"#utility.yul\":2934:2936   */\n      0x20\n        /* \"#utility.yul\":2922:2931   */\n      dup3\n        /* \"#utility.yul\":2913:2920   */\n      dup5\n        /* \"#utility.yul\":2909:2932   */\n      sub\n        /* \"#utility.yul\":2905:2937   */\n      slt\n        /* \"#utility.yul\":2902:3021   */\n      iszero\n      tag_158\n      jumpi\n        /* \"#utility.yul\":2940:3019   */\n      tag_159\n      tag_97\n      jump\t// in\n    tag_159:\n        /* \"#utility.yul\":2902:3021   */\n    tag_158:\n        /* \"#utility.yul\":3060:3061   */\n      0x00\n        /* \"#utility.yul\":3085:3138   */\n      tag_160\n        /* \"#utility.yul\":3130:3137   */\n      dup5\n        /* \"#utility.yul\":3121:3127   */\n      dup3\n        /* \"#utility.yul\":3110:3119   */\n      dup6\n        /* \"#utility.yul\":3106:3128   */\n      add\n        /* \"#utility.yul\":3085:3138   */\n      tag_107\n      jump\t// in\n    tag_160:\n        /* \"#utility.yul\":3075:3138   */\n      swap2\n      pop\n        /* \"#utility.yul\":3031:3148   */\n      pop\n        /* \"#utility.yul\":2826:3155   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3161:3383   */\n    tag_35:\n        /* \"#utility.yul\":3254:3258   */\n      0x00\n        /* \"#utility.yul\":3292:3294   */\n      0x20\n        /* \"#utility.yul\":3281:3290   */\n      dup3\n        /* \"#utility.yul\":3277:3295   */\n      add\n        /* \"#utility.yul\":3269:3295   */\n      swap1\n      pop\n        /* \"#utility.yul\":3305:3376   */\n      tag_162\n        /* \"#utility.yul\":3373:3374   */\n      0x00\n        /* \"#utility.yul\":3362:3371   */\n      dup4\n        /* \"#utility.yul\":3358:3375   */\n      add\n        /* \"#utility.yul\":3349:3355   */\n      dup5\n        /* \"#utility.yul\":3305:3376   */\n      tag_102\n      jump\t// in\n    tag_162:\n        /* \"#utility.yul\":3161:3383   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3389:3449   */\n    tag_108:\n        /* \"#utility.yul\":3417:3420   */\n      0x00\n        /* \"#utility.yul\":3438:3443   */\n      dup2\n        /* \"#utility.yul\":3431:3443   */\n      swap1\n      pop\n        /* \"#utility.yul\":3389:3449   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3455:3597   */\n    tag_109:\n        /* \"#utility.yul\":3505:3514   */\n      0x00\n        /* \"#utility.yul\":3538:3591   */\n      tag_165\n        /* \"#utility.yul\":3556:3590   */\n      tag_166\n        /* \"#utility.yul\":3565:3589   */\n      tag_167\n        /* \"#utility.yul\":3583:3588   */\n      dup5\n        /* \"#utility.yul\":3565:3589   */\n      tag_103\n      jump\t// in\n    tag_167:\n        /* \"#utility.yul\":3556:3590   */\n      tag_108\n      jump\t// in\n    tag_166:\n        /* \"#utility.yul\":3538:3591   */\n      tag_103\n      jump\t// in\n    tag_165:\n        /* \"#utility.yul\":3525:3591   */\n      swap1\n      pop\n        /* \"#utility.yul\":3455:3597   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3603:3729   */\n    tag_110:\n        /* \"#utility.yul\":3653:3662   */\n      0x00\n        /* \"#utility.yul\":3686:3723   */\n      tag_169\n        /* \"#utility.yul\":3717:3722   */\n      dup3\n        /* \"#utility.yul\":3686:3723   */\n      tag_109\n      jump\t// in\n    tag_169:\n        /* \"#utility.yul\":3673:3723   */\n      swap1\n      pop\n        /* \"#utility.yul\":3603:3729   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3735:3874   */\n    tag_111:\n        /* \"#utility.yul\":3798:3807   */\n      0x00\n        /* \"#utility.yul\":3831:3868   */\n      tag_171\n        /* \"#utility.yul\":3862:3867   */\n      dup3\n        /* \"#utility.yul\":3831:3868   */\n      tag_110\n      jump\t// in\n    tag_171:\n        /* \"#utility.yul\":3818:3868   */\n      swap1\n      pop\n        /* \"#utility.yul\":3735:3874   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3880:4037   */\n    tag_112:\n        /* \"#utility.yul\":3980:4030   */\n      tag_173\n        /* \"#utility.yul\":4024:4029   */\n      dup2\n        /* \"#utility.yul\":3980:4030   */\n      tag_111\n      jump\t// in\n    tag_173:\n        /* \"#utility.yul\":3975:3978   */\n      dup3\n        /* \"#utility.yul\":3968:4031   */\n      mstore\n        /* \"#utility.yul\":3880:4037   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4043:4291   */\n    tag_39:\n        /* \"#utility.yul\":4149:4153   */\n      0x00\n        /* \"#utility.yul\":4187:4189   */\n      0x20\n        /* \"#utility.yul\":4176:4185   */\n      dup3\n        /* \"#utility.yul\":4172:4190   */\n      add\n        /* \"#utility.yul\":4164:4190   */\n      swap1\n      pop\n        /* \"#utility.yul\":4200:4284   */\n      tag_175\n        /* \"#utility.yul\":4281:4282   */\n      0x00\n        /* \"#utility.yul\":4270:4279   */\n      dup4\n        /* \"#utility.yul\":4266:4283   */\n      add\n        /* \"#utility.yul\":4257:4263   */\n      dup5\n        /* \"#utility.yul\":4200:4284   */\n      tag_112\n      jump\t// in\n    tag_175:\n        /* \"#utility.yul\":4043:4291   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4297:4466   */\n    tag_113:\n        /* \"#utility.yul\":4381:4392   */\n      0x00\n        /* \"#utility.yul\":4415:4421   */\n      dup3\n        /* \"#utility.yul\":4410:4413   */\n      dup3\n        /* \"#utility.yul\":4403:4422   */\n      mstore\n        /* \"#utility.yul\":4455:4459   */\n      0x20\n        /* \"#utility.yul\":4450:4453   */\n      dup3\n        /* \"#utility.yul\":4446:4460   */\n      add\n        /* \"#utility.yul\":4431:4460   */\n      swap1\n      pop\n        /* \"#utility.yul\":4297:4466   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4472:4631   */\n    tag_114:\n        /* \"#utility.yul\":4612:4623   */\n      0x4e6f74206f776e65720000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4608:4609   */\n      0x00\n        /* \"#utility.yul\":4600:4606   */\n      dup3\n        /* \"#utility.yul\":4596:4610   */\n      add\n        /* \"#utility.yul\":4589:4624   */\n      mstore\n        /* \"#utility.yul\":4472:4631   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4637:5002   */\n    tag_115:\n        /* \"#utility.yul\":4779:4782   */\n      0x00\n        /* \"#utility.yul\":4800:4866   */\n      tag_179\n        /* \"#utility.yul\":4864:4865   */\n      0x09\n        /* \"#utility.yul\":4859:4862   */\n      dup4\n        /* \"#utility.yul\":4800:4866   */\n      tag_113\n      jump\t// in\n    tag_179:\n        /* \"#utility.yul\":4793:4866   */\n      swap2\n      pop\n        /* \"#utility.yul\":4875:4968   */\n      tag_180\n        /* \"#utility.yul\":4964:4967   */\n      dup3\n        /* \"#utility.yul\":4875:4968   */\n      tag_114\n      jump\t// in\n    tag_180:\n        /* \"#utility.yul\":4993:4995   */\n      0x20\n        /* \"#utility.yul\":4988:4991   */\n      dup3\n        /* \"#utility.yul\":4984:4996   */\n      add\n        /* \"#utility.yul\":4977:4996   */\n      swap1\n      pop\n        /* \"#utility.yul\":4637:5002   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5008:5427   */\n    tag_43:\n        /* \"#utility.yul\":5174:5178   */\n      0x00\n        /* \"#utility.yul\":5212:5214   */\n      0x20\n        /* \"#utility.yul\":5201:5210   */\n      dup3\n        /* \"#utility.yul\":5197:5215   */\n      add\n        /* \"#utility.yul\":5189:5215   */\n      swap1\n      pop\n        /* \"#utility.yul\":5261:5270   */\n      dup2\n        /* \"#utility.yul\":5255:5259   */\n      dup2\n        /* \"#utility.yul\":5251:5271   */\n      sub\n        /* \"#utility.yul\":5247:5248   */\n      0x00\n        /* \"#utility.yul\":5236:5245   */\n      dup4\n        /* \"#utility.yul\":5232:5249   */\n      add\n        /* \"#utility.yul\":5225:5272   */\n      mstore\n        /* \"#utility.yul\":5289:5420   */\n      tag_182\n        /* \"#utility.yul\":5415:5419   */\n      dup2\n        /* \"#utility.yul\":5289:5420   */\n      tag_115\n      jump\t// in\n    tag_182:\n        /* \"#utility.yul\":5281:5420   */\n      swap1\n      pop\n        /* \"#utility.yul\":5008:5427   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5433:5875   */\n    tag_46:\n        /* \"#utility.yul\":5582:5586   */\n      0x00\n        /* \"#utility.yul\":5620:5622   */\n      0x60\n        /* \"#utility.yul\":5609:5618   */\n      dup3\n        /* \"#utility.yul\":5605:5623   */\n      add\n        /* \"#utility.yul\":5597:5623   */\n      swap1\n      pop\n        /* \"#utility.yul\":5633:5704   */\n      tag_184\n        /* \"#utility.yul\":5701:5702   */\n      0x00\n        /* \"#utility.yul\":5690:5699   */\n      dup4\n        /* \"#utility.yul\":5686:5703   */\n      add\n        /* \"#utility.yul\":5677:5683   */\n      dup7\n        /* \"#utility.yul\":5633:5704   */\n      tag_105\n      jump\t// in\n    tag_184:\n        /* \"#utility.yul\":5714:5786   */\n      tag_185\n        /* \"#utility.yul\":5782:5784   */\n      0x20\n        /* \"#utility.yul\":5771:5780   */\n      dup4\n        /* \"#utility.yul\":5767:5785   */\n      add\n        /* \"#utility.yul\":5758:5764   */\n      dup6\n        /* \"#utility.yul\":5714:5786   */\n      tag_105\n      jump\t// in\n    tag_185:\n        /* \"#utility.yul\":5796:5868   */\n      tag_186\n        /* \"#utility.yul\":5864:5866   */\n      0x40\n        /* \"#utility.yul\":5853:5862   */\n      dup4\n        /* \"#utility.yul\":5849:5867   */\n      add\n        /* \"#utility.yul\":5840:5846   */\n      dup5\n        /* \"#utility.yul\":5796:5868   */\n      tag_102\n      jump\t// in\n    tag_186:\n        /* \"#utility.yul\":5433:5875   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5881:5971   */\n    tag_116:\n        /* \"#utility.yul\":5915:5922   */\n      0x00\n        /* \"#utility.yul\":5958:5963   */\n      dup2\n        /* \"#utility.yul\":5951:5964   */\n      iszero\n        /* \"#utility.yul\":5944:5965   */\n      iszero\n        /* \"#utility.yul\":5933:5965   */\n      swap1\n      pop\n        /* \"#utility.yul\":5881:5971   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5977:6093   */\n    tag_117:\n        /* \"#utility.yul\":6047:6068   */\n      tag_189\n        /* \"#utility.yul\":6062:6067   */\n      dup2\n        /* \"#utility.yul\":6047:6068   */\n      tag_116\n      jump\t// in\n    tag_189:\n        /* \"#utility.yul\":6040:6045   */\n      dup2\n        /* \"#utility.yul\":6037:6069   */\n      eq\n        /* \"#utility.yul\":6027:6087   */\n      tag_190\n      jumpi\n        /* \"#utility.yul\":6083:6084   */\n      0x00\n        /* \"#utility.yul\":6080:6081   */\n      dup1\n        /* \"#utility.yul\":6073:6085   */\n      revert\n        /* \"#utility.yul\":6027:6087   */\n    tag_190:\n        /* \"#utility.yul\":5977:6093   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6099:6236   */\n    tag_118:\n        /* \"#utility.yul\":6153:6158   */\n      0x00\n        /* \"#utility.yul\":6184:6190   */\n      dup2\n        /* \"#utility.yul\":6178:6191   */\n      mload\n        /* \"#utility.yul\":6169:6191   */\n      swap1\n      pop\n        /* \"#utility.yul\":6200:6230   */\n      tag_192\n        /* \"#utility.yul\":6224:6229   */\n      dup2\n        /* \"#utility.yul\":6200:6230   */\n      tag_117\n      jump\t// in\n    tag_192:\n        /* \"#utility.yul\":6099:6236   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6242:6587   */\n    tag_50:\n        /* \"#utility.yul\":6309:6315   */\n      0x00\n        /* \"#utility.yul\":6358:6360   */\n      0x20\n        /* \"#utility.yul\":6346:6355   */\n      dup3\n        /* \"#utility.yul\":6337:6344   */\n      dup5\n        /* \"#utility.yul\":6333:6356   */\n      sub\n        /* \"#utility.yul\":6329:6361   */\n      slt\n        /* \"#utility.yul\":6326:6445   */\n      iszero\n      tag_194\n      jumpi\n        /* \"#utility.yul\":6364:6443   */\n      tag_195\n      tag_97\n      jump\t// in\n    tag_195:\n        /* \"#utility.yul\":6326:6445   */\n    tag_194:\n        /* \"#utility.yul\":6484:6485   */\n      0x00\n        /* \"#utility.yul\":6509:6570   */\n      tag_196\n        /* \"#utility.yul\":6562:6569   */\n      dup5\n        /* \"#utility.yul\":6553:6559   */\n      dup3\n        /* \"#utility.yul\":6542:6551   */\n      dup6\n        /* \"#utility.yul\":6538:6560   */\n      add\n        /* \"#utility.yul\":6509:6570   */\n      tag_118\n      jump\t// in\n    tag_196:\n        /* \"#utility.yul\":6499:6570   */\n      swap2\n      pop\n        /* \"#utility.yul\":6455:6580   */\n      pop\n        /* \"#utility.yul\":6242:6587   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6593:6773   */\n    tag_119:\n        /* \"#utility.yul\":6641:6718   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6638:6639   */\n      0x00\n        /* \"#utility.yul\":6631:6719   */\n      mstore\n        /* \"#utility.yul\":6738:6742   */\n      0x11\n        /* \"#utility.yul\":6735:6736   */\n      0x04\n        /* \"#utility.yul\":6728:6743   */\n      mstore\n        /* \"#utility.yul\":6762:6766   */\n      0x24\n        /* \"#utility.yul\":6759:6760   */\n      0x00\n        /* \"#utility.yul\":6752:6767   */\n      revert\n        /* \"#utility.yul\":6779:6970   */\n    tag_57:\n        /* \"#utility.yul\":6819:6822   */\n      0x00\n        /* \"#utility.yul\":6838:6858   */\n      tag_199\n        /* \"#utility.yul\":6856:6857   */\n      dup3\n        /* \"#utility.yul\":6838:6858   */\n      tag_99\n      jump\t// in\n    tag_199:\n        /* \"#utility.yul\":6833:6858   */\n      swap2\n      pop\n        /* \"#utility.yul\":6872:6892   */\n      tag_200\n        /* \"#utility.yul\":6890:6891   */\n      dup4\n        /* \"#utility.yul\":6872:6892   */\n      tag_99\n      jump\t// in\n    tag_200:\n        /* \"#utility.yul\":6867:6892   */\n      swap3\n      pop\n        /* \"#utility.yul\":6915:6916   */\n      dup3\n        /* \"#utility.yul\":6912:6913   */\n      dup3\n        /* \"#utility.yul\":6908:6917   */\n      add\n        /* \"#utility.yul\":6901:6917   */\n      swap1\n      pop\n        /* \"#utility.yul\":6936:6939   */\n      dup1\n        /* \"#utility.yul\":6933:6934   */\n      dup3\n        /* \"#utility.yul\":6930:6940   */\n      gt\n        /* \"#utility.yul\":6927:6963   */\n      iszero\n      tag_201\n      jumpi\n        /* \"#utility.yul\":6943:6961   */\n      tag_202\n      tag_119\n      jump\t// in\n    tag_202:\n        /* \"#utility.yul\":6927:6963   */\n    tag_201:\n        /* \"#utility.yul\":6779:6970   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6976:7308   */\n    tag_62:\n        /* \"#utility.yul\":7097:7101   */\n      0x00\n        /* \"#utility.yul\":7135:7137   */\n      0x40\n        /* \"#utility.yul\":7124:7133   */\n      dup3\n        /* \"#utility.yul\":7120:7138   */\n      add\n        /* \"#utility.yul\":7112:7138   */\n      swap1\n      pop\n        /* \"#utility.yul\":7148:7219   */\n      tag_204\n        /* \"#utility.yul\":7216:7217   */\n      0x00\n        /* \"#utility.yul\":7205:7214   */\n      dup4\n        /* \"#utility.yul\":7201:7218   */\n      add\n        /* \"#utility.yul\":7192:7198   */\n      dup6\n        /* \"#utility.yul\":7148:7219   */\n      tag_105\n      jump\t// in\n    tag_204:\n        /* \"#utility.yul\":7229:7301   */\n      tag_205\n        /* \"#utility.yul\":7297:7299   */\n      0x20\n        /* \"#utility.yul\":7286:7295   */\n      dup4\n        /* \"#utility.yul\":7282:7300   */\n      add\n        /* \"#utility.yul\":7273:7279   */\n      dup5\n        /* \"#utility.yul\":7229:7301   */\n      tag_102\n      jump\t// in\n    tag_205:\n        /* \"#utility.yul\":6976:7308   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7314:7724   */\n    tag_75:\n        /* \"#utility.yul\":7354:7361   */\n      0x00\n        /* \"#utility.yul\":7377:7397   */\n      tag_207\n        /* \"#utility.yul\":7395:7396   */\n      dup3\n        /* \"#utility.yul\":7377:7397   */\n      tag_99\n      jump\t// in\n    tag_207:\n        /* \"#utility.yul\":7372:7397   */\n      swap2\n      pop\n        /* \"#utility.yul\":7411:7431   */\n      tag_208\n        /* \"#utility.yul\":7429:7430   */\n      dup4\n        /* \"#utility.yul\":7411:7431   */\n      tag_99\n      jump\t// in\n    tag_208:\n        /* \"#utility.yul\":7406:7431   */\n      swap3\n      pop\n        /* \"#utility.yul\":7466:7467   */\n      dup3\n        /* \"#utility.yul\":7463:7464   */\n      dup3\n        /* \"#utility.yul\":7459:7468   */\n      mul\n        /* \"#utility.yul\":7488:7518   */\n      tag_209\n        /* \"#utility.yul\":7506:7517   */\n      dup2\n        /* \"#utility.yul\":7488:7518   */\n      tag_99\n      jump\t// in\n    tag_209:\n        /* \"#utility.yul\":7477:7518   */\n      swap2\n      pop\n        /* \"#utility.yul\":7667:7668   */\n      dup3\n        /* \"#utility.yul\":7658:7665   */\n      dup3\n        /* \"#utility.yul\":7654:7669   */\n      div\n        /* \"#utility.yul\":7651:7652   */\n      dup5\n        /* \"#utility.yul\":7648:7670   */\n      eq\n        /* \"#utility.yul\":7628:7629   */\n      dup4\n        /* \"#utility.yul\":7621:7630   */\n      iszero\n        /* \"#utility.yul\":7601:7684   */\n      or\n        /* \"#utility.yul\":7578:7717   */\n      tag_210\n      jumpi\n        /* \"#utility.yul\":7697:7715   */\n      tag_211\n      tag_119\n      jump\t// in\n    tag_211:\n        /* \"#utility.yul\":7578:7717   */\n    tag_210:\n        /* \"#utility.yul\":7362:7724   */\n      pop\n        /* \"#utility.yul\":7314:7724   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7730:8062   */\n    tag_77:\n        /* \"#utility.yul\":7851:7855   */\n      0x00\n        /* \"#utility.yul\":7889:7891   */\n      0x40\n        /* \"#utility.yul\":7878:7887   */\n      dup3\n        /* \"#utility.yul\":7874:7892   */\n      add\n        /* \"#utility.yul\":7866:7892   */\n      swap1\n      pop\n        /* \"#utility.yul\":7902:7973   */\n      tag_213\n        /* \"#utility.yul\":7970:7971   */\n      0x00\n        /* \"#utility.yul\":7959:7968   */\n      dup4\n        /* \"#utility.yul\":7955:7972   */\n      add\n        /* \"#utility.yul\":7946:7952   */\n      dup6\n        /* \"#utility.yul\":7902:7973   */\n      tag_102\n      jump\t// in\n    tag_213:\n        /* \"#utility.yul\":7983:8055   */\n      tag_214\n        /* \"#utility.yul\":8051:8053   */\n      0x20\n        /* \"#utility.yul\":8040:8049   */\n      dup4\n        /* \"#utility.yul\":8036:8054   */\n      add\n        /* \"#utility.yul\":8027:8033   */\n      dup5\n        /* \"#utility.yul\":7983:8055   */\n      tag_102\n      jump\t// in\n    tag_214:\n        /* \"#utility.yul\":7730:8062   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8068:8248   */\n    tag_120:\n        /* \"#utility.yul\":8116:8193   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8113:8114   */\n      0x00\n        /* \"#utility.yul\":8106:8194   */\n      mstore\n        /* \"#utility.yul\":8213:8217   */\n      0x12\n        /* \"#utility.yul\":8210:8211   */\n      0x04\n        /* \"#utility.yul\":8203:8218   */\n      mstore\n        /* \"#utility.yul\":8237:8241   */\n      0x24\n        /* \"#utility.yul\":8234:8235   */\n      0x00\n        /* \"#utility.yul\":8227:8242   */\n      revert\n        /* \"#utility.yul\":8254:8439   */\n    tag_92:\n        /* \"#utility.yul\":8294:8295   */\n      0x00\n        /* \"#utility.yul\":8311:8331   */\n      tag_217\n        /* \"#utility.yul\":8329:8330   */\n      dup3\n        /* \"#utility.yul\":8311:8331   */\n      tag_99\n      jump\t// in\n    tag_217:\n        /* \"#utility.yul\":8306:8331   */\n      swap2\n      pop\n        /* \"#utility.yul\":8345:8365   */\n      tag_218\n        /* \"#utility.yul\":8363:8364   */\n      dup4\n        /* \"#utility.yul\":8345:8365   */\n      tag_99\n      jump\t// in\n    tag_218:\n        /* \"#utility.yul\":8340:8365   */\n      swap3\n      pop\n        /* \"#utility.yul\":8384:8385   */\n      dup3\n        /* \"#utility.yul\":8374:8409   */\n      tag_219\n      jumpi\n        /* \"#utility.yul\":8389:8407   */\n      tag_220\n      tag_120\n      jump\t// in\n    tag_220:\n        /* \"#utility.yul\":8374:8409   */\n    tag_219:\n        /* \"#utility.yul\":8431:8432   */\n      dup3\n        /* \"#utility.yul\":8428:8429   */\n      dup3\n        /* \"#utility.yul\":8424:8433   */\n      div\n        /* \"#utility.yul\":8419:8433   */\n      swap1\n      pop\n        /* \"#utility.yul\":8254:8439   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220c585afa8d2e633c3ae3089588eb5a51e7ab3b0b0d1b834390f54e02bc9923c9564736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_192": {
									"entryPoint": null,
									"id": 192,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60a0604052348015600e575f80fd5b505f73d9145cce52d386f254917e481eb44e9943f3913890508073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1681525050335f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050608051610f2c6100cf5f395f81816101f00152818161040d015281816105460152818161088a015261097c0152610f2c5ff3fe608060405234801561000f575f80fd5b506004361061007b575f3560e01c80638da5cb5b116100595780638da5cb5b146100d6578063a23c44b1146100f4578063b88a802f14610125578063fc0c546a146101435761007b565b8063141833dc1461007f57806373cf575a1461009b5780637b0472f0146100a5575b5f80fd5b61009960048036038101906100949190610ac4565b610161565b005b6100a36102dd565b005b6100bf60048036038101906100ba9190610aef565b6104fa565b6040516100cd929190610b7b565b60405180910390f35b6100de6106f4565b6040516100eb9190610ba2565b60405180910390f35b61010e60048036038101906101099190610be5565b610717565b60405161011c929190610b7b565b60405180910390f35b61012d6107aa565b60405161013a9190610c10565b60405180910390f35b61014b61097a565b6040516101589190610c84565b60405180910390f35b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146101ee576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101e590610cf7565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b815260040161024b93929190610d15565b6020604051808303815f875af1158015610267573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061028b9190610d7f565b503373ffffffffffffffffffffffffffffffffffffffff167fc286f3b83e4f244dafdd6f12a30c1792eb5c99ba0ee6cb1181aaf6eac30286e8826040516102d29190610c10565b60405180910390a250565b5f60015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2090505f815f015403610359576040517f59be8f0200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f6103633361099e565b90505f81835f01546103759190610dd7565b90508260020154836001015461038b9190610dd7565b4210801561039857505f82115b156103a457825f015490505b60015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8082015f9055600182015f9055600282015f9055600382015f6101000a81549060ff021916905550507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610466929190610e0a565b6020604051808303815f875af1158015610482573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104a69190610d7f565b503373ffffffffffffffffffffffffffffffffffffffff167f0f5bb82176feb1b5e747e28471aa92156a04d9f3ab9f45f28e2d704232b93f75826040516104ed9190610c10565b60405180910390a2505050565b5f805f80600185108061050d5750600385115b15610544576040517f7616640100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330896040518463ffffffff1660e01b81526004016105a193929190610d15565b6020604051808303815f875af11580156105bd573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906105e19190610d7f565b5060405180608001604052808781526020014281526020016301e13380876106099190610e31565b81526020015f151581525060015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f820151815f015560208201518160010155604082015181600201556060820151816003015f6101000a81548160ff0219169083151502179055509050503373ffffffffffffffffffffffffffffffffffffffff167f1449c6dd7851abc30abf37f57715f492010519147cc2652fbc38202c18a6ee9087876040516106d7929190610e72565b60405180910390a285915033905081819350935050509250929050565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f805f60015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206040518060800160405290815f82015481526020016001820154815260200160028201548152602001600382015f9054906101000a900460ff1615151515815250509050805f0151849250925050915091565b5f8060015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2090505f815f015403610827576040517f59be8f0200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f6108313361099e565b90505f810361086c576040517fa5a3111c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001826003015f6101000a81548160ff0219169083151502179055507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b81526004016108e3929190610e0a565b6020604051808303815f875af11580156108ff573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906109239190610d7f565b503373ffffffffffffffffffffffffffffffffffffffff167ffc30cddea38e2bf4d6ea7d3f9ed3b6ad7f176419f4963bd81318067a4aee73fe8260405161096a9190610c10565b60405180910390a2809250505090565b7f000000000000000000000000000000000000000000000000000000000000000081565b5f8060015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206040518060800160405290815f82015481526020016001820154815260200160028201548152602001600382015f9054906101000a900460ff161515151581525050905080604001518160200151610a359190610dd7565b421015610a45575f915050610a88565b5f60196301e133808360400151610a5c9190610ec6565b610a669190610e31565b9050606481835f0151610a799190610e31565b610a839190610ec6565b925050505b919050565b5f80fd5b5f819050919050565b610aa381610a91565b8114610aad575f80fd5b50565b5f81359050610abe81610a9a565b92915050565b5f60208284031215610ad957610ad8610a8d565b5b5f610ae684828501610ab0565b91505092915050565b5f8060408385031215610b0557610b04610a8d565b5b5f610b1285828601610ab0565b9250506020610b2385828601610ab0565b9150509250929050565b610b3681610a91565b82525050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610b6582610b3c565b9050919050565b610b7581610b5b565b82525050565b5f604082019050610b8e5f830185610b2d565b610b9b6020830184610b6c565b9392505050565b5f602082019050610bb55f830184610b6c565b92915050565b610bc481610b5b565b8114610bce575f80fd5b50565b5f81359050610bdf81610bbb565b92915050565b5f60208284031215610bfa57610bf9610a8d565b5b5f610c0784828501610bd1565b91505092915050565b5f602082019050610c235f830184610b2d565b92915050565b5f819050919050565b5f610c4c610c47610c4284610b3c565b610c29565b610b3c565b9050919050565b5f610c5d82610c32565b9050919050565b5f610c6e82610c53565b9050919050565b610c7e81610c64565b82525050565b5f602082019050610c975f830184610c75565b92915050565b5f82825260208201905092915050565b7f4e6f74206f776e657200000000000000000000000000000000000000000000005f82015250565b5f610ce1600983610c9d565b9150610cec82610cad565b602082019050919050565b5f6020820190508181035f830152610d0e81610cd5565b9050919050565b5f606082019050610d285f830186610b6c565b610d356020830185610b6c565b610d426040830184610b2d565b949350505050565b5f8115159050919050565b610d5e81610d4a565b8114610d68575f80fd5b50565b5f81519050610d7981610d55565b92915050565b5f60208284031215610d9457610d93610a8d565b5b5f610da184828501610d6b565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610de182610a91565b9150610dec83610a91565b9250828201905080821115610e0457610e03610daa565b5b92915050565b5f604082019050610e1d5f830185610b6c565b610e2a6020830184610b2d565b9392505050565b5f610e3b82610a91565b9150610e4683610a91565b9250828202610e5481610a91565b91508282048414831517610e6b57610e6a610daa565b5b5092915050565b5f604082019050610e855f830185610b2d565b610e926020830184610b2d565b9392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f610ed082610a91565b9150610edb83610a91565b925082610eeb57610eea610e99565b5b82820490509291505056fea2646970667358221220c585afa8d2e633c3ae3089588eb5a51e7ab3b0b0d1b834390f54e02bc9923c9564736f6c634300081a0033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH0 PUSH20 0xD9145CCE52D386F254917E481EB44E9943F39138 SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP CALLER PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH1 0x80 MLOAD PUSH2 0xF2C PUSH2 0xCF PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0x1F0 ADD MSTORE DUP2 DUP2 PUSH2 0x40D ADD MSTORE DUP2 DUP2 PUSH2 0x546 ADD MSTORE DUP2 DUP2 PUSH2 0x88A ADD MSTORE PUSH2 0x97C ADD MSTORE PUSH2 0xF2C PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7B JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x59 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xD6 JUMPI DUP1 PUSH4 0xA23C44B1 EQ PUSH2 0xF4 JUMPI DUP1 PUSH4 0xB88A802F EQ PUSH2 0x125 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x143 JUMPI PUSH2 0x7B JUMP JUMPDEST DUP1 PUSH4 0x141833DC EQ PUSH2 0x7F JUMPI DUP1 PUSH4 0x73CF575A EQ PUSH2 0x9B JUMPI DUP1 PUSH4 0x7B0472F0 EQ PUSH2 0xA5 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x99 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x94 SWAP2 SWAP1 PUSH2 0xAC4 JUMP JUMPDEST PUSH2 0x161 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xA3 PUSH2 0x2DD JUMP JUMPDEST STOP JUMPDEST PUSH2 0xBF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xBA SWAP2 SWAP1 PUSH2 0xAEF JUMP JUMPDEST PUSH2 0x4FA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCD SWAP3 SWAP2 SWAP1 PUSH2 0xB7B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDE PUSH2 0x6F4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xEB SWAP2 SWAP1 PUSH2 0xBA2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x109 SWAP2 SWAP1 PUSH2 0xBE5 JUMP JUMPDEST PUSH2 0x717 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11C SWAP3 SWAP2 SWAP1 PUSH2 0xB7B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x12D PUSH2 0x7AA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13A SWAP2 SWAP1 PUSH2 0xC10 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x14B PUSH2 0x97A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x158 SWAP2 SWAP1 PUSH2 0xC84 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1EE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E5 SWAP1 PUSH2 0xCF7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x24B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xD15 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x267 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x28B SWAP2 SWAP1 PUSH2 0xD7F JUMP JUMPDEST POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC286F3B83E4F244DAFDD6F12A30C1792EB5C99BA0EE6CB1181AAF6EAC30286E8 DUP3 PUSH1 0x40 MLOAD PUSH2 0x2D2 SWAP2 SWAP1 PUSH2 0xC10 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH0 DUP2 PUSH0 ADD SLOAD SUB PUSH2 0x359 JUMPI PUSH1 0x40 MLOAD PUSH32 0x59BE8F0200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x363 CALLER PUSH2 0x99E JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 DUP4 PUSH0 ADD SLOAD PUSH2 0x375 SWAP2 SWAP1 PUSH2 0xDD7 JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x2 ADD SLOAD DUP4 PUSH1 0x1 ADD SLOAD PUSH2 0x38B SWAP2 SWAP1 PUSH2 0xDD7 JUMP JUMPDEST TIMESTAMP LT DUP1 ISZERO PUSH2 0x398 JUMPI POP PUSH0 DUP3 GT JUMPDEST ISZERO PUSH2 0x3A4 JUMPI DUP3 PUSH0 ADD SLOAD SWAP1 POP JUMPDEST PUSH1 0x1 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP1 DUP3 ADD PUSH0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH0 SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH0 SWAP1 SSTORE PUSH1 0x3 DUP3 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE POP POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x466 SWAP3 SWAP2 SWAP1 PUSH2 0xE0A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x482 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4A6 SWAP2 SWAP1 PUSH2 0xD7F JUMP JUMPDEST POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF5BB82176FEB1B5E747E28471AA92156A04D9F3AB9F45F28E2D704232B93F75 DUP3 PUSH1 0x40 MLOAD PUSH2 0x4ED SWAP2 SWAP1 PUSH2 0xC10 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x1 DUP6 LT DUP1 PUSH2 0x50D JUMPI POP PUSH1 0x3 DUP6 GT JUMPDEST ISZERO PUSH2 0x544 JUMPI PUSH1 0x40 MLOAD PUSH32 0x7616640100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP10 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5A1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xD15 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5BD JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5E1 SWAP2 SWAP1 PUSH2 0xD7F JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 DUP8 DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD PUSH4 0x1E13380 DUP8 PUSH2 0x609 SWAP2 SWAP1 PUSH2 0xE31 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH0 ISZERO ISZERO DUP2 MSTORE POP PUSH1 0x1 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x1449C6DD7851ABC30ABF37F57715F492010519147CC2652FBC38202C18A6EE90 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0x6D7 SWAP3 SWAP2 SWAP1 PUSH2 0xE72 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 DUP6 SWAP2 POP CALLER SWAP1 POP DUP2 DUP2 SWAP4 POP SWAP4 POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP SWAP1 POP DUP1 PUSH0 ADD MLOAD DUP5 SWAP3 POP SWAP3 POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x1 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH0 DUP2 PUSH0 ADD SLOAD SUB PUSH2 0x827 JUMPI PUSH1 0x40 MLOAD PUSH32 0x59BE8F0200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x831 CALLER PUSH2 0x99E JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 SUB PUSH2 0x86C JUMPI PUSH1 0x40 MLOAD PUSH32 0xA5A3111C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x3 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8E3 SWAP3 SWAP2 SWAP1 PUSH2 0xE0A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x8FF JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x923 SWAP2 SWAP1 PUSH2 0xD7F JUMP JUMPDEST POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xFC30CDDEA38E2BF4D6EA7D3F9ED3B6AD7F176419F4963BD81318067A4AEE73FE DUP3 PUSH1 0x40 MLOAD PUSH2 0x96A SWAP2 SWAP1 PUSH2 0xC10 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 DUP1 SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP SWAP1 POP DUP1 PUSH1 0x40 ADD MLOAD DUP2 PUSH1 0x20 ADD MLOAD PUSH2 0xA35 SWAP2 SWAP1 PUSH2 0xDD7 JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0xA45 JUMPI PUSH0 SWAP2 POP POP PUSH2 0xA88 JUMP JUMPDEST PUSH0 PUSH1 0x19 PUSH4 0x1E13380 DUP4 PUSH1 0x40 ADD MLOAD PUSH2 0xA5C SWAP2 SWAP1 PUSH2 0xEC6 JUMP JUMPDEST PUSH2 0xA66 SWAP2 SWAP1 PUSH2 0xE31 JUMP JUMPDEST SWAP1 POP PUSH1 0x64 DUP2 DUP4 PUSH0 ADD MLOAD PUSH2 0xA79 SWAP2 SWAP1 PUSH2 0xE31 JUMP JUMPDEST PUSH2 0xA83 SWAP2 SWAP1 PUSH2 0xEC6 JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAA3 DUP2 PUSH2 0xA91 JUMP JUMPDEST DUP2 EQ PUSH2 0xAAD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xABE DUP2 PUSH2 0xA9A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xAD9 JUMPI PUSH2 0xAD8 PUSH2 0xA8D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xAE6 DUP5 DUP3 DUP6 ADD PUSH2 0xAB0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB05 JUMPI PUSH2 0xB04 PUSH2 0xA8D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xB12 DUP6 DUP3 DUP7 ADD PUSH2 0xAB0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xB23 DUP6 DUP3 DUP7 ADD PUSH2 0xAB0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xB36 DUP2 PUSH2 0xA91 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xB65 DUP3 PUSH2 0xB3C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB75 DUP2 PUSH2 0xB5B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xB8E PUSH0 DUP4 ADD DUP6 PUSH2 0xB2D JUMP JUMPDEST PUSH2 0xB9B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xB6C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xBB5 PUSH0 DUP4 ADD DUP5 PUSH2 0xB6C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xBC4 DUP2 PUSH2 0xB5B JUMP JUMPDEST DUP2 EQ PUSH2 0xBCE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBDF DUP2 PUSH2 0xBBB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBFA JUMPI PUSH2 0xBF9 PUSH2 0xA8D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xC07 DUP5 DUP3 DUP6 ADD PUSH2 0xBD1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC23 PUSH0 DUP4 ADD DUP5 PUSH2 0xB2D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xC4C PUSH2 0xC47 PUSH2 0xC42 DUP5 PUSH2 0xB3C JUMP JUMPDEST PUSH2 0xC29 JUMP JUMPDEST PUSH2 0xB3C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xC5D DUP3 PUSH2 0xC32 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xC6E DUP3 PUSH2 0xC53 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC7E DUP2 PUSH2 0xC64 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC97 PUSH0 DUP4 ADD DUP5 PUSH2 0xC75 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F74206F776E65720000000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xCE1 PUSH1 0x9 DUP4 PUSH2 0xC9D JUMP JUMPDEST SWAP2 POP PUSH2 0xCEC DUP3 PUSH2 0xCAD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xD0E DUP2 PUSH2 0xCD5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xD28 PUSH0 DUP4 ADD DUP7 PUSH2 0xB6C JUMP JUMPDEST PUSH2 0xD35 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xB6C JUMP JUMPDEST PUSH2 0xD42 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xB2D JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD5E DUP2 PUSH2 0xD4A JUMP JUMPDEST DUP2 EQ PUSH2 0xD68 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xD79 DUP2 PUSH2 0xD55 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD94 JUMPI PUSH2 0xD93 PUSH2 0xA8D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xDA1 DUP5 DUP3 DUP6 ADD PUSH2 0xD6B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xDE1 DUP3 PUSH2 0xA91 JUMP JUMPDEST SWAP2 POP PUSH2 0xDEC DUP4 PUSH2 0xA91 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xE04 JUMPI PUSH2 0xE03 PUSH2 0xDAA JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xE1D PUSH0 DUP4 ADD DUP6 PUSH2 0xB6C JUMP JUMPDEST PUSH2 0xE2A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xB2D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xE3B DUP3 PUSH2 0xA91 JUMP JUMPDEST SWAP2 POP PUSH2 0xE46 DUP4 PUSH2 0xA91 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0xE54 DUP2 PUSH2 0xA91 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0xE6B JUMPI PUSH2 0xE6A PUSH2 0xDAA JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xE85 PUSH0 DUP4 ADD DUP6 PUSH2 0xB2D JUMP JUMPDEST PUSH2 0xE92 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xB2D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xED0 DUP3 PUSH2 0xA91 JUMP JUMPDEST SWAP2 POP PUSH2 0xEDB DUP4 PUSH2 0xA91 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xEEB JUMPI PUSH2 0xEEA PUSH2 0xE99 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC5 DUP6 0xAF 0xA8 0xD2 0xE6 CALLER 0xC3 0xAE ADDRESS DUP10 PC DUP15 0xB5 0xA5 0x1E PUSH27 0xB3B0B0D1B834390F54E02BC9923C9564736F6C634300081A003300 ",
							"sourceMap": "110:4354:2:-:0;;;273:268;;;;;;;;;;297:21;329:42;297:75;;419:13;404:29;;;;;;;;;;495:10;487:5;;:18;;;;;;;;;;;;;;;;;;287:254;110:4354;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@calculateReward_348": {
									"entryPoint": 2462,
									"id": 348,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@claimReward_409": {
									"entryPoint": 1962,
									"id": 409,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getStaker_507": {
									"entryPoint": 1815,
									"id": 507,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"@ownerDeposit_302": {
									"entryPoint": 353,
									"id": 302,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@owner_170": {
									"entryPoint": 1780,
									"id": 170,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@stake_275": {
									"entryPoint": 1274,
									"id": 275,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"@token_168": {
									"entryPoint": 2426,
									"id": 168,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@unStake_484": {
									"entryPoint": 733,
									"id": 484,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 3025,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 3435,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 2736,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3045,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 3455,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 2756,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 2799,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2924,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC20_$77_to_t_address_fromStack": {
									"entryPoint": 3189,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_c266efca4f4ed37612271196433531dcbb4fca89a694d568d1e290e32feb1682_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3285,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2861,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2978,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 3349,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 3594,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$77__to_t_address__fromStack_reversed": {
									"entryPoint": 3204,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c266efca4f4ed37612271196433531dcbb4fca89a694d568d1e290e32feb1682__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3319,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3088,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_address__to_t_uint256_t_address__fromStack_reversed": {
									"entryPoint": 2939,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 3698,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 3229,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3543,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 3782,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 3633,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 2907,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 3402,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2876,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2705,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$77_to_t_address": {
									"entryPoint": 3172,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 3155,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 3122,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 3113,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 3498,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 3737,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 2701,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_c266efca4f4ed37612271196433531dcbb4fca89a694d568d1e290e32feb1682": {
									"entryPoint": 3245,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 3003,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 3413,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 2714,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:8442:3",
										"nodeType": "YulBlock",
										"src": "0:8442:3",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:3",
													"nodeType": "YulBlock",
													"src": "47:35:3",
													"statements": [
														{
															"nativeSrc": "57:19:3",
															"nodeType": "YulAssignment",
															"src": "57:19:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:3",
																		"nodeType": "YulLiteral",
																		"src": "73:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:3"
																},
																"nativeSrc": "67:9:3",
																"nodeType": "YulFunctionCall",
																"src": "67:9:3"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:3"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:3",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:3",
														"nodeType": "YulTypedName",
														"src": "40:6:3",
														"type": ""
													}
												],
												"src": "7:75:3"
											},
											{
												"body": {
													"nativeSrc": "177:28:3",
													"nodeType": "YulBlock",
													"src": "177:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:3",
																		"nodeType": "YulLiteral",
																		"src": "194:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:3",
																		"nodeType": "YulLiteral",
																		"src": "197:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:3"
																},
																"nativeSrc": "187:12:3",
																"nodeType": "YulFunctionCall",
																"src": "187:12:3"
															},
															"nativeSrc": "187:12:3",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:3"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:3",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:3"
											},
											{
												"body": {
													"nativeSrc": "300:28:3",
													"nodeType": "YulBlock",
													"src": "300:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:3",
																		"nodeType": "YulLiteral",
																		"src": "317:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:3",
																		"nodeType": "YulLiteral",
																		"src": "320:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:3"
																},
																"nativeSrc": "310:12:3",
																"nodeType": "YulFunctionCall",
																"src": "310:12:3"
															},
															"nativeSrc": "310:12:3",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:3"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:3",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:3"
											},
											{
												"body": {
													"nativeSrc": "379:32:3",
													"nodeType": "YulBlock",
													"src": "379:32:3",
													"statements": [
														{
															"nativeSrc": "389:16:3",
															"nodeType": "YulAssignment",
															"src": "389:16:3",
															"value": {
																"name": "value",
																"nativeSrc": "400:5:3",
																"nodeType": "YulIdentifier",
																"src": "400:5:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "334:77:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:3",
														"nodeType": "YulTypedName",
														"src": "361:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:3",
														"nodeType": "YulTypedName",
														"src": "371:7:3",
														"type": ""
													}
												],
												"src": "334:77:3"
											},
											{
												"body": {
													"nativeSrc": "460:79:3",
													"nodeType": "YulBlock",
													"src": "460:79:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "517:16:3",
																"nodeType": "YulBlock",
																"src": "517:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "526:1:3",
																					"nodeType": "YulLiteral",
																					"src": "526:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "529:1:3",
																					"nodeType": "YulLiteral",
																					"src": "529:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "519:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:3"
																			},
																			"nativeSrc": "519:12:3",
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:3"
																		},
																		"nativeSrc": "519:12:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "483:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "508:5:3",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "490:17:3",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:3"
																				},
																				"nativeSrc": "490:24:3",
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "480:2:3",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:3"
																		},
																		"nativeSrc": "480:35:3",
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "473:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:3"
																},
																"nativeSrc": "473:43:3",
																"nodeType": "YulFunctionCall",
																"src": "473:43:3"
															},
															"nativeSrc": "470:63:3",
															"nodeType": "YulIf",
															"src": "470:63:3"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "417:122:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "453:5:3",
														"nodeType": "YulTypedName",
														"src": "453:5:3",
														"type": ""
													}
												],
												"src": "417:122:3"
											},
											{
												"body": {
													"nativeSrc": "597:87:3",
													"nodeType": "YulBlock",
													"src": "597:87:3",
													"statements": [
														{
															"nativeSrc": "607:29:3",
															"nodeType": "YulAssignment",
															"src": "607:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "629:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "629:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "616:12:3",
																	"nodeType": "YulIdentifier",
																	"src": "616:12:3"
																},
																"nativeSrc": "616:20:3",
																"nodeType": "YulFunctionCall",
																"src": "616:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "607:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "607:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "672:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "672:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "645:26:3",
																	"nodeType": "YulIdentifier",
																	"src": "645:26:3"
																},
																"nativeSrc": "645:33:3",
																"nodeType": "YulFunctionCall",
																"src": "645:33:3"
															},
															"nativeSrc": "645:33:3",
															"nodeType": "YulExpressionStatement",
															"src": "645:33:3"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "545:139:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "575:6:3",
														"nodeType": "YulTypedName",
														"src": "575:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "583:3:3",
														"nodeType": "YulTypedName",
														"src": "583:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "591:5:3",
														"nodeType": "YulTypedName",
														"src": "591:5:3",
														"type": ""
													}
												],
												"src": "545:139:3"
											},
											{
												"body": {
													"nativeSrc": "756:263:3",
													"nodeType": "YulBlock",
													"src": "756:263:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "802:83:3",
																"nodeType": "YulBlock",
																"src": "802:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "804:77:3",
																				"nodeType": "YulIdentifier",
																				"src": "804:77:3"
																			},
																			"nativeSrc": "804:79:3",
																			"nodeType": "YulFunctionCall",
																			"src": "804:79:3"
																		},
																		"nativeSrc": "804:79:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "804:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "777:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "777:7:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "786:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "786:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "773:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "773:3:3"
																		},
																		"nativeSrc": "773:23:3",
																		"nodeType": "YulFunctionCall",
																		"src": "773:23:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "798:2:3",
																		"nodeType": "YulLiteral",
																		"src": "798:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "769:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "769:3:3"
																},
																"nativeSrc": "769:32:3",
																"nodeType": "YulFunctionCall",
																"src": "769:32:3"
															},
															"nativeSrc": "766:119:3",
															"nodeType": "YulIf",
															"src": "766:119:3"
														},
														{
															"nativeSrc": "895:117:3",
															"nodeType": "YulBlock",
															"src": "895:117:3",
															"statements": [
																{
																	"nativeSrc": "910:15:3",
																	"nodeType": "YulVariableDeclaration",
																	"src": "910:15:3",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "924:1:3",
																		"nodeType": "YulLiteral",
																		"src": "924:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "914:6:3",
																			"nodeType": "YulTypedName",
																			"src": "914:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "939:63:3",
																	"nodeType": "YulAssignment",
																	"src": "939:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "974:9:3",
																						"nodeType": "YulIdentifier",
																						"src": "974:9:3"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "985:6:3",
																						"nodeType": "YulIdentifier",
																						"src": "985:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "970:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "970:3:3"
																				},
																				"nativeSrc": "970:22:3",
																				"nodeType": "YulFunctionCall",
																				"src": "970:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "994:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "994:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "949:20:3",
																			"nodeType": "YulIdentifier",
																			"src": "949:20:3"
																		},
																		"nativeSrc": "949:53:3",
																		"nodeType": "YulFunctionCall",
																		"src": "949:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "939:6:3",
																			"nodeType": "YulIdentifier",
																			"src": "939:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "690:329:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "726:9:3",
														"nodeType": "YulTypedName",
														"src": "726:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "737:7:3",
														"nodeType": "YulTypedName",
														"src": "737:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "749:6:3",
														"nodeType": "YulTypedName",
														"src": "749:6:3",
														"type": ""
													}
												],
												"src": "690:329:3"
											},
											{
												"body": {
													"nativeSrc": "1108:391:3",
													"nodeType": "YulBlock",
													"src": "1108:391:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "1154:83:3",
																"nodeType": "YulBlock",
																"src": "1154:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1156:77:3",
																				"nodeType": "YulIdentifier",
																				"src": "1156:77:3"
																			},
																			"nativeSrc": "1156:79:3",
																			"nodeType": "YulFunctionCall",
																			"src": "1156:79:3"
																		},
																		"nativeSrc": "1156:79:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "1156:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1129:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "1129:7:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1138:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "1138:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1125:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "1125:3:3"
																		},
																		"nativeSrc": "1125:23:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1125:23:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1150:2:3",
																		"nodeType": "YulLiteral",
																		"src": "1150:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1121:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "1121:3:3"
																},
																"nativeSrc": "1121:32:3",
																"nodeType": "YulFunctionCall",
																"src": "1121:32:3"
															},
															"nativeSrc": "1118:119:3",
															"nodeType": "YulIf",
															"src": "1118:119:3"
														},
														{
															"nativeSrc": "1247:117:3",
															"nodeType": "YulBlock",
															"src": "1247:117:3",
															"statements": [
																{
																	"nativeSrc": "1262:15:3",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1262:15:3",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1276:1:3",
																		"nodeType": "YulLiteral",
																		"src": "1276:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1266:6:3",
																			"nodeType": "YulTypedName",
																			"src": "1266:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1291:63:3",
																	"nodeType": "YulAssignment",
																	"src": "1291:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1326:9:3",
																						"nodeType": "YulIdentifier",
																						"src": "1326:9:3"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1337:6:3",
																						"nodeType": "YulIdentifier",
																						"src": "1337:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1322:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "1322:3:3"
																				},
																				"nativeSrc": "1322:22:3",
																				"nodeType": "YulFunctionCall",
																				"src": "1322:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1346:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "1346:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "1301:20:3",
																			"nodeType": "YulIdentifier",
																			"src": "1301:20:3"
																		},
																		"nativeSrc": "1301:53:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1301:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1291:6:3",
																			"nodeType": "YulIdentifier",
																			"src": "1291:6:3"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1374:118:3",
															"nodeType": "YulBlock",
															"src": "1374:118:3",
															"statements": [
																{
																	"nativeSrc": "1389:16:3",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1389:16:3",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1403:2:3",
																		"nodeType": "YulLiteral",
																		"src": "1403:2:3",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1393:6:3",
																			"nodeType": "YulTypedName",
																			"src": "1393:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1419:63:3",
																	"nodeType": "YulAssignment",
																	"src": "1419:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1454:9:3",
																						"nodeType": "YulIdentifier",
																						"src": "1454:9:3"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1465:6:3",
																						"nodeType": "YulIdentifier",
																						"src": "1465:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1450:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "1450:3:3"
																				},
																				"nativeSrc": "1450:22:3",
																				"nodeType": "YulFunctionCall",
																				"src": "1450:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1474:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "1474:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "1429:20:3",
																			"nodeType": "YulIdentifier",
																			"src": "1429:20:3"
																		},
																		"nativeSrc": "1429:53:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1429:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1419:6:3",
																			"nodeType": "YulIdentifier",
																			"src": "1419:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nativeSrc": "1025:474:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1070:9:3",
														"nodeType": "YulTypedName",
														"src": "1070:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1081:7:3",
														"nodeType": "YulTypedName",
														"src": "1081:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1093:6:3",
														"nodeType": "YulTypedName",
														"src": "1093:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1101:6:3",
														"nodeType": "YulTypedName",
														"src": "1101:6:3",
														"type": ""
													}
												],
												"src": "1025:474:3"
											},
											{
												"body": {
													"nativeSrc": "1570:53:3",
													"nodeType": "YulBlock",
													"src": "1570:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1587:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "1587:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1610:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "1610:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "1592:17:3",
																			"nodeType": "YulIdentifier",
																			"src": "1592:17:3"
																		},
																		"nativeSrc": "1592:24:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1592:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1580:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "1580:6:3"
																},
																"nativeSrc": "1580:37:3",
																"nodeType": "YulFunctionCall",
																"src": "1580:37:3"
															},
															"nativeSrc": "1580:37:3",
															"nodeType": "YulExpressionStatement",
															"src": "1580:37:3"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "1505:118:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1558:5:3",
														"nodeType": "YulTypedName",
														"src": "1558:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1565:3:3",
														"nodeType": "YulTypedName",
														"src": "1565:3:3",
														"type": ""
													}
												],
												"src": "1505:118:3"
											},
											{
												"body": {
													"nativeSrc": "1674:81:3",
													"nodeType": "YulBlock",
													"src": "1674:81:3",
													"statements": [
														{
															"nativeSrc": "1684:65:3",
															"nodeType": "YulAssignment",
															"src": "1684:65:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1699:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "1699:5:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1706:42:3",
																		"nodeType": "YulLiteral",
																		"src": "1706:42:3",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1695:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "1695:3:3"
																},
																"nativeSrc": "1695:54:3",
																"nodeType": "YulFunctionCall",
																"src": "1695:54:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1684:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "1684:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1629:126:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1656:5:3",
														"nodeType": "YulTypedName",
														"src": "1656:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1666:7:3",
														"nodeType": "YulTypedName",
														"src": "1666:7:3",
														"type": ""
													}
												],
												"src": "1629:126:3"
											},
											{
												"body": {
													"nativeSrc": "1806:51:3",
													"nodeType": "YulBlock",
													"src": "1806:51:3",
													"statements": [
														{
															"nativeSrc": "1816:35:3",
															"nodeType": "YulAssignment",
															"src": "1816:35:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1845:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "1845:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1827:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "1827:17:3"
																},
																"nativeSrc": "1827:24:3",
																"nodeType": "YulFunctionCall",
																"src": "1827:24:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1816:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "1816:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1761:96:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1788:5:3",
														"nodeType": "YulTypedName",
														"src": "1788:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1798:7:3",
														"nodeType": "YulTypedName",
														"src": "1798:7:3",
														"type": ""
													}
												],
												"src": "1761:96:3"
											},
											{
												"body": {
													"nativeSrc": "1928:53:3",
													"nodeType": "YulBlock",
													"src": "1928:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1945:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "1945:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1968:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "1968:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "1950:17:3",
																			"nodeType": "YulIdentifier",
																			"src": "1950:17:3"
																		},
																		"nativeSrc": "1950:24:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1950:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1938:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "1938:6:3"
																},
																"nativeSrc": "1938:37:3",
																"nodeType": "YulFunctionCall",
																"src": "1938:37:3"
															},
															"nativeSrc": "1938:37:3",
															"nodeType": "YulExpressionStatement",
															"src": "1938:37:3"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "1863:118:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1916:5:3",
														"nodeType": "YulTypedName",
														"src": "1916:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1923:3:3",
														"nodeType": "YulTypedName",
														"src": "1923:3:3",
														"type": ""
													}
												],
												"src": "1863:118:3"
											},
											{
												"body": {
													"nativeSrc": "2113:206:3",
													"nodeType": "YulBlock",
													"src": "2113:206:3",
													"statements": [
														{
															"nativeSrc": "2123:26:3",
															"nodeType": "YulAssignment",
															"src": "2123:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2135:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "2135:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2146:2:3",
																		"nodeType": "YulLiteral",
																		"src": "2146:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2131:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "2131:3:3"
																},
																"nativeSrc": "2131:18:3",
																"nodeType": "YulFunctionCall",
																"src": "2131:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2123:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "2123:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2203:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "2203:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2216:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "2216:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2227:1:3",
																				"nodeType": "YulLiteral",
																				"src": "2227:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2212:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "2212:3:3"
																		},
																		"nativeSrc": "2212:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2212:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "2159:43:3",
																	"nodeType": "YulIdentifier",
																	"src": "2159:43:3"
																},
																"nativeSrc": "2159:71:3",
																"nodeType": "YulFunctionCall",
																"src": "2159:71:3"
															},
															"nativeSrc": "2159:71:3",
															"nodeType": "YulExpressionStatement",
															"src": "2159:71:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "2284:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "2284:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2297:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "2297:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2308:2:3",
																				"nodeType": "YulLiteral",
																				"src": "2308:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2293:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "2293:3:3"
																		},
																		"nativeSrc": "2293:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2293:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "2240:43:3",
																	"nodeType": "YulIdentifier",
																	"src": "2240:43:3"
																},
																"nativeSrc": "2240:72:3",
																"nodeType": "YulFunctionCall",
																"src": "2240:72:3"
															},
															"nativeSrc": "2240:72:3",
															"nodeType": "YulExpressionStatement",
															"src": "2240:72:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_address__to_t_uint256_t_address__fromStack_reversed",
												"nativeSrc": "1987:332:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2077:9:3",
														"nodeType": "YulTypedName",
														"src": "2077:9:3",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2089:6:3",
														"nodeType": "YulTypedName",
														"src": "2089:6:3",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2097:6:3",
														"nodeType": "YulTypedName",
														"src": "2097:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2108:4:3",
														"nodeType": "YulTypedName",
														"src": "2108:4:3",
														"type": ""
													}
												],
												"src": "1987:332:3"
											},
											{
												"body": {
													"nativeSrc": "2423:124:3",
													"nodeType": "YulBlock",
													"src": "2423:124:3",
													"statements": [
														{
															"nativeSrc": "2433:26:3",
															"nodeType": "YulAssignment",
															"src": "2433:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2445:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "2445:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2456:2:3",
																		"nodeType": "YulLiteral",
																		"src": "2456:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2441:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "2441:3:3"
																},
																"nativeSrc": "2441:18:3",
																"nodeType": "YulFunctionCall",
																"src": "2441:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2433:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "2433:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2513:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "2513:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2526:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "2526:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2537:1:3",
																				"nodeType": "YulLiteral",
																				"src": "2537:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2522:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "2522:3:3"
																		},
																		"nativeSrc": "2522:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2522:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "2469:43:3",
																	"nodeType": "YulIdentifier",
																	"src": "2469:43:3"
																},
																"nativeSrc": "2469:71:3",
																"nodeType": "YulFunctionCall",
																"src": "2469:71:3"
															},
															"nativeSrc": "2469:71:3",
															"nodeType": "YulExpressionStatement",
															"src": "2469:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "2325:222:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2395:9:3",
														"nodeType": "YulTypedName",
														"src": "2395:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2407:6:3",
														"nodeType": "YulTypedName",
														"src": "2407:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2418:4:3",
														"nodeType": "YulTypedName",
														"src": "2418:4:3",
														"type": ""
													}
												],
												"src": "2325:222:3"
											},
											{
												"body": {
													"nativeSrc": "2596:79:3",
													"nodeType": "YulBlock",
													"src": "2596:79:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "2653:16:3",
																"nodeType": "YulBlock",
																"src": "2653:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2662:1:3",
																					"nodeType": "YulLiteral",
																					"src": "2662:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2665:1:3",
																					"nodeType": "YulLiteral",
																					"src": "2665:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2655:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "2655:6:3"
																			},
																			"nativeSrc": "2655:12:3",
																			"nodeType": "YulFunctionCall",
																			"src": "2655:12:3"
																		},
																		"nativeSrc": "2655:12:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "2655:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2619:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "2619:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2644:5:3",
																						"nodeType": "YulIdentifier",
																						"src": "2644:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "2626:17:3",
																					"nodeType": "YulIdentifier",
																					"src": "2626:17:3"
																				},
																				"nativeSrc": "2626:24:3",
																				"nodeType": "YulFunctionCall",
																				"src": "2626:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2616:2:3",
																			"nodeType": "YulIdentifier",
																			"src": "2616:2:3"
																		},
																		"nativeSrc": "2616:35:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2616:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2609:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "2609:6:3"
																},
																"nativeSrc": "2609:43:3",
																"nodeType": "YulFunctionCall",
																"src": "2609:43:3"
															},
															"nativeSrc": "2606:63:3",
															"nodeType": "YulIf",
															"src": "2606:63:3"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "2553:122:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2589:5:3",
														"nodeType": "YulTypedName",
														"src": "2589:5:3",
														"type": ""
													}
												],
												"src": "2553:122:3"
											},
											{
												"body": {
													"nativeSrc": "2733:87:3",
													"nodeType": "YulBlock",
													"src": "2733:87:3",
													"statements": [
														{
															"nativeSrc": "2743:29:3",
															"nodeType": "YulAssignment",
															"src": "2743:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2765:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "2765:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2752:12:3",
																	"nodeType": "YulIdentifier",
																	"src": "2752:12:3"
																},
																"nativeSrc": "2752:20:3",
																"nodeType": "YulFunctionCall",
																"src": "2752:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2743:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "2743:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2808:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "2808:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2781:26:3",
																	"nodeType": "YulIdentifier",
																	"src": "2781:26:3"
																},
																"nativeSrc": "2781:33:3",
																"nodeType": "YulFunctionCall",
																"src": "2781:33:3"
															},
															"nativeSrc": "2781:33:3",
															"nodeType": "YulExpressionStatement",
															"src": "2781:33:3"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "2681:139:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2711:6:3",
														"nodeType": "YulTypedName",
														"src": "2711:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2719:3:3",
														"nodeType": "YulTypedName",
														"src": "2719:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2727:5:3",
														"nodeType": "YulTypedName",
														"src": "2727:5:3",
														"type": ""
													}
												],
												"src": "2681:139:3"
											},
											{
												"body": {
													"nativeSrc": "2892:263:3",
													"nodeType": "YulBlock",
													"src": "2892:263:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "2938:83:3",
																"nodeType": "YulBlock",
																"src": "2938:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2940:77:3",
																				"nodeType": "YulIdentifier",
																				"src": "2940:77:3"
																			},
																			"nativeSrc": "2940:79:3",
																			"nodeType": "YulFunctionCall",
																			"src": "2940:79:3"
																		},
																		"nativeSrc": "2940:79:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "2940:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2913:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "2913:7:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2922:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "2922:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2909:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "2909:3:3"
																		},
																		"nativeSrc": "2909:23:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2909:23:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2934:2:3",
																		"nodeType": "YulLiteral",
																		"src": "2934:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2905:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "2905:3:3"
																},
																"nativeSrc": "2905:32:3",
																"nodeType": "YulFunctionCall",
																"src": "2905:32:3"
															},
															"nativeSrc": "2902:119:3",
															"nodeType": "YulIf",
															"src": "2902:119:3"
														},
														{
															"nativeSrc": "3031:117:3",
															"nodeType": "YulBlock",
															"src": "3031:117:3",
															"statements": [
																{
																	"nativeSrc": "3046:15:3",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3046:15:3",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3060:1:3",
																		"nodeType": "YulLiteral",
																		"src": "3060:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3050:6:3",
																			"nodeType": "YulTypedName",
																			"src": "3050:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3075:63:3",
																	"nodeType": "YulAssignment",
																	"src": "3075:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3110:9:3",
																						"nodeType": "YulIdentifier",
																						"src": "3110:9:3"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3121:6:3",
																						"nodeType": "YulIdentifier",
																						"src": "3121:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3106:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "3106:3:3"
																				},
																				"nativeSrc": "3106:22:3",
																				"nodeType": "YulFunctionCall",
																				"src": "3106:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3130:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "3130:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3085:20:3",
																			"nodeType": "YulIdentifier",
																			"src": "3085:20:3"
																		},
																		"nativeSrc": "3085:53:3",
																		"nodeType": "YulFunctionCall",
																		"src": "3085:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3075:6:3",
																			"nodeType": "YulIdentifier",
																			"src": "3075:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "2826:329:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2862:9:3",
														"nodeType": "YulTypedName",
														"src": "2862:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2873:7:3",
														"nodeType": "YulTypedName",
														"src": "2873:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2885:6:3",
														"nodeType": "YulTypedName",
														"src": "2885:6:3",
														"type": ""
													}
												],
												"src": "2826:329:3"
											},
											{
												"body": {
													"nativeSrc": "3259:124:3",
													"nodeType": "YulBlock",
													"src": "3259:124:3",
													"statements": [
														{
															"nativeSrc": "3269:26:3",
															"nodeType": "YulAssignment",
															"src": "3269:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3281:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "3281:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3292:2:3",
																		"nodeType": "YulLiteral",
																		"src": "3292:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3277:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "3277:3:3"
																},
																"nativeSrc": "3277:18:3",
																"nodeType": "YulFunctionCall",
																"src": "3277:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3269:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "3269:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3349:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "3349:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3362:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "3362:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3373:1:3",
																				"nodeType": "YulLiteral",
																				"src": "3373:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3358:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "3358:3:3"
																		},
																		"nativeSrc": "3358:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "3358:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3305:43:3",
																	"nodeType": "YulIdentifier",
																	"src": "3305:43:3"
																},
																"nativeSrc": "3305:71:3",
																"nodeType": "YulFunctionCall",
																"src": "3305:71:3"
															},
															"nativeSrc": "3305:71:3",
															"nodeType": "YulExpressionStatement",
															"src": "3305:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3161:222:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3231:9:3",
														"nodeType": "YulTypedName",
														"src": "3231:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3243:6:3",
														"nodeType": "YulTypedName",
														"src": "3243:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3254:4:3",
														"nodeType": "YulTypedName",
														"src": "3254:4:3",
														"type": ""
													}
												],
												"src": "3161:222:3"
											},
											{
												"body": {
													"nativeSrc": "3421:28:3",
													"nodeType": "YulBlock",
													"src": "3421:28:3",
													"statements": [
														{
															"nativeSrc": "3431:12:3",
															"nodeType": "YulAssignment",
															"src": "3431:12:3",
															"value": {
																"name": "value",
																"nativeSrc": "3438:5:3",
																"nodeType": "YulIdentifier",
																"src": "3438:5:3"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3431:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "3431:3:3"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "3389:60:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3407:5:3",
														"nodeType": "YulTypedName",
														"src": "3407:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3417:3:3",
														"nodeType": "YulTypedName",
														"src": "3417:3:3",
														"type": ""
													}
												],
												"src": "3389:60:3"
											},
											{
												"body": {
													"nativeSrc": "3515:82:3",
													"nodeType": "YulBlock",
													"src": "3515:82:3",
													"statements": [
														{
															"nativeSrc": "3525:66:3",
															"nodeType": "YulAssignment",
															"src": "3525:66:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3583:5:3",
																						"nodeType": "YulIdentifier",
																						"src": "3583:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "3565:17:3",
																					"nodeType": "YulIdentifier",
																					"src": "3565:17:3"
																				},
																				"nativeSrc": "3565:24:3",
																				"nodeType": "YulFunctionCall",
																				"src": "3565:24:3"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "3556:8:3",
																			"nodeType": "YulIdentifier",
																			"src": "3556:8:3"
																		},
																		"nativeSrc": "3556:34:3",
																		"nodeType": "YulFunctionCall",
																		"src": "3556:34:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "3538:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "3538:17:3"
																},
																"nativeSrc": "3538:53:3",
																"nodeType": "YulFunctionCall",
																"src": "3538:53:3"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "3525:9:3",
																	"nodeType": "YulIdentifier",
																	"src": "3525:9:3"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "3455:142:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3495:5:3",
														"nodeType": "YulTypedName",
														"src": "3495:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "3505:9:3",
														"nodeType": "YulTypedName",
														"src": "3505:9:3",
														"type": ""
													}
												],
												"src": "3455:142:3"
											},
											{
												"body": {
													"nativeSrc": "3663:66:3",
													"nodeType": "YulBlock",
													"src": "3663:66:3",
													"statements": [
														{
															"nativeSrc": "3673:50:3",
															"nodeType": "YulAssignment",
															"src": "3673:50:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3717:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "3717:5:3"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "3686:30:3",
																	"nodeType": "YulIdentifier",
																	"src": "3686:30:3"
																},
																"nativeSrc": "3686:37:3",
																"nodeType": "YulFunctionCall",
																"src": "3686:37:3"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "3673:9:3",
																	"nodeType": "YulIdentifier",
																	"src": "3673:9:3"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "3603:126:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3643:5:3",
														"nodeType": "YulTypedName",
														"src": "3643:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "3653:9:3",
														"nodeType": "YulTypedName",
														"src": "3653:9:3",
														"type": ""
													}
												],
												"src": "3603:126:3"
											},
											{
												"body": {
													"nativeSrc": "3808:66:3",
													"nodeType": "YulBlock",
													"src": "3808:66:3",
													"statements": [
														{
															"nativeSrc": "3818:50:3",
															"nodeType": "YulAssignment",
															"src": "3818:50:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3862:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "3862:5:3"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "3831:30:3",
																	"nodeType": "YulIdentifier",
																	"src": "3831:30:3"
																},
																"nativeSrc": "3831:37:3",
																"nodeType": "YulFunctionCall",
																"src": "3831:37:3"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "3818:9:3",
																	"nodeType": "YulIdentifier",
																	"src": "3818:9:3"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$77_to_t_address",
												"nativeSrc": "3735:139:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3788:5:3",
														"nodeType": "YulTypedName",
														"src": "3788:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "3798:9:3",
														"nodeType": "YulTypedName",
														"src": "3798:9:3",
														"type": ""
													}
												],
												"src": "3735:139:3"
											},
											{
												"body": {
													"nativeSrc": "3958:79:3",
													"nodeType": "YulBlock",
													"src": "3958:79:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3975:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "3975:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4024:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "4024:5:3"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$77_to_t_address",
																			"nativeSrc": "3980:43:3",
																			"nodeType": "YulIdentifier",
																			"src": "3980:43:3"
																		},
																		"nativeSrc": "3980:50:3",
																		"nodeType": "YulFunctionCall",
																		"src": "3980:50:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3968:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "3968:6:3"
																},
																"nativeSrc": "3968:63:3",
																"nodeType": "YulFunctionCall",
																"src": "3968:63:3"
															},
															"nativeSrc": "3968:63:3",
															"nodeType": "YulExpressionStatement",
															"src": "3968:63:3"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$77_to_t_address_fromStack",
												"nativeSrc": "3880:157:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3946:5:3",
														"nodeType": "YulTypedName",
														"src": "3946:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3953:3:3",
														"nodeType": "YulTypedName",
														"src": "3953:3:3",
														"type": ""
													}
												],
												"src": "3880:157:3"
											},
											{
												"body": {
													"nativeSrc": "4154:137:3",
													"nodeType": "YulBlock",
													"src": "4154:137:3",
													"statements": [
														{
															"nativeSrc": "4164:26:3",
															"nodeType": "YulAssignment",
															"src": "4164:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4176:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "4176:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4187:2:3",
																		"nodeType": "YulLiteral",
																		"src": "4187:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4172:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "4172:3:3"
																},
																"nativeSrc": "4172:18:3",
																"nodeType": "YulFunctionCall",
																"src": "4172:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4164:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "4164:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4257:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "4257:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4270:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "4270:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4281:1:3",
																				"nodeType": "YulLiteral",
																				"src": "4281:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4266:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "4266:3:3"
																		},
																		"nativeSrc": "4266:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "4266:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$77_to_t_address_fromStack",
																	"nativeSrc": "4200:56:3",
																	"nodeType": "YulIdentifier",
																	"src": "4200:56:3"
																},
																"nativeSrc": "4200:84:3",
																"nodeType": "YulFunctionCall",
																"src": "4200:84:3"
															},
															"nativeSrc": "4200:84:3",
															"nodeType": "YulExpressionStatement",
															"src": "4200:84:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$77__to_t_address__fromStack_reversed",
												"nativeSrc": "4043:248:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4126:9:3",
														"nodeType": "YulTypedName",
														"src": "4126:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4138:6:3",
														"nodeType": "YulTypedName",
														"src": "4138:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4149:4:3",
														"nodeType": "YulTypedName",
														"src": "4149:4:3",
														"type": ""
													}
												],
												"src": "4043:248:3"
											},
											{
												"body": {
													"nativeSrc": "4393:73:3",
													"nodeType": "YulBlock",
													"src": "4393:73:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4410:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "4410:3:3"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4415:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "4415:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4403:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "4403:6:3"
																},
																"nativeSrc": "4403:19:3",
																"nodeType": "YulFunctionCall",
																"src": "4403:19:3"
															},
															"nativeSrc": "4403:19:3",
															"nodeType": "YulExpressionStatement",
															"src": "4403:19:3"
														},
														{
															"nativeSrc": "4431:29:3",
															"nodeType": "YulAssignment",
															"src": "4431:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4450:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "4450:3:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4455:4:3",
																		"nodeType": "YulLiteral",
																		"src": "4455:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4446:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "4446:3:3"
																},
																"nativeSrc": "4446:14:3",
																"nodeType": "YulFunctionCall",
																"src": "4446:14:3"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "4431:11:3",
																	"nodeType": "YulIdentifier",
																	"src": "4431:11:3"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "4297:169:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "4365:3:3",
														"nodeType": "YulTypedName",
														"src": "4365:3:3",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "4370:6:3",
														"nodeType": "YulTypedName",
														"src": "4370:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "4381:11:3",
														"nodeType": "YulTypedName",
														"src": "4381:11:3",
														"type": ""
													}
												],
												"src": "4297:169:3"
											},
											{
												"body": {
													"nativeSrc": "4578:53:3",
													"nodeType": "YulBlock",
													"src": "4578:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "4600:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "4600:6:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4608:1:3",
																				"nodeType": "YulLiteral",
																				"src": "4608:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4596:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "4596:3:3"
																		},
																		"nativeSrc": "4596:14:3",
																		"nodeType": "YulFunctionCall",
																		"src": "4596:14:3"
																	},
																	{
																		"hexValue": "4e6f74206f776e6572",
																		"kind": "string",
																		"nativeSrc": "4612:11:3",
																		"nodeType": "YulLiteral",
																		"src": "4612:11:3",
																		"type": "",
																		"value": "Not owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4589:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "4589:6:3"
																},
																"nativeSrc": "4589:35:3",
																"nodeType": "YulFunctionCall",
																"src": "4589:35:3"
															},
															"nativeSrc": "4589:35:3",
															"nodeType": "YulExpressionStatement",
															"src": "4589:35:3"
														}
													]
												},
												"name": "store_literal_in_memory_c266efca4f4ed37612271196433531dcbb4fca89a694d568d1e290e32feb1682",
												"nativeSrc": "4472:159:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "4570:6:3",
														"nodeType": "YulTypedName",
														"src": "4570:6:3",
														"type": ""
													}
												],
												"src": "4472:159:3"
											},
											{
												"body": {
													"nativeSrc": "4783:219:3",
													"nodeType": "YulBlock",
													"src": "4783:219:3",
													"statements": [
														{
															"nativeSrc": "4793:73:3",
															"nodeType": "YulAssignment",
															"src": "4793:73:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4859:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "4859:3:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4864:1:3",
																		"nodeType": "YulLiteral",
																		"src": "4864:1:3",
																		"type": "",
																		"value": "9"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4800:58:3",
																	"nodeType": "YulIdentifier",
																	"src": "4800:58:3"
																},
																"nativeSrc": "4800:66:3",
																"nodeType": "YulFunctionCall",
																"src": "4800:66:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "4793:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "4793:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4964:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "4964:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c266efca4f4ed37612271196433531dcbb4fca89a694d568d1e290e32feb1682",
																	"nativeSrc": "4875:88:3",
																	"nodeType": "YulIdentifier",
																	"src": "4875:88:3"
																},
																"nativeSrc": "4875:93:3",
																"nodeType": "YulFunctionCall",
																"src": "4875:93:3"
															},
															"nativeSrc": "4875:93:3",
															"nodeType": "YulExpressionStatement",
															"src": "4875:93:3"
														},
														{
															"nativeSrc": "4977:19:3",
															"nodeType": "YulAssignment",
															"src": "4977:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4988:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "4988:3:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4993:2:3",
																		"nodeType": "YulLiteral",
																		"src": "4993:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4984:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "4984:3:3"
																},
																"nativeSrc": "4984:12:3",
																"nodeType": "YulFunctionCall",
																"src": "4984:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "4977:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "4977:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c266efca4f4ed37612271196433531dcbb4fca89a694d568d1e290e32feb1682_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "4637:365:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "4771:3:3",
														"nodeType": "YulTypedName",
														"src": "4771:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "4779:3:3",
														"nodeType": "YulTypedName",
														"src": "4779:3:3",
														"type": ""
													}
												],
												"src": "4637:365:3"
											},
											{
												"body": {
													"nativeSrc": "5179:248:3",
													"nodeType": "YulBlock",
													"src": "5179:248:3",
													"statements": [
														{
															"nativeSrc": "5189:26:3",
															"nodeType": "YulAssignment",
															"src": "5189:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5201:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "5201:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5212:2:3",
																		"nodeType": "YulLiteral",
																		"src": "5212:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5197:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "5197:3:3"
																},
																"nativeSrc": "5197:18:3",
																"nodeType": "YulFunctionCall",
																"src": "5197:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5189:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "5189:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5236:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "5236:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5247:1:3",
																				"nodeType": "YulLiteral",
																				"src": "5247:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5232:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "5232:3:3"
																		},
																		"nativeSrc": "5232:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "5232:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "5255:4:3",
																				"nodeType": "YulIdentifier",
																				"src": "5255:4:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5261:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "5261:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5251:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "5251:3:3"
																		},
																		"nativeSrc": "5251:20:3",
																		"nodeType": "YulFunctionCall",
																		"src": "5251:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5225:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "5225:6:3"
																},
																"nativeSrc": "5225:47:3",
																"nodeType": "YulFunctionCall",
																"src": "5225:47:3"
															},
															"nativeSrc": "5225:47:3",
															"nodeType": "YulExpressionStatement",
															"src": "5225:47:3"
														},
														{
															"nativeSrc": "5281:139:3",
															"nodeType": "YulAssignment",
															"src": "5281:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "5415:4:3",
																		"nodeType": "YulIdentifier",
																		"src": "5415:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c266efca4f4ed37612271196433531dcbb4fca89a694d568d1e290e32feb1682_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5289:124:3",
																	"nodeType": "YulIdentifier",
																	"src": "5289:124:3"
																},
																"nativeSrc": "5289:131:3",
																"nodeType": "YulFunctionCall",
																"src": "5289:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5281:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "5281:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c266efca4f4ed37612271196433531dcbb4fca89a694d568d1e290e32feb1682__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5008:419:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5159:9:3",
														"nodeType": "YulTypedName",
														"src": "5159:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5174:4:3",
														"nodeType": "YulTypedName",
														"src": "5174:4:3",
														"type": ""
													}
												],
												"src": "5008:419:3"
											},
											{
												"body": {
													"nativeSrc": "5587:288:3",
													"nodeType": "YulBlock",
													"src": "5587:288:3",
													"statements": [
														{
															"nativeSrc": "5597:26:3",
															"nodeType": "YulAssignment",
															"src": "5597:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5609:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "5609:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5620:2:3",
																		"nodeType": "YulLiteral",
																		"src": "5620:2:3",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5605:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "5605:3:3"
																},
																"nativeSrc": "5605:18:3",
																"nodeType": "YulFunctionCall",
																"src": "5605:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5597:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "5597:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5677:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "5677:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5690:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "5690:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5701:1:3",
																				"nodeType": "YulLiteral",
																				"src": "5701:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5686:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "5686:3:3"
																		},
																		"nativeSrc": "5686:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "5686:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5633:43:3",
																	"nodeType": "YulIdentifier",
																	"src": "5633:43:3"
																},
																"nativeSrc": "5633:71:3",
																"nodeType": "YulFunctionCall",
																"src": "5633:71:3"
															},
															"nativeSrc": "5633:71:3",
															"nodeType": "YulExpressionStatement",
															"src": "5633:71:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "5758:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "5758:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5771:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "5771:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5782:2:3",
																				"nodeType": "YulLiteral",
																				"src": "5782:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5767:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "5767:3:3"
																		},
																		"nativeSrc": "5767:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "5767:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5714:43:3",
																	"nodeType": "YulIdentifier",
																	"src": "5714:43:3"
																},
																"nativeSrc": "5714:72:3",
																"nodeType": "YulFunctionCall",
																"src": "5714:72:3"
															},
															"nativeSrc": "5714:72:3",
															"nodeType": "YulExpressionStatement",
															"src": "5714:72:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "5840:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "5840:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5853:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "5853:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5864:2:3",
																				"nodeType": "YulLiteral",
																				"src": "5864:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5849:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "5849:3:3"
																		},
																		"nativeSrc": "5849:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "5849:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "5796:43:3",
																	"nodeType": "YulIdentifier",
																	"src": "5796:43:3"
																},
																"nativeSrc": "5796:72:3",
																"nodeType": "YulFunctionCall",
																"src": "5796:72:3"
															},
															"nativeSrc": "5796:72:3",
															"nodeType": "YulExpressionStatement",
															"src": "5796:72:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "5433:442:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5543:9:3",
														"nodeType": "YulTypedName",
														"src": "5543:9:3",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "5555:6:3",
														"nodeType": "YulTypedName",
														"src": "5555:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5563:6:3",
														"nodeType": "YulTypedName",
														"src": "5563:6:3",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5571:6:3",
														"nodeType": "YulTypedName",
														"src": "5571:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5582:4:3",
														"nodeType": "YulTypedName",
														"src": "5582:4:3",
														"type": ""
													}
												],
												"src": "5433:442:3"
											},
											{
												"body": {
													"nativeSrc": "5923:48:3",
													"nodeType": "YulBlock",
													"src": "5923:48:3",
													"statements": [
														{
															"nativeSrc": "5933:32:3",
															"nodeType": "YulAssignment",
															"src": "5933:32:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5958:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "5958:5:3"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "5951:6:3",
																			"nodeType": "YulIdentifier",
																			"src": "5951:6:3"
																		},
																		"nativeSrc": "5951:13:3",
																		"nodeType": "YulFunctionCall",
																		"src": "5951:13:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5944:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "5944:6:3"
																},
																"nativeSrc": "5944:21:3",
																"nodeType": "YulFunctionCall",
																"src": "5944:21:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5933:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "5933:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "5881:90:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5905:5:3",
														"nodeType": "YulTypedName",
														"src": "5905:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5915:7:3",
														"nodeType": "YulTypedName",
														"src": "5915:7:3",
														"type": ""
													}
												],
												"src": "5881:90:3"
											},
											{
												"body": {
													"nativeSrc": "6017:76:3",
													"nodeType": "YulBlock",
													"src": "6017:76:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "6071:16:3",
																"nodeType": "YulBlock",
																"src": "6071:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6080:1:3",
																					"nodeType": "YulLiteral",
																					"src": "6080:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6083:1:3",
																					"nodeType": "YulLiteral",
																					"src": "6083:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6073:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "6073:6:3"
																			},
																			"nativeSrc": "6073:12:3",
																			"nodeType": "YulFunctionCall",
																			"src": "6073:12:3"
																		},
																		"nativeSrc": "6073:12:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "6073:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6040:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "6040:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "6062:5:3",
																						"nodeType": "YulIdentifier",
																						"src": "6062:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "6047:14:3",
																					"nodeType": "YulIdentifier",
																					"src": "6047:14:3"
																				},
																				"nativeSrc": "6047:21:3",
																				"nodeType": "YulFunctionCall",
																				"src": "6047:21:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "6037:2:3",
																			"nodeType": "YulIdentifier",
																			"src": "6037:2:3"
																		},
																		"nativeSrc": "6037:32:3",
																		"nodeType": "YulFunctionCall",
																		"src": "6037:32:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6030:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "6030:6:3"
																},
																"nativeSrc": "6030:40:3",
																"nodeType": "YulFunctionCall",
																"src": "6030:40:3"
															},
															"nativeSrc": "6027:60:3",
															"nodeType": "YulIf",
															"src": "6027:60:3"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "5977:116:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6010:5:3",
														"nodeType": "YulTypedName",
														"src": "6010:5:3",
														"type": ""
													}
												],
												"src": "5977:116:3"
											},
											{
												"body": {
													"nativeSrc": "6159:77:3",
													"nodeType": "YulBlock",
													"src": "6159:77:3",
													"statements": [
														{
															"nativeSrc": "6169:22:3",
															"nodeType": "YulAssignment",
															"src": "6169:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "6184:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "6184:6:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "6178:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "6178:5:3"
																},
																"nativeSrc": "6178:13:3",
																"nodeType": "YulFunctionCall",
																"src": "6178:13:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "6169:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "6169:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6224:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "6224:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "6200:23:3",
																	"nodeType": "YulIdentifier",
																	"src": "6200:23:3"
																},
																"nativeSrc": "6200:30:3",
																"nodeType": "YulFunctionCall",
																"src": "6200:30:3"
															},
															"nativeSrc": "6200:30:3",
															"nodeType": "YulExpressionStatement",
															"src": "6200:30:3"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "6099:137:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "6137:6:3",
														"nodeType": "YulTypedName",
														"src": "6137:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6145:3:3",
														"nodeType": "YulTypedName",
														"src": "6145:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "6153:5:3",
														"nodeType": "YulTypedName",
														"src": "6153:5:3",
														"type": ""
													}
												],
												"src": "6099:137:3"
											},
											{
												"body": {
													"nativeSrc": "6316:271:3",
													"nodeType": "YulBlock",
													"src": "6316:271:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "6362:83:3",
																"nodeType": "YulBlock",
																"src": "6362:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6364:77:3",
																				"nodeType": "YulIdentifier",
																				"src": "6364:77:3"
																			},
																			"nativeSrc": "6364:79:3",
																			"nodeType": "YulFunctionCall",
																			"src": "6364:79:3"
																		},
																		"nativeSrc": "6364:79:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "6364:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6337:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "6337:7:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6346:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "6346:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6333:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "6333:3:3"
																		},
																		"nativeSrc": "6333:23:3",
																		"nodeType": "YulFunctionCall",
																		"src": "6333:23:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6358:2:3",
																		"nodeType": "YulLiteral",
																		"src": "6358:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6329:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "6329:3:3"
																},
																"nativeSrc": "6329:32:3",
																"nodeType": "YulFunctionCall",
																"src": "6329:32:3"
															},
															"nativeSrc": "6326:119:3",
															"nodeType": "YulIf",
															"src": "6326:119:3"
														},
														{
															"nativeSrc": "6455:125:3",
															"nodeType": "YulBlock",
															"src": "6455:125:3",
															"statements": [
																{
																	"nativeSrc": "6470:15:3",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6470:15:3",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6484:1:3",
																		"nodeType": "YulLiteral",
																		"src": "6484:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6474:6:3",
																			"nodeType": "YulTypedName",
																			"src": "6474:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6499:71:3",
																	"nodeType": "YulAssignment",
																	"src": "6499:71:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6542:9:3",
																						"nodeType": "YulIdentifier",
																						"src": "6542:9:3"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6553:6:3",
																						"nodeType": "YulIdentifier",
																						"src": "6553:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6538:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "6538:3:3"
																				},
																				"nativeSrc": "6538:22:3",
																				"nodeType": "YulFunctionCall",
																				"src": "6538:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6562:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "6562:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "6509:28:3",
																			"nodeType": "YulIdentifier",
																			"src": "6509:28:3"
																		},
																		"nativeSrc": "6509:61:3",
																		"nodeType": "YulFunctionCall",
																		"src": "6509:61:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6499:6:3",
																			"nodeType": "YulIdentifier",
																			"src": "6499:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "6242:345:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6286:9:3",
														"nodeType": "YulTypedName",
														"src": "6286:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6297:7:3",
														"nodeType": "YulTypedName",
														"src": "6297:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6309:6:3",
														"nodeType": "YulTypedName",
														"src": "6309:6:3",
														"type": ""
													}
												],
												"src": "6242:345:3"
											},
											{
												"body": {
													"nativeSrc": "6621:152:3",
													"nodeType": "YulBlock",
													"src": "6621:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6638:1:3",
																		"nodeType": "YulLiteral",
																		"src": "6638:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6641:77:3",
																		"nodeType": "YulLiteral",
																		"src": "6641:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6631:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "6631:6:3"
																},
																"nativeSrc": "6631:88:3",
																"nodeType": "YulFunctionCall",
																"src": "6631:88:3"
															},
															"nativeSrc": "6631:88:3",
															"nodeType": "YulExpressionStatement",
															"src": "6631:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6735:1:3",
																		"nodeType": "YulLiteral",
																		"src": "6735:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6738:4:3",
																		"nodeType": "YulLiteral",
																		"src": "6738:4:3",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6728:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "6728:6:3"
																},
																"nativeSrc": "6728:15:3",
																"nodeType": "YulFunctionCall",
																"src": "6728:15:3"
															},
															"nativeSrc": "6728:15:3",
															"nodeType": "YulExpressionStatement",
															"src": "6728:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6759:1:3",
																		"nodeType": "YulLiteral",
																		"src": "6759:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6762:4:3",
																		"nodeType": "YulLiteral",
																		"src": "6762:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6752:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "6752:6:3"
																},
																"nativeSrc": "6752:15:3",
																"nodeType": "YulFunctionCall",
																"src": "6752:15:3"
															},
															"nativeSrc": "6752:15:3",
															"nodeType": "YulExpressionStatement",
															"src": "6752:15:3"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "6593:180:3",
												"nodeType": "YulFunctionDefinition",
												"src": "6593:180:3"
											},
											{
												"body": {
													"nativeSrc": "6823:147:3",
													"nodeType": "YulBlock",
													"src": "6823:147:3",
													"statements": [
														{
															"nativeSrc": "6833:25:3",
															"nodeType": "YulAssignment",
															"src": "6833:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6856:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "6856:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "6838:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "6838:17:3"
																},
																"nativeSrc": "6838:20:3",
																"nodeType": "YulFunctionCall",
																"src": "6838:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "6833:1:3",
																	"nodeType": "YulIdentifier",
																	"src": "6833:1:3"
																}
															]
														},
														{
															"nativeSrc": "6867:25:3",
															"nodeType": "YulAssignment",
															"src": "6867:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "6890:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "6890:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "6872:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "6872:17:3"
																},
																"nativeSrc": "6872:20:3",
																"nodeType": "YulFunctionCall",
																"src": "6872:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "6867:1:3",
																	"nodeType": "YulIdentifier",
																	"src": "6867:1:3"
																}
															]
														},
														{
															"nativeSrc": "6901:16:3",
															"nodeType": "YulAssignment",
															"src": "6901:16:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6912:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "6912:1:3"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "6915:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "6915:1:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6908:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "6908:3:3"
																},
																"nativeSrc": "6908:9:3",
																"nodeType": "YulFunctionCall",
																"src": "6908:9:3"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "6901:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "6901:3:3"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6941:22:3",
																"nodeType": "YulBlock",
																"src": "6941:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "6943:16:3",
																				"nodeType": "YulIdentifier",
																				"src": "6943:16:3"
																			},
																			"nativeSrc": "6943:18:3",
																			"nodeType": "YulFunctionCall",
																			"src": "6943:18:3"
																		},
																		"nativeSrc": "6943:18:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "6943:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6933:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "6933:1:3"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "6936:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "6936:3:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6930:2:3",
																	"nodeType": "YulIdentifier",
																	"src": "6930:2:3"
																},
																"nativeSrc": "6930:10:3",
																"nodeType": "YulFunctionCall",
																"src": "6930:10:3"
															},
															"nativeSrc": "6927:36:3",
															"nodeType": "YulIf",
															"src": "6927:36:3"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "6779:191:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "6810:1:3",
														"nodeType": "YulTypedName",
														"src": "6810:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "6813:1:3",
														"nodeType": "YulTypedName",
														"src": "6813:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "6819:3:3",
														"nodeType": "YulTypedName",
														"src": "6819:3:3",
														"type": ""
													}
												],
												"src": "6779:191:3"
											},
											{
												"body": {
													"nativeSrc": "7102:206:3",
													"nodeType": "YulBlock",
													"src": "7102:206:3",
													"statements": [
														{
															"nativeSrc": "7112:26:3",
															"nodeType": "YulAssignment",
															"src": "7112:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7124:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "7124:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7135:2:3",
																		"nodeType": "YulLiteral",
																		"src": "7135:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7120:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "7120:3:3"
																},
																"nativeSrc": "7120:18:3",
																"nodeType": "YulFunctionCall",
																"src": "7120:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7112:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "7112:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7192:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "7192:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7205:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "7205:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7216:1:3",
																				"nodeType": "YulLiteral",
																				"src": "7216:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7201:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "7201:3:3"
																		},
																		"nativeSrc": "7201:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "7201:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "7148:43:3",
																	"nodeType": "YulIdentifier",
																	"src": "7148:43:3"
																},
																"nativeSrc": "7148:71:3",
																"nodeType": "YulFunctionCall",
																"src": "7148:71:3"
															},
															"nativeSrc": "7148:71:3",
															"nodeType": "YulExpressionStatement",
															"src": "7148:71:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "7273:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "7273:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7286:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "7286:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7297:2:3",
																				"nodeType": "YulLiteral",
																				"src": "7297:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7282:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "7282:3:3"
																		},
																		"nativeSrc": "7282:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "7282:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "7229:43:3",
																	"nodeType": "YulIdentifier",
																	"src": "7229:43:3"
																},
																"nativeSrc": "7229:72:3",
																"nodeType": "YulFunctionCall",
																"src": "7229:72:3"
															},
															"nativeSrc": "7229:72:3",
															"nodeType": "YulExpressionStatement",
															"src": "7229:72:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "6976:332:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7066:9:3",
														"nodeType": "YulTypedName",
														"src": "7066:9:3",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7078:6:3",
														"nodeType": "YulTypedName",
														"src": "7078:6:3",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7086:6:3",
														"nodeType": "YulTypedName",
														"src": "7086:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7097:4:3",
														"nodeType": "YulTypedName",
														"src": "7097:4:3",
														"type": ""
													}
												],
												"src": "6976:332:3"
											},
											{
												"body": {
													"nativeSrc": "7362:362:3",
													"nodeType": "YulBlock",
													"src": "7362:362:3",
													"statements": [
														{
															"nativeSrc": "7372:25:3",
															"nodeType": "YulAssignment",
															"src": "7372:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7395:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "7395:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7377:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "7377:17:3"
																},
																"nativeSrc": "7377:20:3",
																"nodeType": "YulFunctionCall",
																"src": "7377:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "7372:1:3",
																	"nodeType": "YulIdentifier",
																	"src": "7372:1:3"
																}
															]
														},
														{
															"nativeSrc": "7406:25:3",
															"nodeType": "YulAssignment",
															"src": "7406:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "7429:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "7429:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7411:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "7411:17:3"
																},
																"nativeSrc": "7411:20:3",
																"nodeType": "YulFunctionCall",
																"src": "7411:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "7406:1:3",
																	"nodeType": "YulIdentifier",
																	"src": "7406:1:3"
																}
															]
														},
														{
															"nativeSrc": "7440:28:3",
															"nodeType": "YulVariableDeclaration",
															"src": "7440:28:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7463:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "7463:1:3"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "7466:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "7466:1:3"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "7459:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "7459:3:3"
																},
																"nativeSrc": "7459:9:3",
																"nodeType": "YulFunctionCall",
																"src": "7459:9:3"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "7444:11:3",
																	"nodeType": "YulTypedName",
																	"src": "7444:11:3",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7477:41:3",
															"nodeType": "YulAssignment",
															"src": "7477:41:3",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "7506:11:3",
																		"nodeType": "YulIdentifier",
																		"src": "7506:11:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7488:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "7488:17:3"
																},
																"nativeSrc": "7488:30:3",
																"nodeType": "YulFunctionCall",
																"src": "7488:30:3"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "7477:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "7477:7:3"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7695:22:3",
																"nodeType": "YulBlock",
																"src": "7695:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "7697:16:3",
																				"nodeType": "YulIdentifier",
																				"src": "7697:16:3"
																			},
																			"nativeSrc": "7697:18:3",
																			"nodeType": "YulFunctionCall",
																			"src": "7697:18:3"
																		},
																		"nativeSrc": "7697:18:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "7697:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "7628:1:3",
																						"nodeType": "YulIdentifier",
																						"src": "7628:1:3"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "7621:6:3",
																					"nodeType": "YulIdentifier",
																					"src": "7621:6:3"
																				},
																				"nativeSrc": "7621:9:3",
																				"nodeType": "YulFunctionCall",
																				"src": "7621:9:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "7651:1:3",
																						"nodeType": "YulIdentifier",
																						"src": "7651:1:3"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "7658:7:3",
																								"nodeType": "YulIdentifier",
																								"src": "7658:7:3"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "7667:1:3",
																								"nodeType": "YulIdentifier",
																								"src": "7667:1:3"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "7654:3:3",
																							"nodeType": "YulIdentifier",
																							"src": "7654:3:3"
																						},
																						"nativeSrc": "7654:15:3",
																						"nodeType": "YulFunctionCall",
																						"src": "7654:15:3"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "7648:2:3",
																					"nodeType": "YulIdentifier",
																					"src": "7648:2:3"
																				},
																				"nativeSrc": "7648:22:3",
																				"nodeType": "YulFunctionCall",
																				"src": "7648:22:3"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "7601:2:3",
																			"nodeType": "YulIdentifier",
																			"src": "7601:2:3"
																		},
																		"nativeSrc": "7601:83:3",
																		"nodeType": "YulFunctionCall",
																		"src": "7601:83:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7581:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "7581:6:3"
																},
																"nativeSrc": "7581:113:3",
																"nodeType": "YulFunctionCall",
																"src": "7581:113:3"
															},
															"nativeSrc": "7578:139:3",
															"nodeType": "YulIf",
															"src": "7578:139:3"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "7314:410:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "7345:1:3",
														"nodeType": "YulTypedName",
														"src": "7345:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7348:1:3",
														"nodeType": "YulTypedName",
														"src": "7348:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "7354:7:3",
														"nodeType": "YulTypedName",
														"src": "7354:7:3",
														"type": ""
													}
												],
												"src": "7314:410:3"
											},
											{
												"body": {
													"nativeSrc": "7856:206:3",
													"nodeType": "YulBlock",
													"src": "7856:206:3",
													"statements": [
														{
															"nativeSrc": "7866:26:3",
															"nodeType": "YulAssignment",
															"src": "7866:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7878:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "7878:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7889:2:3",
																		"nodeType": "YulLiteral",
																		"src": "7889:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7874:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "7874:3:3"
																},
																"nativeSrc": "7874:18:3",
																"nodeType": "YulFunctionCall",
																"src": "7874:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7866:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "7866:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7946:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "7946:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7959:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "7959:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7970:1:3",
																				"nodeType": "YulLiteral",
																				"src": "7970:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7955:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "7955:3:3"
																		},
																		"nativeSrc": "7955:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "7955:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "7902:43:3",
																	"nodeType": "YulIdentifier",
																	"src": "7902:43:3"
																},
																"nativeSrc": "7902:71:3",
																"nodeType": "YulFunctionCall",
																"src": "7902:71:3"
															},
															"nativeSrc": "7902:71:3",
															"nodeType": "YulExpressionStatement",
															"src": "7902:71:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "8027:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "8027:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8040:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "8040:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8051:2:3",
																				"nodeType": "YulLiteral",
																				"src": "8051:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8036:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "8036:3:3"
																		},
																		"nativeSrc": "8036:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "8036:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "7983:43:3",
																	"nodeType": "YulIdentifier",
																	"src": "7983:43:3"
																},
																"nativeSrc": "7983:72:3",
																"nodeType": "YulFunctionCall",
																"src": "7983:72:3"
															},
															"nativeSrc": "7983:72:3",
															"nodeType": "YulExpressionStatement",
															"src": "7983:72:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "7730:332:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7820:9:3",
														"nodeType": "YulTypedName",
														"src": "7820:9:3",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7832:6:3",
														"nodeType": "YulTypedName",
														"src": "7832:6:3",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7840:6:3",
														"nodeType": "YulTypedName",
														"src": "7840:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7851:4:3",
														"nodeType": "YulTypedName",
														"src": "7851:4:3",
														"type": ""
													}
												],
												"src": "7730:332:3"
											},
											{
												"body": {
													"nativeSrc": "8096:152:3",
													"nodeType": "YulBlock",
													"src": "8096:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8113:1:3",
																		"nodeType": "YulLiteral",
																		"src": "8113:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8116:77:3",
																		"nodeType": "YulLiteral",
																		"src": "8116:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8106:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "8106:6:3"
																},
																"nativeSrc": "8106:88:3",
																"nodeType": "YulFunctionCall",
																"src": "8106:88:3"
															},
															"nativeSrc": "8106:88:3",
															"nodeType": "YulExpressionStatement",
															"src": "8106:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8210:1:3",
																		"nodeType": "YulLiteral",
																		"src": "8210:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8213:4:3",
																		"nodeType": "YulLiteral",
																		"src": "8213:4:3",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8203:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "8203:6:3"
																},
																"nativeSrc": "8203:15:3",
																"nodeType": "YulFunctionCall",
																"src": "8203:15:3"
															},
															"nativeSrc": "8203:15:3",
															"nodeType": "YulExpressionStatement",
															"src": "8203:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8234:1:3",
																		"nodeType": "YulLiteral",
																		"src": "8234:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8237:4:3",
																		"nodeType": "YulLiteral",
																		"src": "8237:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8227:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "8227:6:3"
																},
																"nativeSrc": "8227:15:3",
																"nodeType": "YulFunctionCall",
																"src": "8227:15:3"
															},
															"nativeSrc": "8227:15:3",
															"nodeType": "YulExpressionStatement",
															"src": "8227:15:3"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "8068:180:3",
												"nodeType": "YulFunctionDefinition",
												"src": "8068:180:3"
											},
											{
												"body": {
													"nativeSrc": "8296:143:3",
													"nodeType": "YulBlock",
													"src": "8296:143:3",
													"statements": [
														{
															"nativeSrc": "8306:25:3",
															"nodeType": "YulAssignment",
															"src": "8306:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8329:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "8329:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8311:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "8311:17:3"
																},
																"nativeSrc": "8311:20:3",
																"nodeType": "YulFunctionCall",
																"src": "8311:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "8306:1:3",
																	"nodeType": "YulIdentifier",
																	"src": "8306:1:3"
																}
															]
														},
														{
															"nativeSrc": "8340:25:3",
															"nodeType": "YulAssignment",
															"src": "8340:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "8363:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "8363:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8345:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "8345:17:3"
																},
																"nativeSrc": "8345:20:3",
																"nodeType": "YulFunctionCall",
																"src": "8345:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "8340:1:3",
																	"nodeType": "YulIdentifier",
																	"src": "8340:1:3"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8387:22:3",
																"nodeType": "YulBlock",
																"src": "8387:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "8389:16:3",
																				"nodeType": "YulIdentifier",
																				"src": "8389:16:3"
																			},
																			"nativeSrc": "8389:18:3",
																			"nodeType": "YulFunctionCall",
																			"src": "8389:18:3"
																		},
																		"nativeSrc": "8389:18:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "8389:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "8384:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "8384:1:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8377:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "8377:6:3"
																},
																"nativeSrc": "8377:9:3",
																"nodeType": "YulFunctionCall",
																"src": "8377:9:3"
															},
															"nativeSrc": "8374:35:3",
															"nodeType": "YulIf",
															"src": "8374:35:3"
														},
														{
															"nativeSrc": "8419:14:3",
															"nodeType": "YulAssignment",
															"src": "8419:14:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8428:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "8428:1:3"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "8431:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "8431:1:3"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "8424:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "8424:3:3"
																},
																"nativeSrc": "8424:9:3",
																"nodeType": "YulFunctionCall",
																"src": "8424:9:3"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "8419:1:3",
																	"nodeType": "YulIdentifier",
																	"src": "8419:1:3"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "8254:185:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "8285:1:3",
														"nodeType": "YulTypedName",
														"src": "8285:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "8288:1:3",
														"nodeType": "YulTypedName",
														"src": "8288:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "8294:1:3",
														"nodeType": "YulTypedName",
														"src": "8294:1:3",
														"type": ""
													}
												],
												"src": "8254:185:3"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_uint256_t_address__to_t_uint256_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$77_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$77_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$77_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$77__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$77_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_c266efca4f4ed37612271196433531dcbb4fca89a694d568d1e290e32feb1682(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_c266efca4f4ed37612271196433531dcbb4fca89a694d568d1e290e32feb1682_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 9)\n        store_literal_in_memory_c266efca4f4ed37612271196433531dcbb4fca89a694d568d1e290e32feb1682(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c266efca4f4ed37612271196433531dcbb4fca89a694d568d1e290e32feb1682__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c266efca4f4ed37612271196433531dcbb4fca89a694d568d1e290e32feb1682_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"168": [
									{
										"length": 32,
										"start": 496
									},
									{
										"length": 32,
										"start": 1037
									},
									{
										"length": 32,
										"start": 1350
									},
									{
										"length": 32,
										"start": 2186
									},
									{
										"length": 32,
										"start": 2428
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506004361061007b575f3560e01c80638da5cb5b116100595780638da5cb5b146100d6578063a23c44b1146100f4578063b88a802f14610125578063fc0c546a146101435761007b565b8063141833dc1461007f57806373cf575a1461009b5780637b0472f0146100a5575b5f80fd5b61009960048036038101906100949190610ac4565b610161565b005b6100a36102dd565b005b6100bf60048036038101906100ba9190610aef565b6104fa565b6040516100cd929190610b7b565b60405180910390f35b6100de6106f4565b6040516100eb9190610ba2565b60405180910390f35b61010e60048036038101906101099190610be5565b610717565b60405161011c929190610b7b565b60405180910390f35b61012d6107aa565b60405161013a9190610c10565b60405180910390f35b61014b61097a565b6040516101589190610c84565b60405180910390f35b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146101ee576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101e590610cf7565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b815260040161024b93929190610d15565b6020604051808303815f875af1158015610267573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061028b9190610d7f565b503373ffffffffffffffffffffffffffffffffffffffff167fc286f3b83e4f244dafdd6f12a30c1792eb5c99ba0ee6cb1181aaf6eac30286e8826040516102d29190610c10565b60405180910390a250565b5f60015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2090505f815f015403610359576040517f59be8f0200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f6103633361099e565b90505f81835f01546103759190610dd7565b90508260020154836001015461038b9190610dd7565b4210801561039857505f82115b156103a457825f015490505b60015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8082015f9055600182015f9055600282015f9055600382015f6101000a81549060ff021916905550507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610466929190610e0a565b6020604051808303815f875af1158015610482573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104a69190610d7f565b503373ffffffffffffffffffffffffffffffffffffffff167f0f5bb82176feb1b5e747e28471aa92156a04d9f3ab9f45f28e2d704232b93f75826040516104ed9190610c10565b60405180910390a2505050565b5f805f80600185108061050d5750600385115b15610544576040517f7616640100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330896040518463ffffffff1660e01b81526004016105a193929190610d15565b6020604051808303815f875af11580156105bd573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906105e19190610d7f565b5060405180608001604052808781526020014281526020016301e13380876106099190610e31565b81526020015f151581525060015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f820151815f015560208201518160010155604082015181600201556060820151816003015f6101000a81548160ff0219169083151502179055509050503373ffffffffffffffffffffffffffffffffffffffff167f1449c6dd7851abc30abf37f57715f492010519147cc2652fbc38202c18a6ee9087876040516106d7929190610e72565b60405180910390a285915033905081819350935050509250929050565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f805f60015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206040518060800160405290815f82015481526020016001820154815260200160028201548152602001600382015f9054906101000a900460ff1615151515815250509050805f0151849250925050915091565b5f8060015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2090505f815f015403610827576040517f59be8f0200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f6108313361099e565b90505f810361086c576040517fa5a3111c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001826003015f6101000a81548160ff0219169083151502179055507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b81526004016108e3929190610e0a565b6020604051808303815f875af11580156108ff573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906109239190610d7f565b503373ffffffffffffffffffffffffffffffffffffffff167ffc30cddea38e2bf4d6ea7d3f9ed3b6ad7f176419f4963bd81318067a4aee73fe8260405161096a9190610c10565b60405180910390a2809250505090565b7f000000000000000000000000000000000000000000000000000000000000000081565b5f8060015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206040518060800160405290815f82015481526020016001820154815260200160028201548152602001600382015f9054906101000a900460ff161515151581525050905080604001518160200151610a359190610dd7565b421015610a45575f915050610a88565b5f60196301e133808360400151610a5c9190610ec6565b610a669190610e31565b9050606481835f0151610a799190610e31565b610a839190610ec6565b925050505b919050565b5f80fd5b5f819050919050565b610aa381610a91565b8114610aad575f80fd5b50565b5f81359050610abe81610a9a565b92915050565b5f60208284031215610ad957610ad8610a8d565b5b5f610ae684828501610ab0565b91505092915050565b5f8060408385031215610b0557610b04610a8d565b5b5f610b1285828601610ab0565b9250506020610b2385828601610ab0565b9150509250929050565b610b3681610a91565b82525050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610b6582610b3c565b9050919050565b610b7581610b5b565b82525050565b5f604082019050610b8e5f830185610b2d565b610b9b6020830184610b6c565b9392505050565b5f602082019050610bb55f830184610b6c565b92915050565b610bc481610b5b565b8114610bce575f80fd5b50565b5f81359050610bdf81610bbb565b92915050565b5f60208284031215610bfa57610bf9610a8d565b5b5f610c0784828501610bd1565b91505092915050565b5f602082019050610c235f830184610b2d565b92915050565b5f819050919050565b5f610c4c610c47610c4284610b3c565b610c29565b610b3c565b9050919050565b5f610c5d82610c32565b9050919050565b5f610c6e82610c53565b9050919050565b610c7e81610c64565b82525050565b5f602082019050610c975f830184610c75565b92915050565b5f82825260208201905092915050565b7f4e6f74206f776e657200000000000000000000000000000000000000000000005f82015250565b5f610ce1600983610c9d565b9150610cec82610cad565b602082019050919050565b5f6020820190508181035f830152610d0e81610cd5565b9050919050565b5f606082019050610d285f830186610b6c565b610d356020830185610b6c565b610d426040830184610b2d565b949350505050565b5f8115159050919050565b610d5e81610d4a565b8114610d68575f80fd5b50565b5f81519050610d7981610d55565b92915050565b5f60208284031215610d9457610d93610a8d565b5b5f610da184828501610d6b565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610de182610a91565b9150610dec83610a91565b9250828201905080821115610e0457610e03610daa565b5b92915050565b5f604082019050610e1d5f830185610b6c565b610e2a6020830184610b2d565b9392505050565b5f610e3b82610a91565b9150610e4683610a91565b9250828202610e5481610a91565b91508282048414831517610e6b57610e6a610daa565b5b5092915050565b5f604082019050610e855f830185610b2d565b610e926020830184610b2d565b9392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f610ed082610a91565b9150610edb83610a91565b925082610eeb57610eea610e99565b5b82820490509291505056fea2646970667358221220c585afa8d2e633c3ae3089588eb5a51e7ab3b0b0d1b834390f54e02bc9923c9564736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7B JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x59 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xD6 JUMPI DUP1 PUSH4 0xA23C44B1 EQ PUSH2 0xF4 JUMPI DUP1 PUSH4 0xB88A802F EQ PUSH2 0x125 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x143 JUMPI PUSH2 0x7B JUMP JUMPDEST DUP1 PUSH4 0x141833DC EQ PUSH2 0x7F JUMPI DUP1 PUSH4 0x73CF575A EQ PUSH2 0x9B JUMPI DUP1 PUSH4 0x7B0472F0 EQ PUSH2 0xA5 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x99 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x94 SWAP2 SWAP1 PUSH2 0xAC4 JUMP JUMPDEST PUSH2 0x161 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xA3 PUSH2 0x2DD JUMP JUMPDEST STOP JUMPDEST PUSH2 0xBF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xBA SWAP2 SWAP1 PUSH2 0xAEF JUMP JUMPDEST PUSH2 0x4FA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCD SWAP3 SWAP2 SWAP1 PUSH2 0xB7B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDE PUSH2 0x6F4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xEB SWAP2 SWAP1 PUSH2 0xBA2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x109 SWAP2 SWAP1 PUSH2 0xBE5 JUMP JUMPDEST PUSH2 0x717 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11C SWAP3 SWAP2 SWAP1 PUSH2 0xB7B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x12D PUSH2 0x7AA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13A SWAP2 SWAP1 PUSH2 0xC10 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x14B PUSH2 0x97A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x158 SWAP2 SWAP1 PUSH2 0xC84 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1EE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E5 SWAP1 PUSH2 0xCF7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x24B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xD15 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x267 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x28B SWAP2 SWAP1 PUSH2 0xD7F JUMP JUMPDEST POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC286F3B83E4F244DAFDD6F12A30C1792EB5C99BA0EE6CB1181AAF6EAC30286E8 DUP3 PUSH1 0x40 MLOAD PUSH2 0x2D2 SWAP2 SWAP1 PUSH2 0xC10 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH0 DUP2 PUSH0 ADD SLOAD SUB PUSH2 0x359 JUMPI PUSH1 0x40 MLOAD PUSH32 0x59BE8F0200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x363 CALLER PUSH2 0x99E JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 DUP4 PUSH0 ADD SLOAD PUSH2 0x375 SWAP2 SWAP1 PUSH2 0xDD7 JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x2 ADD SLOAD DUP4 PUSH1 0x1 ADD SLOAD PUSH2 0x38B SWAP2 SWAP1 PUSH2 0xDD7 JUMP JUMPDEST TIMESTAMP LT DUP1 ISZERO PUSH2 0x398 JUMPI POP PUSH0 DUP3 GT JUMPDEST ISZERO PUSH2 0x3A4 JUMPI DUP3 PUSH0 ADD SLOAD SWAP1 POP JUMPDEST PUSH1 0x1 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP1 DUP3 ADD PUSH0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH0 SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH0 SWAP1 SSTORE PUSH1 0x3 DUP3 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE POP POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x466 SWAP3 SWAP2 SWAP1 PUSH2 0xE0A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x482 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4A6 SWAP2 SWAP1 PUSH2 0xD7F JUMP JUMPDEST POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF5BB82176FEB1B5E747E28471AA92156A04D9F3AB9F45F28E2D704232B93F75 DUP3 PUSH1 0x40 MLOAD PUSH2 0x4ED SWAP2 SWAP1 PUSH2 0xC10 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x1 DUP6 LT DUP1 PUSH2 0x50D JUMPI POP PUSH1 0x3 DUP6 GT JUMPDEST ISZERO PUSH2 0x544 JUMPI PUSH1 0x40 MLOAD PUSH32 0x7616640100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP10 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5A1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xD15 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5BD JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5E1 SWAP2 SWAP1 PUSH2 0xD7F JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 DUP8 DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD PUSH4 0x1E13380 DUP8 PUSH2 0x609 SWAP2 SWAP1 PUSH2 0xE31 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH0 ISZERO ISZERO DUP2 MSTORE POP PUSH1 0x1 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x1449C6DD7851ABC30ABF37F57715F492010519147CC2652FBC38202C18A6EE90 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0x6D7 SWAP3 SWAP2 SWAP1 PUSH2 0xE72 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 DUP6 SWAP2 POP CALLER SWAP1 POP DUP2 DUP2 SWAP4 POP SWAP4 POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP SWAP1 POP DUP1 PUSH0 ADD MLOAD DUP5 SWAP3 POP SWAP3 POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x1 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH0 DUP2 PUSH0 ADD SLOAD SUB PUSH2 0x827 JUMPI PUSH1 0x40 MLOAD PUSH32 0x59BE8F0200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x831 CALLER PUSH2 0x99E JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 SUB PUSH2 0x86C JUMPI PUSH1 0x40 MLOAD PUSH32 0xA5A3111C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x3 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8E3 SWAP3 SWAP2 SWAP1 PUSH2 0xE0A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x8FF JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x923 SWAP2 SWAP1 PUSH2 0xD7F JUMP JUMPDEST POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xFC30CDDEA38E2BF4D6EA7D3F9ED3B6AD7F176419F4963BD81318067A4AEE73FE DUP3 PUSH1 0x40 MLOAD PUSH2 0x96A SWAP2 SWAP1 PUSH2 0xC10 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 DUP1 SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP SWAP1 POP DUP1 PUSH1 0x40 ADD MLOAD DUP2 PUSH1 0x20 ADD MLOAD PUSH2 0xA35 SWAP2 SWAP1 PUSH2 0xDD7 JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0xA45 JUMPI PUSH0 SWAP2 POP POP PUSH2 0xA88 JUMP JUMPDEST PUSH0 PUSH1 0x19 PUSH4 0x1E13380 DUP4 PUSH1 0x40 ADD MLOAD PUSH2 0xA5C SWAP2 SWAP1 PUSH2 0xEC6 JUMP JUMPDEST PUSH2 0xA66 SWAP2 SWAP1 PUSH2 0xE31 JUMP JUMPDEST SWAP1 POP PUSH1 0x64 DUP2 DUP4 PUSH0 ADD MLOAD PUSH2 0xA79 SWAP2 SWAP1 PUSH2 0xE31 JUMP JUMPDEST PUSH2 0xA83 SWAP2 SWAP1 PUSH2 0xEC6 JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAA3 DUP2 PUSH2 0xA91 JUMP JUMPDEST DUP2 EQ PUSH2 0xAAD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xABE DUP2 PUSH2 0xA9A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xAD9 JUMPI PUSH2 0xAD8 PUSH2 0xA8D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xAE6 DUP5 DUP3 DUP6 ADD PUSH2 0xAB0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB05 JUMPI PUSH2 0xB04 PUSH2 0xA8D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xB12 DUP6 DUP3 DUP7 ADD PUSH2 0xAB0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xB23 DUP6 DUP3 DUP7 ADD PUSH2 0xAB0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xB36 DUP2 PUSH2 0xA91 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xB65 DUP3 PUSH2 0xB3C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB75 DUP2 PUSH2 0xB5B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xB8E PUSH0 DUP4 ADD DUP6 PUSH2 0xB2D JUMP JUMPDEST PUSH2 0xB9B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xB6C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xBB5 PUSH0 DUP4 ADD DUP5 PUSH2 0xB6C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xBC4 DUP2 PUSH2 0xB5B JUMP JUMPDEST DUP2 EQ PUSH2 0xBCE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBDF DUP2 PUSH2 0xBBB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBFA JUMPI PUSH2 0xBF9 PUSH2 0xA8D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xC07 DUP5 DUP3 DUP6 ADD PUSH2 0xBD1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC23 PUSH0 DUP4 ADD DUP5 PUSH2 0xB2D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xC4C PUSH2 0xC47 PUSH2 0xC42 DUP5 PUSH2 0xB3C JUMP JUMPDEST PUSH2 0xC29 JUMP JUMPDEST PUSH2 0xB3C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xC5D DUP3 PUSH2 0xC32 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xC6E DUP3 PUSH2 0xC53 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC7E DUP2 PUSH2 0xC64 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC97 PUSH0 DUP4 ADD DUP5 PUSH2 0xC75 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F74206F776E65720000000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xCE1 PUSH1 0x9 DUP4 PUSH2 0xC9D JUMP JUMPDEST SWAP2 POP PUSH2 0xCEC DUP3 PUSH2 0xCAD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xD0E DUP2 PUSH2 0xCD5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xD28 PUSH0 DUP4 ADD DUP7 PUSH2 0xB6C JUMP JUMPDEST PUSH2 0xD35 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xB6C JUMP JUMPDEST PUSH2 0xD42 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xB2D JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD5E DUP2 PUSH2 0xD4A JUMP JUMPDEST DUP2 EQ PUSH2 0xD68 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xD79 DUP2 PUSH2 0xD55 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD94 JUMPI PUSH2 0xD93 PUSH2 0xA8D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xDA1 DUP5 DUP3 DUP6 ADD PUSH2 0xD6B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xDE1 DUP3 PUSH2 0xA91 JUMP JUMPDEST SWAP2 POP PUSH2 0xDEC DUP4 PUSH2 0xA91 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xE04 JUMPI PUSH2 0xE03 PUSH2 0xDAA JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xE1D PUSH0 DUP4 ADD DUP6 PUSH2 0xB6C JUMP JUMPDEST PUSH2 0xE2A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xB2D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xE3B DUP3 PUSH2 0xA91 JUMP JUMPDEST SWAP2 POP PUSH2 0xE46 DUP4 PUSH2 0xA91 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0xE54 DUP2 PUSH2 0xA91 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0xE6B JUMPI PUSH2 0xE6A PUSH2 0xDAA JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xE85 PUSH0 DUP4 ADD DUP6 PUSH2 0xB2D JUMP JUMPDEST PUSH2 0xE92 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xB2D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xED0 DUP3 PUSH2 0xA91 JUMP JUMPDEST SWAP2 POP PUSH2 0xEDB DUP4 PUSH2 0xA91 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xEEB JUMPI PUSH2 0xEEA PUSH2 0xE99 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC5 DUP6 0xAF 0xA8 0xD2 0xE6 CALLER 0xC3 0xAE ADDRESS DUP10 PC DUP15 0xB5 0xA5 0x1E PUSH27 0xB3B0B0D1B834390F54E02BC9923C9564736F6C634300081A003300 ",
							"sourceMap": "110:4354:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1671:177;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3227:625;;;:::i;:::-;;828:697;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;216:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4153:213;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;2510:473;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;145:29;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1671:177;4425:5;;;;;;;;;;4411:19;;:10;:19;;;4403:41;;;;;;;;;;;;:::i;:::-;;;;;;;;;1739:5:::1;:18;;;1758:10;1778:4;1785:7;1739:54;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1821:10;1808:33;;;1833:7;1808:33;;;;;;:::i;:::-;;;;;;;;1671:177:::0;:::o;3227:625::-;3265:23;3291:6;:18;3298:10;3291:18;;;;;;;;;;;;;;;3265:44;;3343:1;3323:9;:16;;;:21;3319:73;;3367:14;;;;;;;;;;;;;;3319:73;3402:14;3419:27;3435:10;3419:15;:27::i;:::-;3402:44;;3456:19;3497:6;3478:9;:16;;;:25;;;;:::i;:::-;3456:47;;3571:9;:18;;;3549:9;:19;;;:40;;;;:::i;:::-;3531:15;:58;:84;;;;;3614:1;3605:6;:10;3531:84;3514:199;;;3654:9;:16;;;3640:30;;3514:199;3730:6;:18;3737:10;3730:18;;;;;;;;;;;;;;;;3723:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3758:5;:14;;;3773:10;3785:11;3758:39;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3821:10;3812:33;;;3833:11;3812:33;;;;;;:::i;:::-;;;;;;;;3255:597;;;3227:625::o;828:697::-;913:7;922;945:16;971:17;1014:1;1002:9;:13;:30;;;;1031:1;1019:9;:13;1002:30;998:85;;;1055:17;;;;;;;;;;;;;;998:85;1093:5;:18;;;1112:10;1132:4;1139:7;1093:54;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1179:186;;;;;;;;1207:7;1179:186;;;;1239:15;1179:186;;;;1290:8;1278:9;:20;;;;:::i;:::-;1179:186;;;;1349:5;1179:186;;;;;1158:6;:18;1165:10;1158:18;;;;;;;;;;;;;;;:207;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1388:10;1381:38;;;1400:7;1409:9;1381:38;;;;;;;:::i;:::-;;;;;;;;1441:7;1430:18;;1470:10;1458:22;;1498:8;1508:9;1490:28;;;;;;828:697;;;;;:::o;216:20::-;;;;;;;;;;;;:::o;4153:213::-;4241:7;4250;4273:18;4294:6;:20;4301:12;4294:20;;;;;;;;;;;;;;;4273:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4332:5;:12;;;4346;4324:35;;;;;4153:213;;;:::o;2510:473::-;2551:7;2570:23;2596:6;:18;2603:10;2596:18;;;;;;;;;;;;;;;2570:44;;2648:1;2628:9;:16;;;:21;2624:73;;2672:14;;;;;;;;;;;;;;2624:73;2707:14;2724:27;2740:10;2724:15;:27::i;:::-;2707:44;;2775:1;2765:6;:11;2761:65;;2799:16;;;;;;;;;;;;;;2761:65;2856:4;2836:9;:17;;;:24;;;;;;;;;;;;;;;;;;2870:5;:14;;;2885:10;2897:6;2870:34;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2934:10;2919:34;;;2946:6;2919:34;;;;;;:::i;:::-;;;;;;;;2970:6;2963:13;;;;2510:473;:::o;145:29::-;;;:::o;2019:413::-;2082:7;2101:22;2126:6;:13;2133:5;2126:13;;;;;;;;;;;;;;;2101:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2193:9;:18;;;2171:9;:19;;;:40;;;;:::i;:::-;2153:15;:58;2149:127;;;2234:1;2227:8;;;;;2149:127;2286:24;2347:2;2335:8;2314:9;:18;;;:29;;;;:::i;:::-;2313:36;;;;:::i;:::-;2286:63;;2422:3;2402:16;2383:9;:16;;;:35;;;;:::i;:::-;2382:43;;;;:::i;:::-;2375:50;;;;2019:413;;;;:::o;88:117:3:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:329::-;749:6;798:2;786:9;777:7;773:23;769:32;766:119;;;804:79;;:::i;:::-;766:119;924:1;949:53;994:7;985:6;974:9;970:22;949:53;:::i;:::-;939:63;;895:117;690:329;;;;:::o;1025:474::-;1093:6;1101;1150:2;1138:9;1129:7;1125:23;1121:32;1118:119;;;1156:79;;:::i;:::-;1118:119;1276:1;1301:53;1346:7;1337:6;1326:9;1322:22;1301:53;:::i;:::-;1291:63;;1247:117;1403:2;1429:53;1474:7;1465:6;1454:9;1450:22;1429:53;:::i;:::-;1419:63;;1374:118;1025:474;;;;;:::o;1505:118::-;1592:24;1610:5;1592:24;:::i;:::-;1587:3;1580:37;1505:118;;:::o;1629:126::-;1666:7;1706:42;1699:5;1695:54;1684:65;;1629:126;;;:::o;1761:96::-;1798:7;1827:24;1845:5;1827:24;:::i;:::-;1816:35;;1761:96;;;:::o;1863:118::-;1950:24;1968:5;1950:24;:::i;:::-;1945:3;1938:37;1863:118;;:::o;1987:332::-;2108:4;2146:2;2135:9;2131:18;2123:26;;2159:71;2227:1;2216:9;2212:17;2203:6;2159:71;:::i;:::-;2240:72;2308:2;2297:9;2293:18;2284:6;2240:72;:::i;:::-;1987:332;;;;;:::o;2325:222::-;2418:4;2456:2;2445:9;2441:18;2433:26;;2469:71;2537:1;2526:9;2522:17;2513:6;2469:71;:::i;:::-;2325:222;;;;:::o;2553:122::-;2626:24;2644:5;2626:24;:::i;:::-;2619:5;2616:35;2606:63;;2665:1;2662;2655:12;2606:63;2553:122;:::o;2681:139::-;2727:5;2765:6;2752:20;2743:29;;2781:33;2808:5;2781:33;:::i;:::-;2681:139;;;;:::o;2826:329::-;2885:6;2934:2;2922:9;2913:7;2909:23;2905:32;2902:119;;;2940:79;;:::i;:::-;2902:119;3060:1;3085:53;3130:7;3121:6;3110:9;3106:22;3085:53;:::i;:::-;3075:63;;3031:117;2826:329;;;;:::o;3161:222::-;3254:4;3292:2;3281:9;3277:18;3269:26;;3305:71;3373:1;3362:9;3358:17;3349:6;3305:71;:::i;:::-;3161:222;;;;:::o;3389:60::-;3417:3;3438:5;3431:12;;3389:60;;;:::o;3455:142::-;3505:9;3538:53;3556:34;3565:24;3583:5;3565:24;:::i;:::-;3556:34;:::i;:::-;3538:53;:::i;:::-;3525:66;;3455:142;;;:::o;3603:126::-;3653:9;3686:37;3717:5;3686:37;:::i;:::-;3673:50;;3603:126;;;:::o;3735:139::-;3798:9;3831:37;3862:5;3831:37;:::i;:::-;3818:50;;3735:139;;;:::o;3880:157::-;3980:50;4024:5;3980:50;:::i;:::-;3975:3;3968:63;3880:157;;:::o;4043:248::-;4149:4;4187:2;4176:9;4172:18;4164:26;;4200:84;4281:1;4270:9;4266:17;4257:6;4200:84;:::i;:::-;4043:248;;;;:::o;4297:169::-;4381:11;4415:6;4410:3;4403:19;4455:4;4450:3;4446:14;4431:29;;4297:169;;;;:::o;4472:159::-;4612:11;4608:1;4600:6;4596:14;4589:35;4472:159;:::o;4637:365::-;4779:3;4800:66;4864:1;4859:3;4800:66;:::i;:::-;4793:73;;4875:93;4964:3;4875:93;:::i;:::-;4993:2;4988:3;4984:12;4977:19;;4637:365;;;:::o;5008:419::-;5174:4;5212:2;5201:9;5197:18;5189:26;;5261:9;5255:4;5251:20;5247:1;5236:9;5232:17;5225:47;5289:131;5415:4;5289:131;:::i;:::-;5281:139;;5008:419;;;:::o;5433:442::-;5582:4;5620:2;5609:9;5605:18;5597:26;;5633:71;5701:1;5690:9;5686:17;5677:6;5633:71;:::i;:::-;5714:72;5782:2;5771:9;5767:18;5758:6;5714:72;:::i;:::-;5796;5864:2;5853:9;5849:18;5840:6;5796:72;:::i;:::-;5433:442;;;;;;:::o;5881:90::-;5915:7;5958:5;5951:13;5944:21;5933:32;;5881:90;;;:::o;5977:116::-;6047:21;6062:5;6047:21;:::i;:::-;6040:5;6037:32;6027:60;;6083:1;6080;6073:12;6027:60;5977:116;:::o;6099:137::-;6153:5;6184:6;6178:13;6169:22;;6200:30;6224:5;6200:30;:::i;:::-;6099:137;;;;:::o;6242:345::-;6309:6;6358:2;6346:9;6337:7;6333:23;6329:32;6326:119;;;6364:79;;:::i;:::-;6326:119;6484:1;6509:61;6562:7;6553:6;6542:9;6538:22;6509:61;:::i;:::-;6499:71;;6455:125;6242:345;;;;:::o;6593:180::-;6641:77;6638:1;6631:88;6738:4;6735:1;6728:15;6762:4;6759:1;6752:15;6779:191;6819:3;6838:20;6856:1;6838:20;:::i;:::-;6833:25;;6872:20;6890:1;6872:20;:::i;:::-;6867:25;;6915:1;6912;6908:9;6901:16;;6936:3;6933:1;6930:10;6927:36;;;6943:18;;:::i;:::-;6927:36;6779:191;;;;:::o;6976:332::-;7097:4;7135:2;7124:9;7120:18;7112:26;;7148:71;7216:1;7205:9;7201:17;7192:6;7148:71;:::i;:::-;7229:72;7297:2;7286:9;7282:18;7273:6;7229:72;:::i;:::-;6976:332;;;;;:::o;7314:410::-;7354:7;7377:20;7395:1;7377:20;:::i;:::-;7372:25;;7411:20;7429:1;7411:20;:::i;:::-;7406:25;;7466:1;7463;7459:9;7488:30;7506:11;7488:30;:::i;:::-;7477:41;;7667:1;7658:7;7654:15;7651:1;7648:22;7628:1;7621:9;7601:83;7578:139;;7697:18;;:::i;:::-;7578:139;7362:362;7314:410;;;;:::o;7730:332::-;7851:4;7889:2;7878:9;7874:18;7866:26;;7902:71;7970:1;7959:9;7955:17;7946:6;7902:71;:::i;:::-;7983:72;8051:2;8040:9;8036:18;8027:6;7983:72;:::i;:::-;7730:332;;;;;:::o;8068:180::-;8116:77;8113:1;8106:88;8213:4;8210:1;8203:15;8237:4;8234:1;8227:15;8254:185;8294:1;8311:20;8329:1;8311:20;:::i;:::-;8306:25;;8345:20;8363:1;8345:20;:::i;:::-;8340:25;;8384:1;8374:35;;8389:18;;:::i;:::-;8374:35;8431:1;8428;8424:9;8419:14;;8254:185;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "776800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"claimReward()": "infinite",
								"getStaker(address)": "infinite",
								"owner()": "2505",
								"ownerDeposit(uint256)": "infinite",
								"stake(uint256,uint256)": "infinite",
								"token()": "infinite",
								"unStake()": "infinite"
							},
							"internal": {
								"calculateReward(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 110,
									"end": 4464,
									"name": "PUSH",
									"source": 2,
									"value": "A0"
								},
								{
									"begin": 110,
									"end": 4464,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 110,
									"end": 4464,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 273,
									"end": 541,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 273,
									"end": 541,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 273,
									"end": 541,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 273,
									"end": 541,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 273,
									"end": 541,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 273,
									"end": 541,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 273,
									"end": 541,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 273,
									"end": 541,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 273,
									"end": 541,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 273,
									"end": 541,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 273,
									"end": 541,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 297,
									"end": 318,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 329,
									"end": 371,
									"name": "PUSH",
									"source": 2,
									"value": "D9145CCE52D386F254917E481EB44E9943F39138"
								},
								{
									"begin": 297,
									"end": 372,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 297,
									"end": 372,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 419,
									"end": 432,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 404,
									"end": 433,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 433,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 404,
									"end": 433,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 404,
									"end": 433,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 404,
									"end": 433,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 433,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 404,
									"end": 433,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 404,
									"end": 433,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 404,
									"end": 433,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 404,
									"end": 433,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 495,
									"end": 505,
									"name": "CALLER",
									"source": 2
								},
								{
									"begin": 487,
									"end": 492,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 487,
									"end": 492,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 487,
									"end": 505,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 487,
									"end": 505,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 487,
									"end": 505,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 487,
									"end": 505,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 487,
									"end": 505,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 487,
									"end": 505,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 487,
									"end": 505,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 487,
									"end": 505,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 487,
									"end": 505,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 487,
									"end": 505,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 487,
									"end": 505,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 487,
									"end": 505,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 487,
									"end": 505,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 487,
									"end": 505,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 487,
									"end": 505,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 487,
									"end": 505,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 487,
									"end": 505,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 487,
									"end": 505,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 287,
									"end": 541,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 110,
									"end": 4464,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 110,
									"end": 4464,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 110,
									"end": 4464,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 110,
									"end": 4464,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 110,
									"end": 4464,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 110,
									"end": 4464,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 110,
									"end": 4464,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 110,
									"end": 4464,
									"name": "ASSIGNIMMUTABLE",
									"source": 2,
									"value": "168"
								},
								{
									"begin": 110,
									"end": 4464,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 110,
									"end": 4464,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 110,
									"end": 4464,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c585afa8d2e633c3ae3089588eb5a51e7ab3b0b0d1b834390f54e02bc9923c9564736f6c634300081a0033",
									".code": [
										{
											"begin": 110,
											"end": 4464,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 110,
											"end": 4464,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 110,
											"end": 4464,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 110,
											"end": 4464,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 110,
											"end": 4464,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 110,
											"end": 4464,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 110,
											"end": 4464,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 110,
											"end": 4464,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 110,
											"end": 4464,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 110,
											"end": 4464,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 110,
											"end": 4464,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 110,
											"end": 4464,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 110,
											"end": 4464,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 110,
											"end": 4464,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 110,
											"end": 4464,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 110,
											"end": 4464,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 110,
											"end": 4464,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 110,
											"end": 4464,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 110,
											"end": 4464,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 110,
											"end": 4464,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 110,
											"end": 4464,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 110,
											"end": 4464,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 110,
											"end": 4464,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 110,
											"end": 4464,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 110,
											"end": 4464,
											"name": "PUSH",
											"source": 2,
											"value": "8DA5CB5B"
										},
										{
											"begin": 110,
											"end": 4464,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 110,
											"end": 4464,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 110,
											"end": 4464,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 110,
											"end": 4464,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 110,
											"end": 4464,
											"name": "PUSH",
											"source": 2,
											"value": "8DA5CB5B"
										},
										{
											"begin": 110,
											"end": 4464,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 110,
											"end": 4464,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 110,
											"end": 4464,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 110,
											"end": 4464,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 110,
											"end": 4464,
											"name": "PUSH",
											"source": 2,
											"value": "A23C44B1"
										},
										{
											"begin": 110,
											"end": 4464,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 110,
											"end": 4464,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 110,
											"end": 4464,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 110,
											"end": 4464,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 110,
											"end": 4464,
											"name": "PUSH",
											"source": 2,
											"value": "B88A802F"
										},
										{
											"begin": 110,
											"end": 4464,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 110,
											"end": 4464,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 110,
											"end": 4464,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 110,
											"end": 4464,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 110,
											"end": 4464,
											"name": "PUSH",
											"source": 2,
											"value": "FC0C546A"
										},
										{
											"begin": 110,
											"end": 4464,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 110,
											"end": 4464,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 110,
											"end": 4464,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 110,
											"end": 4464,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 110,
											"end": 4464,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 110,
											"end": 4464,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 110,
											"end": 4464,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 110,
											"end": 4464,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 110,
											"end": 4464,
											"name": "PUSH",
											"source": 2,
											"value": "141833DC"
										},
										{
											"begin": 110,
											"end": 4464,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 110,
											"end": 4464,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 110,
											"end": 4464,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 110,
											"end": 4464,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 110,
											"end": 4464,
											"name": "PUSH",
											"source": 2,
											"value": "73CF575A"
										},
										{
											"begin": 110,
											"end": 4464,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 110,
											"end": 4464,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 110,
											"end": 4464,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 110,
											"end": 4464,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 110,
											"end": 4464,
											"name": "PUSH",
											"source": 2,
											"value": "7B0472F0"
										},
										{
											"begin": 110,
											"end": 4464,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 110,
											"end": 4464,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 110,
											"end": 4464,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 110,
											"end": 4464,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 110,
											"end": 4464,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 110,
											"end": 4464,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 110,
											"end": 4464,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 110,
											"end": 4464,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1848,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1671,
											"end": 1848,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1848,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 1671,
											"end": 1848,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1671,
											"end": 1848,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1848,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1848,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1848,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1848,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1848,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1848,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 1671,
											"end": 1848,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1848,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1848,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 1671,
											"end": 1848,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1848,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 1671,
											"end": 1848,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1848,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 1671,
											"end": 1848,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1848,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 1671,
											"end": 1848,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1848,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 3227,
											"end": 3852,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3227,
											"end": 3852,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3227,
											"end": 3852,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 3227,
											"end": 3852,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 3227,
											"end": 3852,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3227,
											"end": 3852,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 3227,
											"end": 3852,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3227,
											"end": 3852,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 828,
											"end": 1525,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 828,
											"end": 1525,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 828,
											"end": 1525,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 828,
											"end": 1525,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 828,
											"end": 1525,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 828,
											"end": 1525,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 828,
											"end": 1525,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 828,
											"end": 1525,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 828,
											"end": 1525,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 828,
											"end": 1525,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 828,
											"end": 1525,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 828,
											"end": 1525,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 828,
											"end": 1525,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 828,
											"end": 1525,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 828,
											"end": 1525,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 828,
											"end": 1525,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 828,
											"end": 1525,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 828,
											"end": 1525,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 828,
											"end": 1525,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 828,
											"end": 1525,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 828,
											"end": 1525,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 828,
											"end": 1525,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 828,
											"end": 1525,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 828,
											"end": 1525,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 828,
											"end": 1525,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 828,
											"end": 1525,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 828,
											"end": 1525,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 828,
											"end": 1525,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 828,
											"end": 1525,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 828,
											"end": 1525,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 828,
											"end": 1525,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 828,
											"end": 1525,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 828,
											"end": 1525,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 828,
											"end": 1525,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 828,
											"end": 1525,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 828,
											"end": 1525,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 828,
											"end": 1525,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 828,
											"end": 1525,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 216,
											"end": 236,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 216,
											"end": 236,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 216,
											"end": 236,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 216,
											"end": 236,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 216,
											"end": 236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 216,
											"end": 236,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 216,
											"end": 236,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 216,
											"end": 236,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 216,
											"end": 236,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 216,
											"end": 236,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 216,
											"end": 236,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 216,
											"end": 236,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 216,
											"end": 236,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 216,
											"end": 236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 216,
											"end": 236,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 216,
											"end": 236,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 216,
											"end": 236,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 216,
											"end": 236,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 216,
											"end": 236,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 216,
											"end": 236,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 216,
											"end": 236,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 216,
											"end": 236,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 216,
											"end": 236,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 4153,
											"end": 4366,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 4153,
											"end": 4366,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4153,
											"end": 4366,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 4153,
											"end": 4366,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4153,
											"end": 4366,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4153,
											"end": 4366,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4153,
											"end": 4366,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4153,
											"end": 4366,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4153,
											"end": 4366,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4153,
											"end": 4366,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4153,
											"end": 4366,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 4153,
											"end": 4366,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4153,
											"end": 4366,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4153,
											"end": 4366,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 4153,
											"end": 4366,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4153,
											"end": 4366,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 4153,
											"end": 4366,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4153,
											"end": 4366,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 4153,
											"end": 4366,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4153,
											"end": 4366,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 4153,
											"end": 4366,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4153,
											"end": 4366,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4153,
											"end": 4366,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4153,
											"end": 4366,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 4153,
											"end": 4366,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4153,
											"end": 4366,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4153,
											"end": 4366,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4153,
											"end": 4366,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 4153,
											"end": 4366,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4153,
											"end": 4366,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 4153,
											"end": 4366,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4153,
											"end": 4366,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4153,
											"end": 4366,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4153,
											"end": 4366,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4153,
											"end": 4366,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4153,
											"end": 4366,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4153,
											"end": 4366,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4153,
											"end": 4366,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2510,
											"end": 2983,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 2510,
											"end": 2983,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2510,
											"end": 2983,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 2510,
											"end": 2983,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 2510,
											"end": 2983,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2510,
											"end": 2983,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 2510,
											"end": 2983,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2510,
											"end": 2983,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2510,
											"end": 2983,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2510,
											"end": 2983,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 2510,
											"end": 2983,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2510,
											"end": 2983,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2510,
											"end": 2983,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 2510,
											"end": 2983,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2510,
											"end": 2983,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 2510,
											"end": 2983,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2510,
											"end": 2983,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2510,
											"end": 2983,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2510,
											"end": 2983,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2510,
											"end": 2983,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2510,
											"end": 2983,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2510,
											"end": 2983,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2510,
											"end": 2983,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 145,
											"end": 174,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 145,
											"end": 174,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 145,
											"end": 174,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 145,
											"end": 174,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 145,
											"end": 174,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 145,
											"end": 174,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 145,
											"end": 174,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 145,
											"end": 174,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 145,
											"end": 174,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 145,
											"end": 174,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 145,
											"end": 174,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 145,
											"end": 174,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 145,
											"end": 174,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 145,
											"end": 174,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 145,
											"end": 174,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 145,
											"end": 174,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 145,
											"end": 174,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 145,
											"end": 174,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 145,
											"end": 174,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 145,
											"end": 174,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 145,
											"end": 174,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 145,
											"end": 174,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 145,
											"end": 174,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1848,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 1671,
											"end": 1848,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4425,
											"end": 4430,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4425,
											"end": 4430,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4425,
											"end": 4430,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4425,
											"end": 4430,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4425,
											"end": 4430,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 4425,
											"end": 4430,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 4425,
											"end": 4430,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4425,
											"end": 4430,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 4425,
											"end": 4430,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4425,
											"end": 4430,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4411,
											"end": 4430,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4411,
											"end": 4430,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4411,
											"end": 4421,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 4411,
											"end": 4430,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4411,
											"end": 4430,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4411,
											"end": 4430,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 4403,
											"end": 4444,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 4403,
											"end": 4444,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4403,
											"end": 4444,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4403,
											"end": 4444,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4403,
											"end": 4444,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4403,
											"end": 4444,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4403,
											"end": 4444,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4403,
											"end": 4444,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4403,
											"end": 4444,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4403,
											"end": 4444,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 4403,
											"end": 4444,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4403,
											"end": 4444,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 4403,
											"end": 4444,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4403,
											"end": 4444,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 4403,
											"end": 4444,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4403,
											"end": 4444,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4403,
											"end": 4444,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4403,
											"end": 4444,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4403,
											"end": 4444,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4403,
											"end": 4444,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4403,
											"end": 4444,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4403,
											"end": 4444,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4403,
											"end": 4444,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 4403,
											"end": 4444,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1739,
											"end": 1744,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 1739,
											"end": 1757,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1739,
											"end": 1757,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1739,
											"end": 1757,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "23B872DD"
										},
										{
											"begin": 1758,
											"end": 1768,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1778,
											"end": 1782,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 1785,
											"end": 1792,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1739,
											"end": 1793,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1739,
											"end": 1793,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1739,
											"end": 1793,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1739,
											"end": 1793,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1739,
											"end": 1793,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1739,
											"end": 1793,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1739,
											"end": 1793,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1739,
											"end": 1793,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1739,
											"end": 1793,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1739,
											"end": 1793,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1739,
											"end": 1793,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1739,
											"end": 1793,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 1739,
											"end": 1793,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1739,
											"end": 1793,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1739,
											"end": 1793,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1739,
											"end": 1793,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1739,
											"end": 1793,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 1739,
											"end": 1793,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1739,
											"end": 1793,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 1739,
											"end": 1793,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1739,
											"end": 1793,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1739,
											"end": 1793,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1739,
											"end": 1793,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1739,
											"end": 1793,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1739,
											"end": 1793,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1739,
											"end": 1793,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1739,
											"end": 1793,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1739,
											"end": 1793,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1739,
											"end": 1793,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 1739,
											"end": 1793,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 1739,
											"end": 1793,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 1739,
											"end": 1793,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1739,
											"end": 1793,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1739,
											"end": 1793,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1739,
											"end": 1793,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 1739,
											"end": 1793,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1739,
											"end": 1793,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1739,
											"end": 1793,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1739,
											"end": 1793,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1739,
											"end": 1793,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1739,
											"end": 1793,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1739,
											"end": 1793,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1739,
											"end": 1793,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1739,
											"end": 1793,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 1739,
											"end": 1793,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1739,
											"end": 1793,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1739,
											"end": 1793,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1739,
											"end": 1793,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1739,
											"end": 1793,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1739,
											"end": 1793,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1739,
											"end": 1793,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1739,
											"end": 1793,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1739,
											"end": 1793,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1739,
											"end": 1793,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1739,
											"end": 1793,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1739,
											"end": 1793,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1739,
											"end": 1793,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1739,
											"end": 1793,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1739,
											"end": 1793,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1739,
											"end": 1793,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1739,
											"end": 1793,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1739,
											"end": 1793,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1739,
											"end": 1793,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1739,
											"end": 1793,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1739,
											"end": 1793,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1739,
											"end": 1793,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1739,
											"end": 1793,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1739,
											"end": 1793,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 1739,
											"end": 1793,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1739,
											"end": 1793,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1739,
											"end": 1793,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 1739,
											"end": 1793,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1739,
											"end": 1793,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 1739,
											"end": 1793,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1739,
											"end": 1793,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1821,
											"end": 1831,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1808,
											"end": 1841,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1808,
											"end": 1841,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1808,
											"end": 1841,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "C286F3B83E4F244DAFDD6F12A30C1792EB5C99BA0EE6CB1181AAF6EAC30286E8"
										},
										{
											"begin": 1833,
											"end": 1840,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1808,
											"end": 1841,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1808,
											"end": 1841,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1808,
											"end": 1841,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 1808,
											"end": 1841,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1808,
											"end": 1841,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1808,
											"end": 1841,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 1808,
											"end": 1841,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1808,
											"end": 1841,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 1808,
											"end": 1841,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1808,
											"end": 1841,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1808,
											"end": 1841,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1808,
											"end": 1841,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1808,
											"end": 1841,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1808,
											"end": 1841,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1808,
											"end": 1841,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1808,
											"end": 1841,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1848,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1848,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3227,
											"end": 3852,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 3227,
											"end": 3852,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3265,
											"end": 3288,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3291,
											"end": 3297,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3291,
											"end": 3309,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3298,
											"end": 3308,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 3291,
											"end": 3309,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3291,
											"end": 3309,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3291,
											"end": 3309,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3291,
											"end": 3309,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3291,
											"end": 3309,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3291,
											"end": 3309,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3291,
											"end": 3309,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3291,
											"end": 3309,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3291,
											"end": 3309,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3291,
											"end": 3309,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3291,
											"end": 3309,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3291,
											"end": 3309,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3291,
											"end": 3309,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3291,
											"end": 3309,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3291,
											"end": 3309,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3265,
											"end": 3309,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3265,
											"end": 3309,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3343,
											"end": 3344,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3323,
											"end": 3332,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3323,
											"end": 3339,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3323,
											"end": 3339,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3323,
											"end": 3339,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3323,
											"end": 3344,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3319,
											"end": 3392,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 3319,
											"end": 3392,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3381,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3367,
											"end": 3381,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3381,
											"name": "PUSH",
											"source": 2,
											"value": "59BE8F0200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3367,
											"end": 3381,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3381,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3381,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3367,
											"end": 3381,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3381,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3367,
											"end": 3381,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3381,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3381,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3381,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3381,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3381,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3319,
											"end": 3392,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 3319,
											"end": 3392,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3402,
											"end": 3416,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3419,
											"end": 3446,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 3435,
											"end": 3445,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 3419,
											"end": 3434,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 3419,
											"end": 3446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3419,
											"end": 3446,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 3419,
											"end": 3446,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3402,
											"end": 3446,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3402,
											"end": 3446,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3456,
											"end": 3475,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3497,
											"end": 3503,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3478,
											"end": 3487,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3478,
											"end": 3494,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3478,
											"end": 3494,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3478,
											"end": 3494,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3478,
											"end": 3503,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 3478,
											"end": 3503,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3478,
											"end": 3503,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3478,
											"end": 3503,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 3478,
											"end": 3503,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3478,
											"end": 3503,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 3478,
											"end": 3503,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3456,
											"end": 3503,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3456,
											"end": 3503,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3571,
											"end": 3580,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3571,
											"end": 3589,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 3571,
											"end": 3589,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3571,
											"end": 3589,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3549,
											"end": 3558,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3549,
											"end": 3568,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3549,
											"end": 3568,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3549,
											"end": 3568,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3549,
											"end": 3589,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 3549,
											"end": 3589,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3549,
											"end": 3589,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3549,
											"end": 3589,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 3549,
											"end": 3589,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3549,
											"end": 3589,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 3549,
											"end": 3589,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3531,
											"end": 3546,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 3531,
											"end": 3589,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 3531,
											"end": 3615,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3531,
											"end": 3615,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3531,
											"end": 3615,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 3531,
											"end": 3615,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3531,
											"end": 3615,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3614,
											"end": 3615,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3605,
											"end": 3611,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3605,
											"end": 3615,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 3531,
											"end": 3615,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 3531,
											"end": 3615,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3514,
											"end": 3713,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3514,
											"end": 3713,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 3514,
											"end": 3713,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3654,
											"end": 3663,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3654,
											"end": 3670,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3654,
											"end": 3670,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3654,
											"end": 3670,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3640,
											"end": 3670,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3640,
											"end": 3670,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3514,
											"end": 3713,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 3514,
											"end": 3713,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3730,
											"end": 3736,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3730,
											"end": 3748,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3737,
											"end": 3747,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 3730,
											"end": 3748,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3730,
											"end": 3748,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3730,
											"end": 3748,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3730,
											"end": 3748,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3730,
											"end": 3748,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3730,
											"end": 3748,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3730,
											"end": 3748,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3730,
											"end": 3748,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3730,
											"end": 3748,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3730,
											"end": 3748,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3730,
											"end": 3748,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3730,
											"end": 3748,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3730,
											"end": 3748,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3730,
											"end": 3748,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3730,
											"end": 3748,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3730,
											"end": 3748,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3723,
											"end": 3748,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3723,
											"end": 3748,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3723,
											"end": 3748,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3723,
											"end": 3748,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3723,
											"end": 3748,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3723,
											"end": 3748,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 3723,
											"end": 3748,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3723,
											"end": 3748,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3723,
											"end": 3748,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3723,
											"end": 3748,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3723,
											"end": 3748,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3723,
											"end": 3748,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 3723,
											"end": 3748,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 3723,
											"end": 3748,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3723,
											"end": 3748,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3723,
											"end": 3748,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3723,
											"end": 3748,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3723,
											"end": 3748,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 3723,
											"end": 3748,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 3723,
											"end": 3748,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3723,
											"end": 3748,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3723,
											"end": 3748,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3723,
											"end": 3748,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3723,
											"end": 3748,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 3723,
											"end": 3748,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3723,
											"end": 3748,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3723,
											"end": 3748,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3723,
											"end": 3748,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 3723,
											"end": 3748,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 3723,
											"end": 3748,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 3723,
											"end": 3748,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3723,
											"end": 3748,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3723,
											"end": 3748,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 3723,
											"end": 3748,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3723,
											"end": 3748,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3758,
											"end": 3763,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 3758,
											"end": 3772,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3758,
											"end": 3772,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3758,
											"end": 3772,
											"name": "PUSH",
											"source": 2,
											"value": "A9059CBB"
										},
										{
											"begin": 3773,
											"end": 3783,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 3785,
											"end": 3796,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3758,
											"end": 3797,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3758,
											"end": 3797,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3758,
											"end": 3797,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3758,
											"end": 3797,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3758,
											"end": 3797,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3758,
											"end": 3797,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 3758,
											"end": 3797,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 3758,
											"end": 3797,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3758,
											"end": 3797,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3758,
											"end": 3797,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3758,
											"end": 3797,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3758,
											"end": 3797,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 3758,
											"end": 3797,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3758,
											"end": 3797,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3758,
											"end": 3797,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3758,
											"end": 3797,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 3758,
											"end": 3797,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3758,
											"end": 3797,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 3758,
											"end": 3797,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3758,
											"end": 3797,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3758,
											"end": 3797,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3758,
											"end": 3797,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3758,
											"end": 3797,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3758,
											"end": 3797,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3758,
											"end": 3797,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3758,
											"end": 3797,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3758,
											"end": 3797,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3758,
											"end": 3797,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 3758,
											"end": 3797,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 3758,
											"end": 3797,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 3758,
											"end": 3797,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3758,
											"end": 3797,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3758,
											"end": 3797,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3758,
											"end": 3797,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 3758,
											"end": 3797,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3758,
											"end": 3797,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 3758,
											"end": 3797,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3758,
											"end": 3797,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3758,
											"end": 3797,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 3758,
											"end": 3797,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 3758,
											"end": 3797,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3758,
											"end": 3797,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3758,
											"end": 3797,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 3758,
											"end": 3797,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3758,
											"end": 3797,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3758,
											"end": 3797,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3758,
											"end": 3797,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3758,
											"end": 3797,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3758,
											"end": 3797,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3758,
											"end": 3797,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3758,
											"end": 3797,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 3758,
											"end": 3797,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 3758,
											"end": 3797,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 3758,
											"end": 3797,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 3758,
											"end": 3797,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3758,
											"end": 3797,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3758,
											"end": 3797,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3758,
											"end": 3797,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3758,
											"end": 3797,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3758,
											"end": 3797,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3758,
											"end": 3797,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3758,
											"end": 3797,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3758,
											"end": 3797,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3758,
											"end": 3797,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3758,
											"end": 3797,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3758,
											"end": 3797,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3758,
											"end": 3797,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 3758,
											"end": 3797,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3758,
											"end": 3797,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3758,
											"end": 3797,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 3758,
											"end": 3797,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3758,
											"end": 3797,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 3758,
											"end": 3797,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3758,
											"end": 3797,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3821,
											"end": 3831,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 3812,
											"end": 3845,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3812,
											"end": 3845,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3812,
											"end": 3845,
											"name": "PUSH",
											"source": 2,
											"value": "F5BB82176FEB1B5E747E28471AA92156A04D9F3AB9F45F28E2D704232B93F75"
										},
										{
											"begin": 3833,
											"end": 3844,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3812,
											"end": 3845,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3812,
											"end": 3845,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3812,
											"end": 3845,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 3812,
											"end": 3845,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3812,
											"end": 3845,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3812,
											"end": 3845,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 3812,
											"end": 3845,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3812,
											"end": 3845,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 3812,
											"end": 3845,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3812,
											"end": 3845,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3812,
											"end": 3845,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3812,
											"end": 3845,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3812,
											"end": 3845,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3812,
											"end": 3845,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3812,
											"end": 3845,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3812,
											"end": 3845,
											"name": "LOG2",
											"source": 2
										},
										{
											"begin": 3255,
											"end": 3852,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3255,
											"end": 3852,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3255,
											"end": 3852,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3227,
											"end": 3852,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 828,
											"end": 1525,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 828,
											"end": 1525,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 913,
											"end": 920,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 922,
											"end": 929,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 945,
											"end": 961,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 971,
											"end": 988,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1014,
											"end": 1015,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1002,
											"end": 1011,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1002,
											"end": 1015,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1002,
											"end": 1032,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1002,
											"end": 1032,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 1002,
											"end": 1032,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1002,
											"end": 1032,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1031,
											"end": 1032,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1019,
											"end": 1028,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1019,
											"end": 1032,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1002,
											"end": 1032,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 1002,
											"end": 1032,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 998,
											"end": 1083,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 998,
											"end": 1083,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 998,
											"end": 1083,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1055,
											"end": 1072,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1055,
											"end": 1072,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1055,
											"end": 1072,
											"name": "PUSH",
											"source": 2,
											"value": "7616640100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1055,
											"end": 1072,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1055,
											"end": 1072,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1055,
											"end": 1072,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1055,
											"end": 1072,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1055,
											"end": 1072,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1055,
											"end": 1072,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1055,
											"end": 1072,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1055,
											"end": 1072,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1055,
											"end": 1072,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1055,
											"end": 1072,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1055,
											"end": 1072,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 998,
											"end": 1083,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 998,
											"end": 1083,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1093,
											"end": 1098,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 1093,
											"end": 1111,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1093,
											"end": 1111,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1093,
											"end": 1111,
											"name": "PUSH",
											"source": 2,
											"value": "23B872DD"
										},
										{
											"begin": 1112,
											"end": 1122,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1132,
											"end": 1136,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 1139,
											"end": 1146,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 1093,
											"end": 1147,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1093,
											"end": 1147,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1093,
											"end": 1147,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1093,
											"end": 1147,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1093,
											"end": 1147,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1093,
											"end": 1147,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1093,
											"end": 1147,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1093,
											"end": 1147,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1093,
											"end": 1147,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1093,
											"end": 1147,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1093,
											"end": 1147,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1093,
											"end": 1147,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 1093,
											"end": 1147,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1093,
											"end": 1147,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1093,
											"end": 1147,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1093,
											"end": 1147,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1093,
											"end": 1147,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 1093,
											"end": 1147,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1093,
											"end": 1147,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 1093,
											"end": 1147,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1093,
											"end": 1147,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1093,
											"end": 1147,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1093,
											"end": 1147,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1093,
											"end": 1147,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1093,
											"end": 1147,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1093,
											"end": 1147,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1093,
											"end": 1147,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1093,
											"end": 1147,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1093,
											"end": 1147,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 1093,
											"end": 1147,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 1093,
											"end": 1147,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 1093,
											"end": 1147,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1093,
											"end": 1147,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1093,
											"end": 1147,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1093,
											"end": 1147,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 1093,
											"end": 1147,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1093,
											"end": 1147,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1093,
											"end": 1147,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1093,
											"end": 1147,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1093,
											"end": 1147,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1093,
											"end": 1147,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1093,
											"end": 1147,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1093,
											"end": 1147,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1093,
											"end": 1147,
											"name": "tag",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 1093,
											"end": 1147,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1093,
											"end": 1147,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1093,
											"end": 1147,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1093,
											"end": 1147,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1093,
											"end": 1147,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1093,
											"end": 1147,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1093,
											"end": 1147,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1093,
											"end": 1147,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1093,
											"end": 1147,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1093,
											"end": 1147,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1093,
											"end": 1147,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1093,
											"end": 1147,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1093,
											"end": 1147,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1093,
											"end": 1147,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1093,
											"end": 1147,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1093,
											"end": 1147,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1093,
											"end": 1147,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1093,
											"end": 1147,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1093,
											"end": 1147,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1093,
											"end": 1147,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1093,
											"end": 1147,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1093,
											"end": 1147,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1093,
											"end": 1147,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1093,
											"end": 1147,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 1093,
											"end": 1147,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1093,
											"end": 1147,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1093,
											"end": 1147,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 1093,
											"end": 1147,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1093,
											"end": 1147,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 1093,
											"end": 1147,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1093,
											"end": 1147,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1179,
											"end": 1365,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1179,
											"end": 1365,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1179,
											"end": 1365,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1179,
											"end": 1365,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 1179,
											"end": 1365,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1179,
											"end": 1365,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1179,
											"end": 1365,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1179,
											"end": 1365,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1207,
											"end": 1214,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 1179,
											"end": 1365,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1179,
											"end": 1365,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1179,
											"end": 1365,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1179,
											"end": 1365,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1239,
											"end": 1254,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 1179,
											"end": 1365,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1179,
											"end": 1365,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1179,
											"end": 1365,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1179,
											"end": 1365,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1290,
											"end": 1298,
											"name": "PUSH",
											"source": 2,
											"value": "1E13380"
										},
										{
											"begin": 1278,
											"end": 1287,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 1278,
											"end": 1298,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 1278,
											"end": 1298,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1278,
											"end": 1298,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1278,
											"end": 1298,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 1278,
											"end": 1298,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1278,
											"end": 1298,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 1278,
											"end": 1298,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1179,
											"end": 1365,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1179,
											"end": 1365,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1179,
											"end": 1365,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1179,
											"end": 1365,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1349,
											"end": 1354,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1179,
											"end": 1365,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1179,
											"end": 1365,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1179,
											"end": 1365,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1179,
											"end": 1365,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1179,
											"end": 1365,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1158,
											"end": 1164,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1158,
											"end": 1176,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1165,
											"end": 1175,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1158,
											"end": 1176,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1158,
											"end": 1176,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1158,
											"end": 1176,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1158,
											"end": 1176,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1158,
											"end": 1176,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1158,
											"end": 1176,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1158,
											"end": 1176,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1158,
											"end": 1176,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1158,
											"end": 1176,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1158,
											"end": 1176,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1158,
											"end": 1176,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1158,
											"end": 1176,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1158,
											"end": 1176,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1158,
											"end": 1176,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1158,
											"end": 1176,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1158,
											"end": 1365,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1158,
											"end": 1365,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1158,
											"end": 1365,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1158,
											"end": 1365,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1158,
											"end": 1365,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1158,
											"end": 1365,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1158,
											"end": 1365,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1158,
											"end": 1365,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1158,
											"end": 1365,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1158,
											"end": 1365,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1158,
											"end": 1365,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1158,
											"end": 1365,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1158,
											"end": 1365,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1158,
											"end": 1365,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1158,
											"end": 1365,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1158,
											"end": 1365,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1158,
											"end": 1365,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1158,
											"end": 1365,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1158,
											"end": 1365,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1158,
											"end": 1365,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1158,
											"end": 1365,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1158,
											"end": 1365,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1158,
											"end": 1365,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1158,
											"end": 1365,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1158,
											"end": 1365,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1158,
											"end": 1365,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1158,
											"end": 1365,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1158,
											"end": 1365,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1158,
											"end": 1365,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1158,
											"end": 1365,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1158,
											"end": 1365,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1158,
											"end": 1365,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1158,
											"end": 1365,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1158,
											"end": 1365,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1158,
											"end": 1365,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1158,
											"end": 1365,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1158,
											"end": 1365,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1158,
											"end": 1365,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1158,
											"end": 1365,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1158,
											"end": 1365,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1158,
											"end": 1365,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1158,
											"end": 1365,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1158,
											"end": 1365,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1158,
											"end": 1365,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1158,
											"end": 1365,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1158,
											"end": 1365,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1158,
											"end": 1365,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 1158,
											"end": 1365,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1158,
											"end": 1365,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1158,
											"end": 1365,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1158,
											"end": 1365,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1158,
											"end": 1365,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1158,
											"end": 1365,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1388,
											"end": 1398,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1381,
											"end": 1419,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1381,
											"end": 1419,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1381,
											"end": 1419,
											"name": "PUSH",
											"source": 2,
											"value": "1449C6DD7851ABC30ABF37F57715F492010519147CC2652FBC38202C18A6EE90"
										},
										{
											"begin": 1400,
											"end": 1407,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 1409,
											"end": 1418,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 1381,
											"end": 1419,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1381,
											"end": 1419,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1381,
											"end": 1419,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 1381,
											"end": 1419,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1381,
											"end": 1419,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1381,
											"end": 1419,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1381,
											"end": 1419,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 1381,
											"end": 1419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1381,
											"end": 1419,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 1381,
											"end": 1419,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1381,
											"end": 1419,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1381,
											"end": 1419,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1381,
											"end": 1419,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1381,
											"end": 1419,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1381,
											"end": 1419,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1381,
											"end": 1419,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1381,
											"end": 1419,
											"name": "LOG2",
											"source": 2
										},
										{
											"begin": 1441,
											"end": 1448,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1430,
											"end": 1448,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1430,
											"end": 1448,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1470,
											"end": 1480,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1458,
											"end": 1480,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1458,
											"end": 1480,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1498,
											"end": 1506,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1508,
											"end": 1517,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1490,
											"end": 1518,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1490,
											"end": 1518,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1490,
											"end": 1518,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1490,
											"end": 1518,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1490,
											"end": 1518,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1490,
											"end": 1518,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 828,
											"end": 1525,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 828,
											"end": 1525,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 828,
											"end": 1525,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 828,
											"end": 1525,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 828,
											"end": 1525,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 828,
											"end": 1525,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 216,
											"end": 236,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 216,
											"end": 236,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 216,
											"end": 236,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 216,
											"end": 236,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 216,
											"end": 236,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 216,
											"end": 236,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 216,
											"end": 236,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 216,
											"end": 236,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 216,
											"end": 236,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 216,
											"end": 236,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 216,
											"end": 236,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 216,
											"end": 236,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 216,
											"end": 236,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 216,
											"end": 236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4153,
											"end": 4366,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 4153,
											"end": 4366,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4241,
											"end": 4248,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4250,
											"end": 4257,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4273,
											"end": 4291,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4294,
											"end": 4300,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4294,
											"end": 4314,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4301,
											"end": 4313,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4294,
											"end": 4314,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4294,
											"end": 4314,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4294,
											"end": 4314,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4294,
											"end": 4314,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4294,
											"end": 4314,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4294,
											"end": 4314,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4294,
											"end": 4314,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4294,
											"end": 4314,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4294,
											"end": 4314,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4294,
											"end": 4314,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4294,
											"end": 4314,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4294,
											"end": 4314,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4294,
											"end": 4314,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4294,
											"end": 4314,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4294,
											"end": 4314,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4273,
											"end": 4314,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4273,
											"end": 4314,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4273,
											"end": 4314,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4273,
											"end": 4314,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 4273,
											"end": 4314,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4273,
											"end": 4314,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4273,
											"end": 4314,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4273,
											"end": 4314,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4273,
											"end": 4314,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4273,
											"end": 4314,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4273,
											"end": 4314,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4273,
											"end": 4314,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4273,
											"end": 4314,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4273,
											"end": 4314,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4273,
											"end": 4314,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4273,
											"end": 4314,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4273,
											"end": 4314,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4273,
											"end": 4314,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4273,
											"end": 4314,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4273,
											"end": 4314,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4273,
											"end": 4314,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4273,
											"end": 4314,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4273,
											"end": 4314,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4273,
											"end": 4314,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4273,
											"end": 4314,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4273,
											"end": 4314,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 4273,
											"end": 4314,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4273,
											"end": 4314,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4273,
											"end": 4314,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4273,
											"end": 4314,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4273,
											"end": 4314,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4273,
											"end": 4314,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4273,
											"end": 4314,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4273,
											"end": 4314,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 4273,
											"end": 4314,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4273,
											"end": 4314,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4273,
											"end": 4314,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4273,
											"end": 4314,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4273,
											"end": 4314,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4273,
											"end": 4314,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4273,
											"end": 4314,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 4273,
											"end": 4314,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 4273,
											"end": 4314,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4273,
											"end": 4314,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 4273,
											"end": 4314,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 4273,
											"end": 4314,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4273,
											"end": 4314,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4273,
											"end": 4314,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4273,
											"end": 4314,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4273,
											"end": 4314,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4273,
											"end": 4314,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4273,
											"end": 4314,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4273,
											"end": 4314,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4273,
											"end": 4314,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4273,
											"end": 4314,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4273,
											"end": 4314,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4332,
											"end": 4337,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4332,
											"end": 4344,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4332,
											"end": 4344,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4332,
											"end": 4344,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4346,
											"end": 4358,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4324,
											"end": 4359,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4324,
											"end": 4359,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4324,
											"end": 4359,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4324,
											"end": 4359,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4324,
											"end": 4359,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4153,
											"end": 4366,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4153,
											"end": 4366,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4153,
											"end": 4366,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4153,
											"end": 4366,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2510,
											"end": 2983,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 2510,
											"end": 2983,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2551,
											"end": 2558,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2570,
											"end": 2593,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2596,
											"end": 2602,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2596,
											"end": 2614,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2603,
											"end": 2613,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2596,
											"end": 2614,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2596,
											"end": 2614,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2596,
											"end": 2614,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2596,
											"end": 2614,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2596,
											"end": 2614,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2596,
											"end": 2614,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2596,
											"end": 2614,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2596,
											"end": 2614,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2596,
											"end": 2614,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2596,
											"end": 2614,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2596,
											"end": 2614,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2596,
											"end": 2614,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2596,
											"end": 2614,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2596,
											"end": 2614,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2596,
											"end": 2614,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2570,
											"end": 2614,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2570,
											"end": 2614,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2648,
											"end": 2649,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2628,
											"end": 2637,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2628,
											"end": 2644,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2628,
											"end": 2644,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2628,
											"end": 2644,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2628,
											"end": 2649,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2624,
											"end": 2697,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 2624,
											"end": 2697,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2672,
											"end": 2686,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2686,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2672,
											"end": 2686,
											"name": "PUSH",
											"source": 2,
											"value": "59BE8F0200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2686,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2672,
											"end": 2686,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2672,
											"end": 2686,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2686,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2672,
											"end": 2686,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2686,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2672,
											"end": 2686,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2672,
											"end": 2686,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2672,
											"end": 2686,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2672,
											"end": 2686,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2672,
											"end": 2686,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2624,
											"end": 2697,
											"name": "tag",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 2624,
											"end": 2697,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2721,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2724,
											"end": 2751,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 2740,
											"end": 2750,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2724,
											"end": 2739,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 2724,
											"end": 2751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2724,
											"end": 2751,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 2724,
											"end": 2751,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2751,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2751,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2775,
											"end": 2776,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2765,
											"end": 2771,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2765,
											"end": 2776,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2826,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 2761,
											"end": 2826,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2799,
											"end": 2815,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2799,
											"end": 2815,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2799,
											"end": 2815,
											"name": "PUSH",
											"source": 2,
											"value": "A5A3111C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2799,
											"end": 2815,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2799,
											"end": 2815,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2799,
											"end": 2815,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2799,
											"end": 2815,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2799,
											"end": 2815,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2799,
											"end": 2815,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2799,
											"end": 2815,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2799,
											"end": 2815,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2799,
											"end": 2815,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2799,
											"end": 2815,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2799,
											"end": 2815,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2826,
											"name": "tag",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 2761,
											"end": 2826,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2856,
											"end": 2860,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2836,
											"end": 2845,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2836,
											"end": 2853,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2836,
											"end": 2853,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2836,
											"end": 2853,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2836,
											"end": 2860,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2836,
											"end": 2860,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2836,
											"end": 2860,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2836,
											"end": 2860,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2836,
											"end": 2860,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2836,
											"end": 2860,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 2836,
											"end": 2860,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2836,
											"end": 2860,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2836,
											"end": 2860,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2836,
											"end": 2860,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2836,
											"end": 2860,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2836,
											"end": 2860,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2836,
											"end": 2860,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2836,
											"end": 2860,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2836,
											"end": 2860,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 2836,
											"end": 2860,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2836,
											"end": 2860,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2836,
											"end": 2860,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2870,
											"end": 2875,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 2870,
											"end": 2884,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2870,
											"end": 2884,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2870,
											"end": 2884,
											"name": "PUSH",
											"source": 2,
											"value": "A9059CBB"
										},
										{
											"begin": 2885,
											"end": 2895,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2897,
											"end": 2903,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2870,
											"end": 2904,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2870,
											"end": 2904,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2870,
											"end": 2904,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2870,
											"end": 2904,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2870,
											"end": 2904,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2870,
											"end": 2904,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 2870,
											"end": 2904,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 2870,
											"end": 2904,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2870,
											"end": 2904,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2870,
											"end": 2904,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2870,
											"end": 2904,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2870,
											"end": 2904,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 2870,
											"end": 2904,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2870,
											"end": 2904,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2870,
											"end": 2904,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2870,
											"end": 2904,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 2870,
											"end": 2904,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2870,
											"end": 2904,
											"name": "tag",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 2870,
											"end": 2904,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2870,
											"end": 2904,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2870,
											"end": 2904,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2870,
											"end": 2904,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2870,
											"end": 2904,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2870,
											"end": 2904,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2870,
											"end": 2904,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2870,
											"end": 2904,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2870,
											"end": 2904,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2870,
											"end": 2904,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 2870,
											"end": 2904,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 2870,
											"end": 2904,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 2870,
											"end": 2904,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2870,
											"end": 2904,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2870,
											"end": 2904,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2870,
											"end": 2904,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 2870,
											"end": 2904,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2870,
											"end": 2904,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2870,
											"end": 2904,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2870,
											"end": 2904,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2870,
											"end": 2904,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 2870,
											"end": 2904,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2870,
											"end": 2904,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2870,
											"end": 2904,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2870,
											"end": 2904,
											"name": "tag",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 2870,
											"end": 2904,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2870,
											"end": 2904,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2870,
											"end": 2904,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2870,
											"end": 2904,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2870,
											"end": 2904,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2870,
											"end": 2904,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2870,
											"end": 2904,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2870,
											"end": 2904,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2870,
											"end": 2904,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2870,
											"end": 2904,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2870,
											"end": 2904,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2870,
											"end": 2904,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2870,
											"end": 2904,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2870,
											"end": 2904,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2870,
											"end": 2904,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2870,
											"end": 2904,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2870,
											"end": 2904,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2870,
											"end": 2904,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2870,
											"end": 2904,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2870,
											"end": 2904,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2870,
											"end": 2904,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2870,
											"end": 2904,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2870,
											"end": 2904,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2870,
											"end": 2904,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 2870,
											"end": 2904,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2870,
											"end": 2904,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2870,
											"end": 2904,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 2870,
											"end": 2904,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2870,
											"end": 2904,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 2870,
											"end": 2904,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2870,
											"end": 2904,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2934,
											"end": 2944,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2919,
											"end": 2953,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2919,
											"end": 2953,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2919,
											"end": 2953,
											"name": "PUSH",
											"source": 2,
											"value": "FC30CDDEA38E2BF4D6EA7D3F9ED3B6AD7F176419F4963BD81318067A4AEE73FE"
										},
										{
											"begin": 2946,
											"end": 2952,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2919,
											"end": 2953,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2919,
											"end": 2953,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2919,
											"end": 2953,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 2919,
											"end": 2953,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2919,
											"end": 2953,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2919,
											"end": 2953,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 2919,
											"end": 2953,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2919,
											"end": 2953,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 2919,
											"end": 2953,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2919,
											"end": 2953,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2919,
											"end": 2953,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2919,
											"end": 2953,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2919,
											"end": 2953,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2919,
											"end": 2953,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2919,
											"end": 2953,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2919,
											"end": 2953,
											"name": "LOG2",
											"source": 2
										},
										{
											"begin": 2970,
											"end": 2976,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2963,
											"end": 2976,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2963,
											"end": 2976,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2963,
											"end": 2976,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2963,
											"end": 2976,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2510,
											"end": 2983,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2510,
											"end": 2983,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 145,
											"end": 174,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 145,
											"end": 174,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 145,
											"end": 174,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 145,
											"end": 174,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 145,
											"end": 174,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2019,
											"end": 2432,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 2019,
											"end": 2432,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2082,
											"end": 2089,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2101,
											"end": 2123,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2126,
											"end": 2132,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2126,
											"end": 2139,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2133,
											"end": 2138,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2126,
											"end": 2139,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2126,
											"end": 2139,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2126,
											"end": 2139,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2126,
											"end": 2139,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2126,
											"end": 2139,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2126,
											"end": 2139,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2126,
											"end": 2139,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2126,
											"end": 2139,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2126,
											"end": 2139,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2126,
											"end": 2139,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2126,
											"end": 2139,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2126,
											"end": 2139,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2126,
											"end": 2139,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2126,
											"end": 2139,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2126,
											"end": 2139,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2101,
											"end": 2139,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2101,
											"end": 2139,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2101,
											"end": 2139,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2101,
											"end": 2139,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 2101,
											"end": 2139,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2101,
											"end": 2139,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2101,
											"end": 2139,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2101,
											"end": 2139,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2101,
											"end": 2139,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2101,
											"end": 2139,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2101,
											"end": 2139,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2101,
											"end": 2139,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2101,
											"end": 2139,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2101,
											"end": 2139,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2101,
											"end": 2139,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2101,
											"end": 2139,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2101,
											"end": 2139,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2101,
											"end": 2139,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2101,
											"end": 2139,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2101,
											"end": 2139,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2101,
											"end": 2139,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2101,
											"end": 2139,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2101,
											"end": 2139,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2101,
											"end": 2139,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2101,
											"end": 2139,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2101,
											"end": 2139,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2101,
											"end": 2139,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2101,
											"end": 2139,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2101,
											"end": 2139,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2101,
											"end": 2139,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2101,
											"end": 2139,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2101,
											"end": 2139,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2101,
											"end": 2139,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2101,
											"end": 2139,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2101,
											"end": 2139,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2101,
											"end": 2139,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2101,
											"end": 2139,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2101,
											"end": 2139,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2101,
											"end": 2139,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2101,
											"end": 2139,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2101,
											"end": 2139,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2101,
											"end": 2139,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2101,
											"end": 2139,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2101,
											"end": 2139,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2101,
											"end": 2139,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 2101,
											"end": 2139,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2101,
											"end": 2139,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2101,
											"end": 2139,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2101,
											"end": 2139,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2101,
											"end": 2139,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2101,
											"end": 2139,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2101,
											"end": 2139,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2101,
											"end": 2139,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2101,
											"end": 2139,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2101,
											"end": 2139,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2101,
											"end": 2139,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2193,
											"end": 2202,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2193,
											"end": 2211,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2193,
											"end": 2211,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2193,
											"end": 2211,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2171,
											"end": 2180,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2171,
											"end": 2190,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2171,
											"end": 2190,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2171,
											"end": 2190,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2171,
											"end": 2211,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 2171,
											"end": 2211,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2171,
											"end": 2211,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2171,
											"end": 2211,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 2171,
											"end": 2211,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2171,
											"end": 2211,
											"name": "tag",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 2171,
											"end": 2211,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2168,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2211,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2149,
											"end": 2276,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2149,
											"end": 2276,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 2149,
											"end": 2276,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2234,
											"end": 2235,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2227,
											"end": 2235,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2227,
											"end": 2235,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2227,
											"end": 2235,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2227,
											"end": 2235,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 2227,
											"end": 2235,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2149,
											"end": 2276,
											"name": "tag",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 2149,
											"end": 2276,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2286,
											"end": 2310,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2347,
											"end": 2349,
											"name": "PUSH",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 2335,
											"end": 2343,
											"name": "PUSH",
											"source": 2,
											"value": "1E13380"
										},
										{
											"begin": 2314,
											"end": 2323,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2314,
											"end": 2332,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2314,
											"end": 2332,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2314,
											"end": 2332,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2314,
											"end": 2343,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 2314,
											"end": 2343,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2314,
											"end": 2343,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2314,
											"end": 2343,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 2314,
											"end": 2343,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2314,
											"end": 2343,
											"name": "tag",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 2314,
											"end": 2343,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2313,
											"end": 2349,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 2313,
											"end": 2349,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2313,
											"end": 2349,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2313,
											"end": 2349,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 2313,
											"end": 2349,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2313,
											"end": 2349,
											"name": "tag",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 2313,
											"end": 2349,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2286,
											"end": 2349,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2286,
											"end": 2349,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2422,
											"end": 2425,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2402,
											"end": 2418,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2383,
											"end": 2392,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2383,
											"end": 2399,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2383,
											"end": 2399,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2383,
											"end": 2399,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2383,
											"end": 2418,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 2383,
											"end": 2418,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2383,
											"end": 2418,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2383,
											"end": 2418,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 2383,
											"end": 2418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2383,
											"end": 2418,
											"name": "tag",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 2383,
											"end": 2418,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2382,
											"end": 2425,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 2382,
											"end": 2425,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2382,
											"end": 2425,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2382,
											"end": 2425,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 2382,
											"end": 2425,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2382,
											"end": 2425,
											"name": "tag",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 2382,
											"end": 2425,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2375,
											"end": 2425,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2375,
											"end": 2425,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2375,
											"end": 2425,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2375,
											"end": 2425,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2019,
											"end": 2432,
											"name": "tag",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 2019,
											"end": 2432,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2019,
											"end": 2432,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2019,
											"end": 2432,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2019,
											"end": 2432,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2019,
											"end": 2432,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 334,
											"end": 411,
											"name": "tag",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 400,
											"end": 405,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 389,
											"end": 405,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 389,
											"end": 405,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 334,
											"end": 411,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 334,
											"end": 411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 417,
											"end": 539,
											"name": "tag",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 490,
											"end": 514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 490,
											"end": 514,
											"name": "tag",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 483,
											"end": 488,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 480,
											"end": 515,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 470,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 529,
											"end": 530,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 527,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 519,
											"end": 531,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 470,
											"end": 533,
											"name": "tag",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 417,
											"end": 539,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 417,
											"end": 539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 545,
											"end": 684,
											"name": "tag",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 591,
											"end": 596,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 635,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 616,
											"end": 636,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 607,
											"end": 636,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 607,
											"end": 636,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 672,
											"end": 677,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 645,
											"end": 678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 645,
											"end": 678,
											"name": "tag",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 545,
											"end": 684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "tag",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 749,
											"end": 755,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 798,
											"end": 800,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 786,
											"end": 795,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 777,
											"end": 784,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 773,
											"end": 796,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 769,
											"end": 801,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 766,
											"end": 885,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 766,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 804,
											"end": 883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 804,
											"end": 883,
											"name": "tag",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 766,
											"end": 885,
											"name": "tag",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 924,
											"end": 925,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 994,
											"end": 1001,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 985,
											"end": 991,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 974,
											"end": 983,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 970,
											"end": 992,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 949,
											"end": 1002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "tag",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 895,
											"end": 1012,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 690,
											"end": 1019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1025,
											"end": 1499,
											"name": "tag",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 1025,
											"end": 1499,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1093,
											"end": 1099,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1101,
											"end": 1107,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1150,
											"end": 1152,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1138,
											"end": 1147,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1129,
											"end": 1136,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1148,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1121,
											"end": 1153,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 1118,
											"end": 1237,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1118,
											"end": 1237,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 1118,
											"end": 1237,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1156,
											"end": 1235,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 1156,
											"end": 1235,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 1156,
											"end": 1235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1156,
											"end": 1235,
											"name": "tag",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 1156,
											"end": 1235,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1118,
											"end": 1237,
											"name": "tag",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 1118,
											"end": 1237,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1276,
											"end": 1277,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1301,
											"end": 1354,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 1346,
											"end": 1353,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1337,
											"end": 1343,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1326,
											"end": 1335,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1322,
											"end": 1344,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1301,
											"end": 1354,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 1301,
											"end": 1354,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1301,
											"end": 1354,
											"name": "tag",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 1301,
											"end": 1354,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1291,
											"end": 1354,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1291,
											"end": 1354,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1247,
											"end": 1364,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1403,
											"end": 1405,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1429,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 1474,
											"end": 1481,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1465,
											"end": 1471,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1454,
											"end": 1463,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1450,
											"end": 1472,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1429,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 1429,
											"end": 1482,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1429,
											"end": 1482,
											"name": "tag",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 1429,
											"end": 1482,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1419,
											"end": 1482,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1419,
											"end": 1482,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1374,
											"end": 1492,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1025,
											"end": 1499,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1025,
											"end": 1499,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1025,
											"end": 1499,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1025,
											"end": 1499,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1025,
											"end": 1499,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1025,
											"end": 1499,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1505,
											"end": 1623,
											"name": "tag",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 1505,
											"end": 1623,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1592,
											"end": 1616,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 1610,
											"end": 1615,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1592,
											"end": 1616,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 1592,
											"end": 1616,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1592,
											"end": 1616,
											"name": "tag",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 1592,
											"end": 1616,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1587,
											"end": 1590,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1580,
											"end": 1617,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1505,
											"end": 1623,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1505,
											"end": 1623,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1505,
											"end": 1623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1629,
											"end": 1755,
											"name": "tag",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 1629,
											"end": 1755,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1666,
											"end": 1673,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1706,
											"end": 1748,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1699,
											"end": 1704,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1695,
											"end": 1749,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1684,
											"end": 1749,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1684,
											"end": 1749,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1629,
											"end": 1755,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1629,
											"end": 1755,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1629,
											"end": 1755,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1629,
											"end": 1755,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1761,
											"end": 1857,
											"name": "tag",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 1761,
											"end": 1857,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1798,
											"end": 1805,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1827,
											"end": 1851,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 1845,
											"end": 1850,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1827,
											"end": 1851,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 1827,
											"end": 1851,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1827,
											"end": 1851,
											"name": "tag",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 1827,
											"end": 1851,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1816,
											"end": 1851,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1816,
											"end": 1851,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1761,
											"end": 1857,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1761,
											"end": 1857,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1761,
											"end": 1857,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1761,
											"end": 1857,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1863,
											"end": 1981,
											"name": "tag",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 1863,
											"end": 1981,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1950,
											"end": 1974,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 1968,
											"end": 1973,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1950,
											"end": 1974,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 1950,
											"end": 1974,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1950,
											"end": 1974,
											"name": "tag",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 1950,
											"end": 1974,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1945,
											"end": 1948,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1938,
											"end": 1975,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1863,
											"end": 1981,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1863,
											"end": 1981,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1863,
											"end": 1981,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1987,
											"end": 2319,
											"name": "tag",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 1987,
											"end": 2319,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2108,
											"end": 2112,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2146,
											"end": 2148,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2135,
											"end": 2144,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2131,
											"end": 2149,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2123,
											"end": 2149,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2123,
											"end": 2149,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2159,
											"end": 2230,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 2227,
											"end": 2228,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2216,
											"end": 2225,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2212,
											"end": 2229,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2203,
											"end": 2209,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2159,
											"end": 2230,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 2159,
											"end": 2230,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2159,
											"end": 2230,
											"name": "tag",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 2159,
											"end": 2230,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2240,
											"end": 2312,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 2308,
											"end": 2310,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2297,
											"end": 2306,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2293,
											"end": 2311,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2284,
											"end": 2290,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2240,
											"end": 2312,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 2240,
											"end": 2312,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2240,
											"end": 2312,
											"name": "tag",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 2240,
											"end": 2312,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1987,
											"end": 2319,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 1987,
											"end": 2319,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1987,
											"end": 2319,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1987,
											"end": 2319,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1987,
											"end": 2319,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1987,
											"end": 2319,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2325,
											"end": 2547,
											"name": "tag",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 2325,
											"end": 2547,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2418,
											"end": 2422,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2456,
											"end": 2458,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2445,
											"end": 2454,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2441,
											"end": 2459,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2433,
											"end": 2459,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2433,
											"end": 2459,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2469,
											"end": 2540,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 2537,
											"end": 2538,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2526,
											"end": 2535,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2522,
											"end": 2539,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2513,
											"end": 2519,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2469,
											"end": 2540,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 2469,
											"end": 2540,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2469,
											"end": 2540,
											"name": "tag",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 2469,
											"end": 2540,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2325,
											"end": 2547,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2325,
											"end": 2547,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2325,
											"end": 2547,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2325,
											"end": 2547,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2325,
											"end": 2547,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2553,
											"end": 2675,
											"name": "tag",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 2553,
											"end": 2675,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2626,
											"end": 2650,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 2644,
											"end": 2649,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2626,
											"end": 2650,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 2626,
											"end": 2650,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2626,
											"end": 2650,
											"name": "tag",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 2626,
											"end": 2650,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2619,
											"end": 2624,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2616,
											"end": 2651,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2606,
											"end": 2669,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 2606,
											"end": 2669,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2665,
											"end": 2666,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2662,
											"end": 2663,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2655,
											"end": 2667,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2606,
											"end": 2669,
											"name": "tag",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 2606,
											"end": 2669,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2553,
											"end": 2675,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2553,
											"end": 2675,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2681,
											"end": 2820,
											"name": "tag",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 2681,
											"end": 2820,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2727,
											"end": 2732,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2765,
											"end": 2771,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2752,
											"end": 2772,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 2743,
											"end": 2772,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2743,
											"end": 2772,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2781,
											"end": 2814,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 2808,
											"end": 2813,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2781,
											"end": 2814,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 2781,
											"end": 2814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2781,
											"end": 2814,
											"name": "tag",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 2781,
											"end": 2814,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2681,
											"end": 2820,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2681,
											"end": 2820,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2681,
											"end": 2820,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2681,
											"end": 2820,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2681,
											"end": 2820,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2826,
											"end": 3155,
											"name": "tag",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 2826,
											"end": 3155,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2885,
											"end": 2891,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2934,
											"end": 2936,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2922,
											"end": 2931,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2913,
											"end": 2920,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2909,
											"end": 2932,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2905,
											"end": 2937,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 2902,
											"end": 3021,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2902,
											"end": 3021,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 2902,
											"end": 3021,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2940,
											"end": 3019,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 2940,
											"end": 3019,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 2940,
											"end": 3019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2940,
											"end": 3019,
											"name": "tag",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 2940,
											"end": 3019,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2902,
											"end": 3021,
											"name": "tag",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 2902,
											"end": 3021,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3060,
											"end": 3061,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3085,
											"end": 3138,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 3130,
											"end": 3137,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3121,
											"end": 3127,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3110,
											"end": 3119,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3106,
											"end": 3128,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3085,
											"end": 3138,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 3085,
											"end": 3138,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3085,
											"end": 3138,
											"name": "tag",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 3085,
											"end": 3138,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3075,
											"end": 3138,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3075,
											"end": 3138,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3031,
											"end": 3148,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2826,
											"end": 3155,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2826,
											"end": 3155,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2826,
											"end": 3155,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2826,
											"end": 3155,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2826,
											"end": 3155,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3161,
											"end": 3383,
											"name": "tag",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 3161,
											"end": 3383,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3254,
											"end": 3258,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3292,
											"end": 3294,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3281,
											"end": 3290,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3277,
											"end": 3295,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3269,
											"end": 3295,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3269,
											"end": 3295,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3305,
											"end": 3376,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 3373,
											"end": 3374,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3362,
											"end": 3371,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3358,
											"end": 3375,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3349,
											"end": 3355,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3305,
											"end": 3376,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 3305,
											"end": 3376,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3305,
											"end": 3376,
											"name": "tag",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 3305,
											"end": 3376,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3161,
											"end": 3383,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3161,
											"end": 3383,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3161,
											"end": 3383,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3161,
											"end": 3383,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3161,
											"end": 3383,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3389,
											"end": 3449,
											"name": "tag",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 3389,
											"end": 3449,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3417,
											"end": 3420,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3438,
											"end": 3443,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3431,
											"end": 3443,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3431,
											"end": 3443,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3389,
											"end": 3449,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3389,
											"end": 3449,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3389,
											"end": 3449,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3389,
											"end": 3449,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3455,
											"end": 3597,
											"name": "tag",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 3455,
											"end": 3597,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3505,
											"end": 3514,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3538,
											"end": 3591,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 3556,
											"end": 3590,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "166"
										},
										{
											"begin": 3565,
											"end": 3589,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 3583,
											"end": 3588,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3565,
											"end": 3589,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 3565,
											"end": 3589,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3565,
											"end": 3589,
											"name": "tag",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 3565,
											"end": 3589,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3556,
											"end": 3590,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 3556,
											"end": 3590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3556,
											"end": 3590,
											"name": "tag",
											"source": 3,
											"value": "166"
										},
										{
											"begin": 3556,
											"end": 3590,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3538,
											"end": 3591,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 3538,
											"end": 3591,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3538,
											"end": 3591,
											"name": "tag",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 3538,
											"end": 3591,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3525,
											"end": 3591,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3525,
											"end": 3591,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3455,
											"end": 3597,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3455,
											"end": 3597,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3455,
											"end": 3597,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3455,
											"end": 3597,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3603,
											"end": 3729,
											"name": "tag",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 3603,
											"end": 3729,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3653,
											"end": 3662,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3686,
											"end": 3723,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "169"
										},
										{
											"begin": 3717,
											"end": 3722,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3686,
											"end": 3723,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 3686,
											"end": 3723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3686,
											"end": 3723,
											"name": "tag",
											"source": 3,
											"value": "169"
										},
										{
											"begin": 3686,
											"end": 3723,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3673,
											"end": 3723,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3673,
											"end": 3723,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3603,
											"end": 3729,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3603,
											"end": 3729,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3603,
											"end": 3729,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3603,
											"end": 3729,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3735,
											"end": 3874,
											"name": "tag",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 3735,
											"end": 3874,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3798,
											"end": 3807,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3831,
											"end": 3868,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "171"
										},
										{
											"begin": 3862,
											"end": 3867,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3831,
											"end": 3868,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 3831,
											"end": 3868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3831,
											"end": 3868,
											"name": "tag",
											"source": 3,
											"value": "171"
										},
										{
											"begin": 3831,
											"end": 3868,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3818,
											"end": 3868,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3818,
											"end": 3868,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3735,
											"end": 3874,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3735,
											"end": 3874,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3735,
											"end": 3874,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3735,
											"end": 3874,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3880,
											"end": 4037,
											"name": "tag",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 3880,
											"end": 4037,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3980,
											"end": 4030,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 4024,
											"end": 4029,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3980,
											"end": 4030,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 3980,
											"end": 4030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3980,
											"end": 4030,
											"name": "tag",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 3980,
											"end": 4030,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3975,
											"end": 3978,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3968,
											"end": 4031,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3880,
											"end": 4037,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3880,
											"end": 4037,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3880,
											"end": 4037,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4043,
											"end": 4291,
											"name": "tag",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 4043,
											"end": 4291,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4149,
											"end": 4153,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4187,
											"end": 4189,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4176,
											"end": 4185,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4172,
											"end": 4190,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4164,
											"end": 4190,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4164,
											"end": 4190,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4200,
											"end": 4284,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "175"
										},
										{
											"begin": 4281,
											"end": 4282,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4270,
											"end": 4279,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4266,
											"end": 4283,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4257,
											"end": 4263,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4200,
											"end": 4284,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 4200,
											"end": 4284,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4200,
											"end": 4284,
											"name": "tag",
											"source": 3,
											"value": "175"
										},
										{
											"begin": 4200,
											"end": 4284,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4043,
											"end": 4291,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4043,
											"end": 4291,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4043,
											"end": 4291,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4043,
											"end": 4291,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4043,
											"end": 4291,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4297,
											"end": 4466,
											"name": "tag",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 4297,
											"end": 4466,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4381,
											"end": 4392,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4415,
											"end": 4421,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4410,
											"end": 4413,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4403,
											"end": 4422,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4455,
											"end": 4459,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4450,
											"end": 4453,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4446,
											"end": 4460,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4431,
											"end": 4460,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4431,
											"end": 4460,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4297,
											"end": 4466,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4297,
											"end": 4466,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4297,
											"end": 4466,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4297,
											"end": 4466,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4297,
											"end": 4466,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4472,
											"end": 4631,
											"name": "tag",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 4472,
											"end": 4631,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4612,
											"end": 4623,
											"name": "PUSH",
											"source": 3,
											"value": "4E6F74206F776E65720000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4608,
											"end": 4609,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4600,
											"end": 4606,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4596,
											"end": 4610,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4589,
											"end": 4624,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4472,
											"end": 4631,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4472,
											"end": 4631,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4637,
											"end": 5002,
											"name": "tag",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 4637,
											"end": 5002,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4779,
											"end": 4782,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4800,
											"end": 4866,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "179"
										},
										{
											"begin": 4864,
											"end": 4865,
											"name": "PUSH",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 4859,
											"end": 4862,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4800,
											"end": 4866,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 4800,
											"end": 4866,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4800,
											"end": 4866,
											"name": "tag",
											"source": 3,
											"value": "179"
										},
										{
											"begin": 4800,
											"end": 4866,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4793,
											"end": 4866,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4793,
											"end": 4866,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4875,
											"end": 4968,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "180"
										},
										{
											"begin": 4964,
											"end": 4967,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4875,
											"end": 4968,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 4875,
											"end": 4968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4875,
											"end": 4968,
											"name": "tag",
											"source": 3,
											"value": "180"
										},
										{
											"begin": 4875,
											"end": 4968,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4993,
											"end": 4995,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4988,
											"end": 4991,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4984,
											"end": 4996,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4977,
											"end": 4996,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4977,
											"end": 4996,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4637,
											"end": 5002,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4637,
											"end": 5002,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4637,
											"end": 5002,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4637,
											"end": 5002,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5008,
											"end": 5427,
											"name": "tag",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 5008,
											"end": 5427,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5174,
											"end": 5178,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5212,
											"end": 5214,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5201,
											"end": 5210,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5197,
											"end": 5215,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5189,
											"end": 5215,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5189,
											"end": 5215,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5261,
											"end": 5270,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5255,
											"end": 5259,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5251,
											"end": 5271,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5247,
											"end": 5248,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5236,
											"end": 5245,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5232,
											"end": 5249,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5225,
											"end": 5272,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5289,
											"end": 5420,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "182"
										},
										{
											"begin": 5415,
											"end": 5419,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5289,
											"end": 5420,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 5289,
											"end": 5420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5289,
											"end": 5420,
											"name": "tag",
											"source": 3,
											"value": "182"
										},
										{
											"begin": 5289,
											"end": 5420,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5281,
											"end": 5420,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5281,
											"end": 5420,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5008,
											"end": 5427,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5008,
											"end": 5427,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5008,
											"end": 5427,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5008,
											"end": 5427,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5433,
											"end": 5875,
											"name": "tag",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 5433,
											"end": 5875,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5582,
											"end": 5586,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5620,
											"end": 5622,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 5609,
											"end": 5618,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5605,
											"end": 5623,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5597,
											"end": 5623,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5597,
											"end": 5623,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5633,
											"end": 5704,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "184"
										},
										{
											"begin": 5701,
											"end": 5702,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5690,
											"end": 5699,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5686,
											"end": 5703,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5677,
											"end": 5683,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 5633,
											"end": 5704,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 5633,
											"end": 5704,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5633,
											"end": 5704,
											"name": "tag",
											"source": 3,
											"value": "184"
										},
										{
											"begin": 5633,
											"end": 5704,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5714,
											"end": 5786,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "185"
										},
										{
											"begin": 5782,
											"end": 5784,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5771,
											"end": 5780,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5767,
											"end": 5785,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5758,
											"end": 5764,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5714,
											"end": 5786,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 5714,
											"end": 5786,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5714,
											"end": 5786,
											"name": "tag",
											"source": 3,
											"value": "185"
										},
										{
											"begin": 5714,
											"end": 5786,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5796,
											"end": 5868,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "186"
										},
										{
											"begin": 5864,
											"end": 5866,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5853,
											"end": 5862,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5849,
											"end": 5867,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5840,
											"end": 5846,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5796,
											"end": 5868,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 5796,
											"end": 5868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5796,
											"end": 5868,
											"name": "tag",
											"source": 3,
											"value": "186"
										},
										{
											"begin": 5796,
											"end": 5868,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5433,
											"end": 5875,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 5433,
											"end": 5875,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 5433,
											"end": 5875,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5433,
											"end": 5875,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5433,
											"end": 5875,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5433,
											"end": 5875,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5433,
											"end": 5875,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5881,
											"end": 5971,
											"name": "tag",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 5881,
											"end": 5971,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5915,
											"end": 5922,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5958,
											"end": 5963,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5951,
											"end": 5964,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5944,
											"end": 5965,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5933,
											"end": 5965,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5933,
											"end": 5965,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5881,
											"end": 5971,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5881,
											"end": 5971,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5881,
											"end": 5971,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5881,
											"end": 5971,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5977,
											"end": 6093,
											"name": "tag",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 5977,
											"end": 6093,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6047,
											"end": 6068,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "189"
										},
										{
											"begin": 6062,
											"end": 6067,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6047,
											"end": 6068,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 6047,
											"end": 6068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6047,
											"end": 6068,
											"name": "tag",
											"source": 3,
											"value": "189"
										},
										{
											"begin": 6047,
											"end": 6068,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6040,
											"end": 6045,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6037,
											"end": 6069,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 6027,
											"end": 6087,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "190"
										},
										{
											"begin": 6027,
											"end": 6087,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6083,
											"end": 6084,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6080,
											"end": 6081,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6073,
											"end": 6085,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 6027,
											"end": 6087,
											"name": "tag",
											"source": 3,
											"value": "190"
										},
										{
											"begin": 6027,
											"end": 6087,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5977,
											"end": 6093,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5977,
											"end": 6093,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6099,
											"end": 6236,
											"name": "tag",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 6099,
											"end": 6236,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6153,
											"end": 6158,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6184,
											"end": 6190,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6178,
											"end": 6191,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6169,
											"end": 6191,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6169,
											"end": 6191,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6200,
											"end": 6230,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "192"
										},
										{
											"begin": 6224,
											"end": 6229,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6200,
											"end": 6230,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 6200,
											"end": 6230,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6200,
											"end": 6230,
											"name": "tag",
											"source": 3,
											"value": "192"
										},
										{
											"begin": 6200,
											"end": 6230,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6099,
											"end": 6236,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6099,
											"end": 6236,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6099,
											"end": 6236,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6099,
											"end": 6236,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6099,
											"end": 6236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6242,
											"end": 6587,
											"name": "tag",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 6242,
											"end": 6587,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6309,
											"end": 6315,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6358,
											"end": 6360,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6346,
											"end": 6355,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6337,
											"end": 6344,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 6333,
											"end": 6356,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6329,
											"end": 6361,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 6326,
											"end": 6445,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6326,
											"end": 6445,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "194"
										},
										{
											"begin": 6326,
											"end": 6445,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6364,
											"end": 6443,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "195"
										},
										{
											"begin": 6364,
											"end": 6443,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 6364,
											"end": 6443,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6364,
											"end": 6443,
											"name": "tag",
											"source": 3,
											"value": "195"
										},
										{
											"begin": 6364,
											"end": 6443,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6326,
											"end": 6445,
											"name": "tag",
											"source": 3,
											"value": "194"
										},
										{
											"begin": 6326,
											"end": 6445,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6484,
											"end": 6485,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6509,
											"end": 6570,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "196"
										},
										{
											"begin": 6562,
											"end": 6569,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 6553,
											"end": 6559,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6542,
											"end": 6551,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 6538,
											"end": 6560,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6509,
											"end": 6570,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 6509,
											"end": 6570,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6509,
											"end": 6570,
											"name": "tag",
											"source": 3,
											"value": "196"
										},
										{
											"begin": 6509,
											"end": 6570,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6499,
											"end": 6570,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6499,
											"end": 6570,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6455,
											"end": 6580,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6242,
											"end": 6587,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6242,
											"end": 6587,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6242,
											"end": 6587,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6242,
											"end": 6587,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6242,
											"end": 6587,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6593,
											"end": 6773,
											"name": "tag",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 6593,
											"end": 6773,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6641,
											"end": 6718,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6638,
											"end": 6639,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6631,
											"end": 6719,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6738,
											"end": 6742,
											"name": "PUSH",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 6735,
											"end": 6736,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6728,
											"end": 6743,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6762,
											"end": 6766,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 6759,
											"end": 6760,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6752,
											"end": 6767,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 6779,
											"end": 6970,
											"name": "tag",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 6779,
											"end": 6970,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6819,
											"end": 6822,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6838,
											"end": 6858,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "199"
										},
										{
											"begin": 6856,
											"end": 6857,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6838,
											"end": 6858,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 6838,
											"end": 6858,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6838,
											"end": 6858,
											"name": "tag",
											"source": 3,
											"value": "199"
										},
										{
											"begin": 6838,
											"end": 6858,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6833,
											"end": 6858,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6833,
											"end": 6858,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6872,
											"end": 6892,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "200"
										},
										{
											"begin": 6890,
											"end": 6891,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6872,
											"end": 6892,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 6872,
											"end": 6892,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6872,
											"end": 6892,
											"name": "tag",
											"source": 3,
											"value": "200"
										},
										{
											"begin": 6872,
											"end": 6892,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6867,
											"end": 6892,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6867,
											"end": 6892,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6915,
											"end": 6916,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6912,
											"end": 6913,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6908,
											"end": 6917,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6901,
											"end": 6917,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6901,
											"end": 6917,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6936,
											"end": 6939,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6933,
											"end": 6934,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6930,
											"end": 6940,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 6927,
											"end": 6963,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6927,
											"end": 6963,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "201"
										},
										{
											"begin": 6927,
											"end": 6963,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6943,
											"end": 6961,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 6943,
											"end": 6961,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 6943,
											"end": 6961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6943,
											"end": 6961,
											"name": "tag",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 6943,
											"end": 6961,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6927,
											"end": 6963,
											"name": "tag",
											"source": 3,
											"value": "201"
										},
										{
											"begin": 6927,
											"end": 6963,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6779,
											"end": 6970,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6779,
											"end": 6970,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6779,
											"end": 6970,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6779,
											"end": 6970,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6779,
											"end": 6970,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6976,
											"end": 7308,
											"name": "tag",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 6976,
											"end": 7308,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7097,
											"end": 7101,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7135,
											"end": 7137,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7124,
											"end": 7133,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7120,
											"end": 7138,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7112,
											"end": 7138,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7112,
											"end": 7138,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7148,
											"end": 7219,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "204"
										},
										{
											"begin": 7216,
											"end": 7217,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7205,
											"end": 7214,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7201,
											"end": 7218,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7192,
											"end": 7198,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 7148,
											"end": 7219,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 7148,
											"end": 7219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7148,
											"end": 7219,
											"name": "tag",
											"source": 3,
											"value": "204"
										},
										{
											"begin": 7148,
											"end": 7219,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7229,
											"end": 7301,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "205"
										},
										{
											"begin": 7297,
											"end": 7299,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7286,
											"end": 7295,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7282,
											"end": 7300,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7273,
											"end": 7279,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7229,
											"end": 7301,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 7229,
											"end": 7301,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7229,
											"end": 7301,
											"name": "tag",
											"source": 3,
											"value": "205"
										},
										{
											"begin": 7229,
											"end": 7301,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6976,
											"end": 7308,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 6976,
											"end": 7308,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6976,
											"end": 7308,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6976,
											"end": 7308,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6976,
											"end": 7308,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6976,
											"end": 7308,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7314,
											"end": 7724,
											"name": "tag",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 7314,
											"end": 7724,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7354,
											"end": 7361,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7377,
											"end": 7397,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "207"
										},
										{
											"begin": 7395,
											"end": 7396,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7377,
											"end": 7397,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 7377,
											"end": 7397,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7377,
											"end": 7397,
											"name": "tag",
											"source": 3,
											"value": "207"
										},
										{
											"begin": 7377,
											"end": 7397,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7372,
											"end": 7397,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7372,
											"end": 7397,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7411,
											"end": 7431,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "208"
										},
										{
											"begin": 7429,
											"end": 7430,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7411,
											"end": 7431,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 7411,
											"end": 7431,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7411,
											"end": 7431,
											"name": "tag",
											"source": 3,
											"value": "208"
										},
										{
											"begin": 7411,
											"end": 7431,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7406,
											"end": 7431,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7406,
											"end": 7431,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7466,
											"end": 7467,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7463,
											"end": 7464,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7459,
											"end": 7468,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 7488,
											"end": 7518,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "209"
										},
										{
											"begin": 7506,
											"end": 7517,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7488,
											"end": 7518,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 7488,
											"end": 7518,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7488,
											"end": 7518,
											"name": "tag",
											"source": 3,
											"value": "209"
										},
										{
											"begin": 7488,
											"end": 7518,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7477,
											"end": 7518,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7477,
											"end": 7518,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7667,
											"end": 7668,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7658,
											"end": 7665,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7654,
											"end": 7669,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 7651,
											"end": 7652,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7648,
											"end": 7670,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 7628,
											"end": 7629,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7621,
											"end": 7630,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7601,
											"end": 7684,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 7578,
											"end": 7717,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "210"
										},
										{
											"begin": 7578,
											"end": 7717,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7697,
											"end": 7715,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "211"
										},
										{
											"begin": 7697,
											"end": 7715,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 7697,
											"end": 7715,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7697,
											"end": 7715,
											"name": "tag",
											"source": 3,
											"value": "211"
										},
										{
											"begin": 7697,
											"end": 7715,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7578,
											"end": 7717,
											"name": "tag",
											"source": 3,
											"value": "210"
										},
										{
											"begin": 7578,
											"end": 7717,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7362,
											"end": 7724,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7314,
											"end": 7724,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7314,
											"end": 7724,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7314,
											"end": 7724,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7314,
											"end": 7724,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7314,
											"end": 7724,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7730,
											"end": 8062,
											"name": "tag",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 7730,
											"end": 8062,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7851,
											"end": 7855,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7889,
											"end": 7891,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7878,
											"end": 7887,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7874,
											"end": 7892,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7866,
											"end": 7892,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7866,
											"end": 7892,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7902,
											"end": 7973,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "213"
										},
										{
											"begin": 7970,
											"end": 7971,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7959,
											"end": 7968,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7955,
											"end": 7972,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7946,
											"end": 7952,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 7902,
											"end": 7973,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 7902,
											"end": 7973,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7902,
											"end": 7973,
											"name": "tag",
											"source": 3,
											"value": "213"
										},
										{
											"begin": 7902,
											"end": 7973,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7983,
											"end": 8055,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "214"
										},
										{
											"begin": 8051,
											"end": 8053,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 8040,
											"end": 8049,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8036,
											"end": 8054,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8027,
											"end": 8033,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7983,
											"end": 8055,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 7983,
											"end": 8055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7983,
											"end": 8055,
											"name": "tag",
											"source": 3,
											"value": "214"
										},
										{
											"begin": 7983,
											"end": 8055,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7730,
											"end": 8062,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 7730,
											"end": 8062,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7730,
											"end": 8062,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7730,
											"end": 8062,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7730,
											"end": 8062,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7730,
											"end": 8062,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8068,
											"end": 8248,
											"name": "tag",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 8068,
											"end": 8248,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8116,
											"end": 8193,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8113,
											"end": 8114,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8106,
											"end": 8194,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8213,
											"end": 8217,
											"name": "PUSH",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 8210,
											"end": 8211,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 8203,
											"end": 8218,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8237,
											"end": 8241,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 8234,
											"end": 8235,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8227,
											"end": 8242,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 8254,
											"end": 8439,
											"name": "tag",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 8254,
											"end": 8439,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8294,
											"end": 8295,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8311,
											"end": 8331,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "217"
										},
										{
											"begin": 8329,
											"end": 8330,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8311,
											"end": 8331,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 8311,
											"end": 8331,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8311,
											"end": 8331,
											"name": "tag",
											"source": 3,
											"value": "217"
										},
										{
											"begin": 8311,
											"end": 8331,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8306,
											"end": 8331,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8306,
											"end": 8331,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8345,
											"end": 8365,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "218"
										},
										{
											"begin": 8363,
											"end": 8364,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8345,
											"end": 8365,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 8345,
											"end": 8365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8345,
											"end": 8365,
											"name": "tag",
											"source": 3,
											"value": "218"
										},
										{
											"begin": 8345,
											"end": 8365,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8340,
											"end": 8365,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 8340,
											"end": 8365,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8384,
											"end": 8385,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8374,
											"end": 8409,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "219"
										},
										{
											"begin": 8374,
											"end": 8409,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 8389,
											"end": 8407,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "220"
										},
										{
											"begin": 8389,
											"end": 8407,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 8389,
											"end": 8407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8389,
											"end": 8407,
											"name": "tag",
											"source": 3,
											"value": "220"
										},
										{
											"begin": 8389,
											"end": 8407,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8374,
											"end": 8409,
											"name": "tag",
											"source": 3,
											"value": "219"
										},
										{
											"begin": 8374,
											"end": 8409,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8431,
											"end": 8432,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8428,
											"end": 8429,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8424,
											"end": 8433,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 8419,
											"end": 8433,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8419,
											"end": 8433,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8254,
											"end": 8439,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 8254,
											"end": 8439,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8254,
											"end": 8439,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8254,
											"end": 8439,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8254,
											"end": 8439,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"IJERC20.sol",
								"IStaking.sol",
								"Staking.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"claimReward()": "b88a802f",
							"getStaker(address)": "a23c44b1",
							"owner()": "8da5cb5b",
							"ownerDeposit(uint256)": "141833dc",
							"stake(uint256,uint256)": "7b0472f0",
							"token()": "fc0c546a",
							"unStake()": "73cf575a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"InvalidDuration\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoStakeFound\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StakeNotMature\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"OwnerDeposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RewardsClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"}],\"name\":\"Staked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Unstaked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"claimReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"}],\"name\":\"getStaker\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"ownerDeposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_duration\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"claimReward()\":{\"returns\":{\"_0\":\"reward\"}},\"getStaker(address)\":{\"params\":{\"_userAddress\":\"The address of the user.\"},\"returns\":{\"_0\":\"amount The amount of tokens staked by the user.\",\"_1\":\"stakerAddress The address of the user who staked the tokens.\"}},\"ownerDeposit(uint256)\":{\"params\":{\"_amount\":\"The amount of tokens to deposit\"}},\"stake(uint256,uint256)\":{\"params\":{\"_amount\":\"The amount of tokens to stake\",\"_duration\":\"The duration of the stake in years (1, 2, or 3)\"}},\"unStake()\":{\"details\":\"If the user unstakes before the duration, they will only get the staked amount If the user unstakes after the duration, they will get the staked amount plus the rewards\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"claimReward()\":{\"notice\":\"Claim the rewards\"},\"getStaker(address)\":{\"notice\":\"Get the staked amount and the address of the staker for a specific user.\"},\"ownerDeposit(uint256)\":{\"notice\":\"Allows the owner to deposit tokens to ensure liquidity\"},\"stake(uint256,uint256)\":{\"notice\":\"Stake a certain amount of tokens for a certain duration\"},\"unStake()\":{\"notice\":\"Unstake the tokens\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Staking.sol\":\"Staking\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"IJERC20.sol\":{\"keccak256\":\"0xe6ef2d9e089ac6c188ee22c4413834fad8bf65c83e7218c714d4c703bb7552d9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://abdbdc6d524ce8e9023ab5a284f05d3d3fa3b8814de556a17c8e86f3b066aed9\",\"dweb:/ipfs/QmYKDFkRMxJ7cTM44MebadMTYGTgmP2rYdcVubAcbr7VXS\"]},\"IStaking.sol\":{\"keccak256\":\"0xd4f47bd4774fb40d739e697141dcdd218e632f0f003e6dd59c271df963a62b4f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://94a0bb13c52d43f18fd8b57c90a4fdc8ade27f997751b6b6c6a5b03b2a651410\",\"dweb:/ipfs/QmTxNGfVczRgtDmYj4r1MnuYqcqP9oP6LmjskAGSXQ5ENN\"]},\"Staking.sol\":{\"keccak256\":\"0x8ef30801d5a5b3e46f3844d96140ed0ee3070fced90ca22ea3201ea664a52e29\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://13ad7660fd635fad0c4e6977676c2485802e6d30c94146538089b6f6079dd89b\",\"dweb:/ipfs/QmVTN7Qf27ydUcTXBGzWbUuRVZfo5ME3Um28ES5EtkbdpK\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 170,
								"contract": "Staking.sol:Staking",
								"label": "owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 197,
								"contract": "Staking.sol:Staking",
								"label": "stakes",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_struct(Stake)88_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_struct(Stake)88_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct Stake)",
								"numberOfBytes": "32",
								"value": "t_struct(Stake)88_storage"
							},
							"t_struct(Stake)88_storage": {
								"encoding": "inplace",
								"label": "struct Stake",
								"members": [
									{
										"astId": 81,
										"contract": "Staking.sol:Staking",
										"label": "amount",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 83,
										"contract": "Staking.sol:Staking",
										"label": "startTime",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 85,
										"contract": "Staking.sol:Staking",
										"label": "duration",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 87,
										"contract": "Staking.sol:Staking",
										"label": "claimed",
										"offset": 0,
										"slot": "3",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "128"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"claimReward()": {
								"notice": "Claim the rewards"
							},
							"getStaker(address)": {
								"notice": "Get the staked amount and the address of the staker for a specific user."
							},
							"ownerDeposit(uint256)": {
								"notice": "Allows the owner to deposit tokens to ensure liquidity"
							},
							"stake(uint256,uint256)": {
								"notice": "Stake a certain amount of tokens for a certain duration"
							},
							"unStake()": {
								"notice": "Unstake the tokens"
							}
						},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"IJERC20.sol": {
				"ast": {
					"absolutePath": "IJERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						]
					},
					"id": 78,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".26"
							],
							"nodeType": "PragmaDirective",
							"src": "35:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "63:51:0",
								"text": " @title ERC-20 Token Standard Interface"
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nameLocation": "129:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "143:155:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 11,
									"name": "Transfer",
									"nameLocation": "310:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "335:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "319:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "319:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "357:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "341:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "341:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "369:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "361:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "361:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "318:57:0"
									},
									"src": "304:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "384:151:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 20,
									"name": "Approval",
									"nameLocation": "547:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "572:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "556:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "556:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "595:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "579:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "579:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "612:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "604:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "604:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "555:63:0"
									},
									"src": "541:78:0"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "628:74:0",
										"text": " @dev Returns the total amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "717:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "728:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "754:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "754:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "753:9:0"
									},
									"scope": 77,
									"src": "708:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "771:74:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 34,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "860:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "878:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "870:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "870:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "869:17:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "910:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "910:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "909:9:0"
									},
									"scope": 77,
									"src": "851:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "927:160:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a ~ success boolean value\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1102:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1119:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1111:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1111:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1131:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1123:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1123:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1110:28:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1157:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1157:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1156:6:0"
									},
									"scope": 77,
									"src": "1093:70:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1171:249:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. \n default: 0\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1435:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1453:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1445:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1445:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1468:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1460:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1460:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1444:32:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1500:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1500:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1499:9:0"
									},
									"scope": 77,
									"src": "1426:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1517:171:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded."
									},
									"functionSelector": "095ea7b3",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "1703:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1719:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "1711:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1711:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1736:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "1728:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1728:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1710:33:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "1762:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 61,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1762:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1761:6:0"
									},
									"scope": 77,
									"src": "1694:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "1776:279:0",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2070:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2101:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2093:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2093:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2124:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2116:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2116:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2145:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2137:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2137:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2082:76:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2177:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 73,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2177:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2176:6:0"
									},
									"scope": 77,
									"src": "2061:122:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 78,
							"src": "119:2067:0",
							"usedErrors": [],
							"usedEvents": [
								11,
								20
							]
						}
					],
					"src": "35:2151:0"
				},
				"id": 0
			},
			"IStaking.sol": {
				"ast": {
					"absolutePath": "IStaking.sol",
					"exportedSymbols": {
						"IStaking": [
							159
						],
						"Stake": [
							88
						]
					},
					"id": 160,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 79,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".26"
							],
							"nodeType": "PragmaDirective",
							"src": "50:24:1"
						},
						{
							"canonicalName": "Stake",
							"id": 88,
							"members": [
								{
									"constant": false,
									"id": 81,
									"mutability": "mutable",
									"name": "amount",
									"nameLocation": "254:6:1",
									"nodeType": "VariableDeclaration",
									"scope": 88,
									"src": "246:14:1",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 80,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "246:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 83,
									"mutability": "mutable",
									"name": "startTime",
									"nameLocation": "301:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 88,
									"src": "293:17:1",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 82,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "293:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 85,
									"mutability": "mutable",
									"name": "duration",
									"nameLocation": "363:8:1",
									"nodeType": "VariableDeclaration",
									"scope": 88,
									"src": "355:16:1",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 84,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "355:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 87,
									"mutability": "mutable",
									"name": "claimed",
									"nameLocation": "426:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 88,
									"src": "421:12:1",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 86,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "421:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "internal"
								}
							],
							"name": "Stake",
							"nameLocation": "234:5:1",
							"nodeType": "StructDefinition",
							"scope": 160,
							"src": "227:255:1",
							"visibility": "public"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IStaking",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 159,
							"linearizedBaseContracts": [
								159
							],
							"name": "IStaking",
							"nameLocation": "494:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "1449c6dd7851abc30abf37f57715f492010519147cc2652fbc38202c18a6ee90",
									"id": 96,
									"name": "Staked",
									"nameLocation": "670:6:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 90,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "693:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 96,
												"src": "677:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 89,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "677:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 92,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "707:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 96,
												"src": "699:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 91,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "699:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 94,
												"indexed": false,
												"mutability": "mutable",
												"name": "duration",
												"nameLocation": "723:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 96,
												"src": "715:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 93,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "715:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "676:56:1"
									},
									"src": "664:69:1"
								},
								{
									"anonymous": false,
									"eventSelector": "0f5bb82176feb1b5e747e28471aa92156a04d9f3ab9f45f28e2d704232b93f75",
									"id": 102,
									"name": "Unstaked",
									"nameLocation": "744:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 98,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "769:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 102,
												"src": "753:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 97,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "753:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 100,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "783:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 102,
												"src": "775:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 99,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "775:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "752:38:1"
									},
									"src": "738:53:1"
								},
								{
									"anonymous": false,
									"eventSelector": "fc30cddea38e2bf4d6ea7d3f9ed3b6ad7f176419f4963bd81318067a4aee73fe",
									"id": 108,
									"name": "RewardsClaimed",
									"nameLocation": "802:14:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 107,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "833:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 108,
												"src": "817:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "817:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 106,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "847:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 108,
												"src": "839:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 105,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "839:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "816:38:1"
									},
									"src": "796:59:1"
								},
								{
									"anonymous": false,
									"eventSelector": "c286f3b83e4f244dafdd6f12a30c1792eb5c99ba0ee6cb1181aaf6eac30286e8",
									"id": 114,
									"name": "OwnerDeposit",
									"nameLocation": "866:12:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 113,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 110,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "895:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "879:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 109,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "879:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 112,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "910:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "902:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 111,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "902:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "878:39:1"
									},
									"src": "860:58:1"
								},
								{
									"errorSelector": "76166401",
									"id": 116,
									"name": "InvalidDuration",
									"nameLocation": "1087:15:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1102:2:1"
									},
									"src": "1081:24:1"
								},
								{
									"errorSelector": "59be8f02",
									"id": 118,
									"name": "NoStakeFound",
									"nameLocation": "1116:12:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1128:2:1"
									},
									"src": "1110:21:1"
								},
								{
									"errorSelector": "a5a3111c",
									"id": 120,
									"name": "StakeNotMature",
									"nameLocation": "1142:14:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1156:2:1"
									},
									"src": "1136:23:1"
								},
								{
									"documentation": {
										"id": 121,
										"nodeType": "StructuredDocumentation",
										"src": "1320:290:1",
										"text": " @notice Get the staked amount and the address of the staker for a specific user.\n @param _userAddress The address of the user.\n @return amount The amount of tokens staked by the user.\n @return stakerAddress The address of the user who staked the tokens."
									},
									"functionSelector": "a23c44b1",
									"id": 130,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getStaker",
									"nameLocation": "1624:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 124,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 123,
												"mutability": "mutable",
												"name": "_userAddress",
												"nameLocation": "1642:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 130,
												"src": "1634:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 122,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1634:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1633:22:1"
									},
									"returnParameters": {
										"id": 129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 130,
												"src": "1703:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 125,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1703:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 128,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 130,
												"src": "1712:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 127,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1712:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1702:18:1"
									},
									"scope": 159,
									"src": "1615:106:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 131,
										"nodeType": "StructuredDocumentation",
										"src": "1880:206:1",
										"text": " @notice Stake a certain amount of tokens for a certain duration\n @param _amount The amount of tokens to stake\n @param _duration The duration of the stake in years (1, 2, or 3)"
									},
									"functionSelector": "7b0472f0",
									"id": 142,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "stake",
									"nameLocation": "2101:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 136,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "2115:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 142,
												"src": "2107:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2107:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "_duration",
												"nameLocation": "2132:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 142,
												"src": "2124:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 134,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2124:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2106:36:1"
									},
									"returnParameters": {
										"id": 141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 138,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 142,
												"src": "2177:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 137,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2177:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 140,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 142,
												"src": "2186:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 139,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2186:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2176:18:1"
									},
									"scope": 159,
									"src": "2092:103:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 143,
										"nodeType": "StructuredDocumentation",
										"src": "2201:233:1",
										"text": " @notice Unstake the tokens\n @dev If the user unstakes before the duration, they will only get the staked amount\n If the user unstakes after the duration, they will get the staked amount plus the rewards"
									},
									"functionSelector": "73cf575a",
									"id": 146,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "unStake",
									"nameLocation": "2448:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 144,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2455:2:1"
									},
									"returnParameters": {
										"id": 145,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2466:0:1"
									},
									"scope": 159,
									"src": "2439:28:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 147,
										"nodeType": "StructuredDocumentation",
										"src": "2473:66:1",
										"text": " @notice Claim the rewards\n @return reward"
									},
									"functionSelector": "b88a802f",
									"id": 152,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "claimReward",
									"nameLocation": "2553:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 148,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2564:2:1"
									},
									"returnParameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 152,
												"src": "2585:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 149,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2585:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2584:9:1"
									},
									"scope": 159,
									"src": "2544:50:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 153,
										"nodeType": "StructuredDocumentation",
										"src": "2600:135:1",
										"text": " @notice Allows the owner to deposit tokens to ensure liquidity\n @param _amount The amount of tokens to deposit"
									},
									"functionSelector": "141833dc",
									"id": 158,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerDeposit",
									"nameLocation": "2749:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "2770:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "2762:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2762:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2761:17:1"
									},
									"returnParameters": {
										"id": 157,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2787:0:1"
									},
									"scope": 159,
									"src": "2740:48:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 160,
							"src": "484:2306:1",
							"usedErrors": [
								116,
								118,
								120
							],
							"usedEvents": [
								96,
								102,
								108,
								114
							]
						}
					],
					"src": "50:2741:1"
				},
				"id": 1
			},
			"Staking.sol": {
				"ast": {
					"absolutePath": "Staking.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						],
						"IStaking": [
							159
						],
						"Stake": [
							88
						],
						"Staking": [
							520
						]
					},
					"id": 521,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 161,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".26"
							],
							"nodeType": "PragmaDirective",
							"src": "34:24:2"
						},
						{
							"absolutePath": "IJERC20.sol",
							"file": "./IJERC20.sol",
							"id": 162,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 521,
							"sourceUnit": 78,
							"src": "60:23:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "IStaking.sol",
							"file": "./IStaking.sol",
							"id": 163,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 521,
							"sourceUnit": 160,
							"src": "84:24:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 164,
										"name": "IStaking",
										"nameLocations": [
											"130:8:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 159,
										"src": "130:8:2"
									},
									"id": 165,
									"nodeType": "InheritanceSpecifier",
									"src": "130:8:2"
								}
							],
							"canonicalName": "Staking",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 520,
							"linearizedBaseContracts": [
								520,
								159
							],
							"name": "Staking",
							"nameLocation": "119:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "fc0c546a",
									"id": 168,
									"mutability": "immutable",
									"name": "token",
									"nameLocation": "169:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 520,
									"src": "145:29:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$77",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 167,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 166,
											"name": "IERC20",
											"nameLocations": [
												"145:6:2"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 77,
											"src": "145:6:2"
										},
										"referencedDeclaration": 77,
										"src": "145:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$77",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8da5cb5b",
									"id": 170,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "231:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 520,
									"src": "216:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 169,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "216:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 191,
										"nodeType": "Block",
										"src": "287:254:2",
										"statements": [
											{
												"assignments": [
													174
												],
												"declarations": [
													{
														"constant": false,
														"id": 174,
														"mutability": "mutable",
														"name": "_tokenAddress",
														"nameLocation": "305:13:2",
														"nodeType": "VariableDeclaration",
														"scope": 191,
														"src": "297:21:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 173,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "297:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 179,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "307864393134354343453532443338366632353439313765343831654234346539393433463339313338",
															"id": 177,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "329:42:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"value": "0xd9145CCE52D386f254917e481eB44e9943F39138"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 176,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "321:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 175,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "321:7:2",
															"typeDescriptions": {}
														}
													},
													"id": 178,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "321:51:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "297:75:2"
											},
											{
												"expression": {
													"id": 184,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 180,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 168,
														"src": "404:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$77",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 182,
																"name": "_tokenAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 174,
																"src": "419:13:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 181,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 77,
															"src": "412:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 183,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "412:21:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$77",
															"typeString": "contract IERC20"
														}
													},
													"src": "404:29:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"id": 185,
												"nodeType": "ExpressionStatement",
												"src": "404:29:2"
											},
											{
												"expression": {
													"id": 189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 186,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 170,
														"src": "487:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 187,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "495:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 188,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "499:6:2",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "495:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "487:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 190,
												"nodeType": "ExpressionStatement",
												"src": "487:18:2"
											}
										]
									},
									"id": 192,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 171,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "284:2:2"
									},
									"returnParameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "287:0:2"
									},
									"scope": 520,
									"src": "273:268:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 197,
									"mutability": "mutable",
									"name": "stakes",
									"nameLocation": "573:6:2",
									"nodeType": "VariableDeclaration",
									"scope": 520,
									"src": "547:32:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$88_storage_$",
										"typeString": "mapping(address => struct Stake)"
									},
									"typeName": {
										"id": 196,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 193,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "555:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "547:25:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$88_storage_$",
											"typeString": "mapping(address => struct Stake)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 195,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 194,
												"name": "Stake",
												"nameLocations": [
													"566:5:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 88,
												"src": "566:5:2"
											},
											"referencedDeclaration": 88,
											"src": "566:5:2",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Stake_$88_storage_ptr",
												"typeString": "struct Stake"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										142
									],
									"body": {
										"id": 274,
										"nodeType": "Block",
										"src": "935:590:2",
										"statements": [
											{
												"assignments": [
													210
												],
												"declarations": [
													{
														"constant": false,
														"id": 210,
														"mutability": "mutable",
														"name": "myAmount",
														"nameLocation": "953:8:2",
														"nodeType": "VariableDeclaration",
														"scope": 274,
														"src": "945:16:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 209,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "945:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 211,
												"nodeType": "VariableDeclarationStatement",
												"src": "945:16:2"
											},
											{
												"assignments": [
													213
												],
												"declarations": [
													{
														"constant": false,
														"id": 213,
														"mutability": "mutable",
														"name": "myAddress",
														"nameLocation": "979:9:2",
														"nodeType": "VariableDeclaration",
														"scope": 274,
														"src": "971:17:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 212,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "971:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 214,
												"nodeType": "VariableDeclarationStatement",
												"src": "971:17:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 221,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 217,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 215,
															"name": "_duration",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 202,
															"src": "1002:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"hexValue": "31",
															"id": 216,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1014:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1002:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 220,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 218,
															"name": "_duration",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 202,
															"src": "1019:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "33",
															"id": 219,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1031:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_3_by_1",
																"typeString": "int_const 3"
															},
															"value": "3"
														},
														"src": "1019:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1002:30:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 226,
												"nodeType": "IfStatement",
												"src": "998:85:2",
												"trueBody": {
													"id": 225,
													"nodeType": "Block",
													"src": "1034:49:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 222,
																	"name": "InvalidDuration",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 116,
																	"src": "1055:15:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 223,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1055:17:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 224,
															"nodeType": "RevertStatement",
															"src": "1048:24:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 230,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1112:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 231,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1116:6:2",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1112:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 234,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1132:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Staking_$520",
																		"typeString": "contract Staking"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Staking_$520",
																		"typeString": "contract Staking"
																	}
																],
																"id": 233,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1124:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 232,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1124:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 235,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1124:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 236,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 200,
															"src": "1139:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 227,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 168,
															"src": "1093:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 229,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1099:12:2",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 76,
														"src": "1093:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 237,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1093:54:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 238,
												"nodeType": "ExpressionStatement",
												"src": "1093:54:2"
											},
											{
												"expression": {
													"id": 252,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 239,
															"name": "stakes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 197,
															"src": "1158:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$88_storage_$",
																"typeString": "mapping(address => struct Stake storage ref)"
															}
														},
														"id": 242,
														"indexExpression": {
															"expression": {
																"id": 240,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1165:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 241,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1169:6:2",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1165:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1158:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$88_storage",
															"typeString": "struct Stake storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 244,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 200,
																"src": "1207:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"expression": {
																	"id": 245,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "1239:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 246,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1245:9:2",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "1239:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 249,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 247,
																	"name": "_duration",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 202,
																	"src": "1278:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "333635",
																	"id": 248,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1290:8:2",
																	"subdenomination": "days",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_31536000_by_1",
																		"typeString": "int_const 31536000"
																	},
																	"value": "365"
																},
																"src": "1278:20:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "66616c7365",
																"id": 250,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1349:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															],
															"id": 243,
															"name": "Stake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 88,
															"src": "1179:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_Stake_$88_storage_ptr_$",
																"typeString": "type(struct Stake storage pointer)"
															}
														},
														"id": 251,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [
															"1199:6:2",
															"1228:9:2",
															"1268:8:2",
															"1340:7:2"
														],
														"names": [
															"amount",
															"startTime",
															"duration",
															"claimed"
														],
														"nodeType": "FunctionCall",
														"src": "1179:186:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$88_memory_ptr",
															"typeString": "struct Stake memory"
														}
													},
													"src": "1158:207:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stake_$88_storage",
														"typeString": "struct Stake storage ref"
													}
												},
												"id": 253,
												"nodeType": "ExpressionStatement",
												"src": "1158:207:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 255,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1388:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 256,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1392:6:2",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1388:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 257,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 200,
															"src": "1400:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 258,
															"name": "_duration",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 202,
															"src": "1409:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 254,
														"name": "Staked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 96,
														"src": "1381:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 259,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1381:38:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 260,
												"nodeType": "EmitStatement",
												"src": "1376:43:2"
											},
											{
												"expression": {
													"id": 263,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 261,
														"name": "myAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 210,
														"src": "1430:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 262,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 200,
														"src": "1441:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1430:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 264,
												"nodeType": "ExpressionStatement",
												"src": "1430:18:2"
											},
											{
												"expression": {
													"id": 268,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 265,
														"name": "myAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 213,
														"src": "1458:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 266,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1470:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 267,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1474:6:2",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "1470:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1458:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 269,
												"nodeType": "ExpressionStatement",
												"src": "1458:22:2"
											},
											{
												"expression": {
													"components": [
														{
															"id": 270,
															"name": "myAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 210,
															"src": "1498:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 271,
															"name": "myAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 213,
															"src": "1508:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"id": 272,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1497:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_address_$",
														"typeString": "tuple(uint256,address)"
													}
												},
												"functionReturnParameters": 208,
												"id": 273,
												"nodeType": "Return",
												"src": "1490:28:2"
											}
										]
									},
									"documentation": {
										"id": 198,
										"nodeType": "StructuredDocumentation",
										"src": "616:206:2",
										"text": " @notice Stake a certain amount of tokens for a certain duration\n @param _amount The amount of tokens to stake\n @param _duration The duration of the stake in years (1, 2, or 3)"
									},
									"functionSelector": "7b0472f0",
									"id": 275,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "stake",
									"nameLocation": "837:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 200,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "851:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 275,
												"src": "843:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 199,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "843:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 202,
												"mutability": "mutable",
												"name": "_duration",
												"nameLocation": "868:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 275,
												"src": "860:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 201,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "860:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "842:36:2"
									},
									"returnParameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 275,
												"src": "913:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "913:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 275,
												"src": "922:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "922:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "912:18:2"
									},
									"scope": 520,
									"src": "828:697:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										158
									],
									"body": {
										"id": 301,
										"nodeType": "Block",
										"src": "1729:119:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 286,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1758:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 287,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1762:6:2",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1758:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 290,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1778:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Staking_$520",
																		"typeString": "contract Staking"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Staking_$520",
																		"typeString": "contract Staking"
																	}
																],
																"id": 289,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1770:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 288,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1770:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 291,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1770:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 292,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 278,
															"src": "1785:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 283,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 168,
															"src": "1739:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 285,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1745:12:2",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 76,
														"src": "1739:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 293,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1739:54:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 294,
												"nodeType": "ExpressionStatement",
												"src": "1739:54:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 296,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1821:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 297,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1825:6:2",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1821:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 298,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 278,
															"src": "1833:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 295,
														"name": "OwnerDeposit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 114,
														"src": "1808:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 299,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1808:33:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 300,
												"nodeType": "EmitStatement",
												"src": "1803:38:2"
											}
										]
									},
									"documentation": {
										"id": 276,
										"nodeType": "StructuredDocumentation",
										"src": "1531:135:2",
										"text": " @notice Allows the owner to deposit tokens to ensure liquidity\n @param _amount The amount of tokens to deposit"
									},
									"functionSelector": "141833dc",
									"id": 302,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 281,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 280,
												"name": "onlyOwner",
												"nameLocations": [
													"1719:9:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 519,
												"src": "1719:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "1719:9:2"
										}
									],
									"name": "ownerDeposit",
									"nameLocation": "1680:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 278,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "1701:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "1693:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 277,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1693:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1692:17:2"
									},
									"returnParameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1729:0:2"
									},
									"scope": 520,
									"src": "1671:177:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 347,
										"nodeType": "Block",
										"src": "2091:341:2",
										"statements": [
											{
												"assignments": [
													312
												],
												"declarations": [
													{
														"constant": false,
														"id": 312,
														"mutability": "mutable",
														"name": "userStake",
														"nameLocation": "2114:9:2",
														"nodeType": "VariableDeclaration",
														"scope": 347,
														"src": "2101:22:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$88_memory_ptr",
															"typeString": "struct Stake"
														},
														"typeName": {
															"id": 311,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 310,
																"name": "Stake",
																"nameLocations": [
																	"2101:5:2"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 88,
																"src": "2101:5:2"
															},
															"referencedDeclaration": 88,
															"src": "2101:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$88_storage_ptr",
																"typeString": "struct Stake"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 316,
												"initialValue": {
													"baseExpression": {
														"id": 313,
														"name": "stakes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 197,
														"src": "2126:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$88_storage_$",
															"typeString": "mapping(address => struct Stake storage ref)"
														}
													},
													"id": 315,
													"indexExpression": {
														"id": 314,
														"name": "_user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 305,
														"src": "2133:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2126:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stake_$88_storage",
														"typeString": "struct Stake storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2101:38:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 324,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 317,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "2153:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 318,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2159:9:2",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "2153:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 323,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 319,
																"name": "userStake",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 312,
																"src": "2171:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Stake_$88_memory_ptr",
																	"typeString": "struct Stake memory"
																}
															},
															"id": 320,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2181:9:2",
															"memberName": "startTime",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 83,
															"src": "2171:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"expression": {
																"id": 321,
																"name": "userStake",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 312,
																"src": "2193:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Stake_$88_memory_ptr",
																	"typeString": "struct Stake memory"
																}
															},
															"id": 322,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2203:8:2",
															"memberName": "duration",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 85,
															"src": "2193:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2171:40:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2153:58:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 328,
												"nodeType": "IfStatement",
												"src": "2149:127:2",
												"trueBody": {
													"id": 327,
													"nodeType": "Block",
													"src": "2213:63:2",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 325,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2234:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 309,
															"id": 326,
															"nodeType": "Return",
															"src": "2227:8:2"
														}
													]
												}
											},
											{
												"assignments": [
													330
												],
												"declarations": [
													{
														"constant": false,
														"id": 330,
														"mutability": "mutable",
														"name": "rewardPercentage",
														"nameLocation": "2294:16:2",
														"nodeType": "VariableDeclaration",
														"scope": 347,
														"src": "2286:24:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 329,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2286:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 338,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 337,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 334,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 331,
																		"name": "userStake",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 312,
																		"src": "2314:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Stake_$88_memory_ptr",
																			"typeString": "struct Stake memory"
																		}
																	},
																	"id": 332,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2324:8:2",
																	"memberName": "duration",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 85,
																	"src": "2314:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"hexValue": "333635",
																	"id": 333,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2335:8:2",
																	"subdenomination": "days",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_31536000_by_1",
																		"typeString": "int_const 31536000"
																	},
																	"value": "365"
																},
																"src": "2314:29:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 335,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2313:31:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"hexValue": "3235",
														"id": 336,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2347:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_25_by_1",
															"typeString": "int_const 25"
														},
														"value": "25"
													},
													"src": "2313:36:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2286:63:2"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 345,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 342,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 339,
																		"name": "userStake",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 312,
																		"src": "2383:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Stake_$88_memory_ptr",
																			"typeString": "struct Stake memory"
																		}
																	},
																	"id": 340,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2393:6:2",
																	"memberName": "amount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 81,
																	"src": "2383:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 341,
																	"name": "rewardPercentage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 330,
																	"src": "2402:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2383:35:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 343,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2382:37:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "313030",
														"id": 344,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2422:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100_by_1",
															"typeString": "int_const 100"
														},
														"value": "100"
													},
													"src": "2382:43:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 309,
												"id": 346,
												"nodeType": "Return",
												"src": "2375:50:2"
											}
										]
									},
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "1854:160:2",
										"text": " @dev Calculates the reward amount for a given user.\n @param _user The address of the user.\n @return The calculated reward amount."
									},
									"id": 348,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateReward",
									"nameLocation": "2028:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "2052:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 348,
												"src": "2044:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 304,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2044:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2043:15:2"
									},
									"returnParameters": {
										"id": 309,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 308,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 348,
												"src": "2082:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 307,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2082:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2081:9:2"
									},
									"scope": 520,
									"src": "2019:413:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										152
									],
									"body": {
										"id": 408,
										"nodeType": "Block",
										"src": "2560:423:2",
										"statements": [
											{
												"assignments": [
													356
												],
												"declarations": [
													{
														"constant": false,
														"id": 356,
														"mutability": "mutable",
														"name": "userStake",
														"nameLocation": "2584:9:2",
														"nodeType": "VariableDeclaration",
														"scope": 408,
														"src": "2570:23:2",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$88_storage_ptr",
															"typeString": "struct Stake"
														},
														"typeName": {
															"id": 355,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 354,
																"name": "Stake",
																"nameLocations": [
																	"2570:5:2"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 88,
																"src": "2570:5:2"
															},
															"referencedDeclaration": 88,
															"src": "2570:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$88_storage_ptr",
																"typeString": "struct Stake"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 361,
												"initialValue": {
													"baseExpression": {
														"id": 357,
														"name": "stakes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 197,
														"src": "2596:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$88_storage_$",
															"typeString": "mapping(address => struct Stake storage ref)"
														}
													},
													"id": 360,
													"indexExpression": {
														"expression": {
															"id": 358,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "2603:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 359,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2607:6:2",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "2603:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2596:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stake_$88_storage",
														"typeString": "struct Stake storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2570:44:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 365,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 362,
															"name": "userStake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 356,
															"src": "2628:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$88_storage_ptr",
																"typeString": "struct Stake storage pointer"
															}
														},
														"id": 363,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2638:6:2",
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 81,
														"src": "2628:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 364,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2648:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2628:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 370,
												"nodeType": "IfStatement",
												"src": "2624:73:2",
												"trueBody": {
													"id": 369,
													"nodeType": "Block",
													"src": "2651:46:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 366,
																	"name": "NoStakeFound",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 118,
																	"src": "2672:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 367,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:14:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 368,
															"nodeType": "RevertStatement",
															"src": "2665:21:2"
														}
													]
												}
											},
											{
												"assignments": [
													372
												],
												"declarations": [
													{
														"constant": false,
														"id": 372,
														"mutability": "mutable",
														"name": "reward",
														"nameLocation": "2715:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 408,
														"src": "2707:14:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 371,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2707:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 377,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 374,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2740:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 375,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2744:6:2",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2740:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 373,
														"name": "calculateReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 348,
														"src": "2724:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 376,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2724:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2707:44:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 380,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 378,
														"name": "reward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 372,
														"src": "2765:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 379,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2775:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2765:11:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 385,
												"nodeType": "IfStatement",
												"src": "2761:65:2",
												"trueBody": {
													"id": 384,
													"nodeType": "Block",
													"src": "2778:48:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 381,
																	"name": "StakeNotMature",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 120,
																	"src": "2799:14:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 382,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2799:16:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 383,
															"nodeType": "RevertStatement",
															"src": "2792:23:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 390,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 386,
															"name": "userStake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 356,
															"src": "2836:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$88_storage_ptr",
																"typeString": "struct Stake storage pointer"
															}
														},
														"id": 388,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2846:7:2",
														"memberName": "claimed",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 87,
														"src": "2836:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 389,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2856:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2836:24:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 391,
												"nodeType": "ExpressionStatement",
												"src": "2836:24:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 395,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2885:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 396,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2889:6:2",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2885:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 397,
															"name": "reward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 372,
															"src": "2897:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 392,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 168,
															"src": "2870:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 394,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2876:8:2",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 44,
														"src": "2870:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2870:34:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 399,
												"nodeType": "ExpressionStatement",
												"src": "2870:34:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 401,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2934:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 402,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2938:6:2",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2934:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 403,
															"name": "reward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 372,
															"src": "2946:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 400,
														"name": "RewardsClaimed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 108,
														"src": "2919:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2919:34:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 405,
												"nodeType": "EmitStatement",
												"src": "2914:39:2"
											},
											{
												"expression": {
													"id": 406,
													"name": "reward",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 372,
													"src": "2970:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 353,
												"id": 407,
												"nodeType": "Return",
												"src": "2963:13:2"
											}
										]
									},
									"documentation": {
										"id": 349,
										"nodeType": "StructuredDocumentation",
										"src": "2438:66:2",
										"text": " @notice Claim the rewards\n @return reward"
									},
									"functionSelector": "b88a802f",
									"id": 409,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "claimReward",
									"nameLocation": "2519:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2530:2:2"
									},
									"returnParameters": {
										"id": 353,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 352,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "2551:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 351,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2551:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2550:9:2"
									},
									"scope": 520,
									"src": "2510:473:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										146
									],
									"body": {
										"id": 483,
										"nodeType": "Block",
										"src": "3255:597:2",
										"statements": [
											{
												"assignments": [
													415
												],
												"declarations": [
													{
														"constant": false,
														"id": 415,
														"mutability": "mutable",
														"name": "userStake",
														"nameLocation": "3279:9:2",
														"nodeType": "VariableDeclaration",
														"scope": 483,
														"src": "3265:23:2",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$88_storage_ptr",
															"typeString": "struct Stake"
														},
														"typeName": {
															"id": 414,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 413,
																"name": "Stake",
																"nameLocations": [
																	"3265:5:2"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 88,
																"src": "3265:5:2"
															},
															"referencedDeclaration": 88,
															"src": "3265:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$88_storage_ptr",
																"typeString": "struct Stake"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 420,
												"initialValue": {
													"baseExpression": {
														"id": 416,
														"name": "stakes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 197,
														"src": "3291:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$88_storage_$",
															"typeString": "mapping(address => struct Stake storage ref)"
														}
													},
													"id": 419,
													"indexExpression": {
														"expression": {
															"id": 417,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "3298:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 418,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3302:6:2",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "3298:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3291:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stake_$88_storage",
														"typeString": "struct Stake storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3265:44:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 424,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 421,
															"name": "userStake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 415,
															"src": "3323:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$88_storage_ptr",
																"typeString": "struct Stake storage pointer"
															}
														},
														"id": 422,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3333:6:2",
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 81,
														"src": "3323:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 423,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3343:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3323:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 429,
												"nodeType": "IfStatement",
												"src": "3319:73:2",
												"trueBody": {
													"id": 428,
													"nodeType": "Block",
													"src": "3346:46:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 425,
																	"name": "NoStakeFound",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 118,
																	"src": "3367:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 426,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3367:14:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 427,
															"nodeType": "RevertStatement",
															"src": "3360:21:2"
														}
													]
												}
											},
											{
												"assignments": [
													431
												],
												"declarations": [
													{
														"constant": false,
														"id": 431,
														"mutability": "mutable",
														"name": "reward",
														"nameLocation": "3410:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 483,
														"src": "3402:14:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 430,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3402:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 436,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 433,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3435:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 434,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3439:6:2",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3435:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 432,
														"name": "calculateReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 348,
														"src": "3419:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3419:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3402:44:2"
											},
											{
												"assignments": [
													438
												],
												"declarations": [
													{
														"constant": false,
														"id": 438,
														"mutability": "mutable",
														"name": "totalAmount",
														"nameLocation": "3464:11:2",
														"nodeType": "VariableDeclaration",
														"scope": 483,
														"src": "3456:19:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 437,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3456:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 443,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 442,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 439,
															"name": "userStake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 415,
															"src": "3478:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$88_storage_ptr",
																"typeString": "struct Stake storage pointer"
															}
														},
														"id": 440,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3488:6:2",
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 81,
														"src": "3478:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 441,
														"name": "reward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 431,
														"src": "3497:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3478:25:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3456:47:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 451,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 444,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "3531:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 445,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3537:9:2",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "3531:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 450,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 446,
																	"name": "userStake",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 415,
																	"src": "3549:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Stake_$88_storage_ptr",
																		"typeString": "struct Stake storage pointer"
																	}
																},
																"id": 447,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3559:9:2",
																"memberName": "startTime",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 83,
																"src": "3549:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"expression": {
																	"id": 448,
																	"name": "userStake",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 415,
																	"src": "3571:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Stake_$88_storage_ptr",
																		"typeString": "struct Stake storage pointer"
																	}
																},
																"id": 449,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3581:8:2",
																"memberName": "duration",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 85,
																"src": "3571:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3549:40:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3531:58:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 454,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 452,
															"name": "reward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 431,
															"src": "3605:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 453,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3614:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "3605:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3531:84:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 462,
												"nodeType": "IfStatement",
												"src": "3514:199:2",
												"trueBody": {
													"id": 461,
													"nodeType": "Block",
													"src": "3626:87:2",
													"statements": [
														{
															"expression": {
																"id": 459,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 456,
																	"name": "totalAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 438,
																	"src": "3640:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 457,
																		"name": "userStake",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 415,
																		"src": "3654:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Stake_$88_storage_ptr",
																			"typeString": "struct Stake storage pointer"
																		}
																	},
																	"id": 458,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3664:6:2",
																	"memberName": "amount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 81,
																	"src": "3654:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3640:30:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 460,
															"nodeType": "ExpressionStatement",
															"src": "3640:30:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 467,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "3723:25:2",
													"subExpression": {
														"baseExpression": {
															"id": 463,
															"name": "stakes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 197,
															"src": "3730:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$88_storage_$",
																"typeString": "mapping(address => struct Stake storage ref)"
															}
														},
														"id": 466,
														"indexExpression": {
															"expression": {
																"id": 464,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3737:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 465,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3741:6:2",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3737:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3730:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$88_storage",
															"typeString": "struct Stake storage ref"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 468,
												"nodeType": "ExpressionStatement",
												"src": "3723:25:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 472,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3773:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 473,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3777:6:2",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3773:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 474,
															"name": "totalAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 438,
															"src": "3785:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 469,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 168,
															"src": "3758:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 471,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3764:8:2",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 44,
														"src": "3758:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 475,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3758:39:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 476,
												"nodeType": "ExpressionStatement",
												"src": "3758:39:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 478,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3821:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 479,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3825:6:2",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3821:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 480,
															"name": "totalAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 438,
															"src": "3833:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 477,
														"name": "Unstaked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 102,
														"src": "3812:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 481,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3812:33:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 482,
												"nodeType": "EmitStatement",
												"src": "3807:38:2"
											}
										]
									},
									"documentation": {
										"id": 410,
										"nodeType": "StructuredDocumentation",
										"src": "2989:233:2",
										"text": " @notice Unstake the tokens\n @dev If the user unstakes before the duration, they will only get the staked amount\n If the user unstakes after the duration, they will get the staked amount plus the rewards"
									},
									"functionSelector": "73cf575a",
									"id": 484,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unStake",
									"nameLocation": "3236:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 411,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3243:2:2"
									},
									"returnParameters": {
										"id": 412,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3255:0:2"
									},
									"scope": 520,
									"src": "3227:625:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										130
									],
									"body": {
										"id": 506,
										"nodeType": "Block",
										"src": "4263:103:2",
										"statements": [
											{
												"assignments": [
													496
												],
												"declarations": [
													{
														"constant": false,
														"id": 496,
														"mutability": "mutable",
														"name": "staky",
														"nameLocation": "4286:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 506,
														"src": "4273:18:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$88_memory_ptr",
															"typeString": "struct Stake"
														},
														"typeName": {
															"id": 495,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 494,
																"name": "Stake",
																"nameLocations": [
																	"4273:5:2"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 88,
																"src": "4273:5:2"
															},
															"referencedDeclaration": 88,
															"src": "4273:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$88_storage_ptr",
																"typeString": "struct Stake"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 500,
												"initialValue": {
													"baseExpression": {
														"id": 497,
														"name": "stakes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 197,
														"src": "4294:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$88_storage_$",
															"typeString": "mapping(address => struct Stake storage ref)"
														}
													},
													"id": 499,
													"indexExpression": {
														"id": 498,
														"name": "_userAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 487,
														"src": "4301:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4294:20:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stake_$88_storage",
														"typeString": "struct Stake storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4273:41:2"
											},
											{
												"expression": {
													"components": [
														{
															"expression": {
																"id": 501,
																"name": "staky",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 496,
																"src": "4332:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Stake_$88_memory_ptr",
																	"typeString": "struct Stake memory"
																}
															},
															"id": 502,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4338:6:2",
															"memberName": "amount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 81,
															"src": "4332:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 503,
															"name": "_userAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 487,
															"src": "4346:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"id": 504,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "4331:28:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_address_$",
														"typeString": "tuple(uint256,address)"
													}
												},
												"functionReturnParameters": 493,
												"id": 505,
												"nodeType": "Return",
												"src": "4324:35:2"
											}
										]
									},
									"documentation": {
										"id": 485,
										"nodeType": "StructuredDocumentation",
										"src": "3858:290:2",
										"text": " @notice Get the staked amount and the address of the staker for a specific user.\n @param _userAddress The address of the user.\n @return amount The amount of tokens staked by the user.\n @return stakerAddress The address of the user who staked the tokens."
									},
									"functionSelector": "a23c44b1",
									"id": 507,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStaker",
									"nameLocation": "4162:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 488,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "_userAddress",
												"nameLocation": "4180:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "4172:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 486,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4172:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4171:22:2"
									},
									"returnParameters": {
										"id": 493,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 490,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "4241:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 489,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4241:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 492,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "4250:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 491,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4250:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4240:18:2"
									},
									"scope": 520,
									"src": "4153:213:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 518,
										"nodeType": "Block",
										"src": "4393:69:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 513,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 510,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "4411:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 511,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4415:6:2",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "4411:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 512,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 170,
																"src": "4425:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4411:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f74206f776e6572",
															"id": 514,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4432:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c266efca4f4ed37612271196433531dcbb4fca89a694d568d1e290e32feb1682",
																"typeString": "literal_string \"Not owner\""
															},
															"value": "Not owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c266efca4f4ed37612271196433531dcbb4fca89a694d568d1e290e32feb1682",
																"typeString": "literal_string \"Not owner\""
															}
														],
														"id": 509,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4403:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 515,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4403:41:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 516,
												"nodeType": "ExpressionStatement",
												"src": "4403:41:2"
											},
											{
												"id": 517,
												"nodeType": "PlaceholderStatement",
												"src": "4454:1:2"
											}
										]
									},
									"id": 519,
									"name": "onlyOwner",
									"nameLocation": "4381:9:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 508,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4390:2:2"
									},
									"src": "4372:90:2",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 521,
							"src": "110:4354:2",
							"usedErrors": [
								116,
								118,
								120
							],
							"usedEvents": [
								96,
								102,
								108,
								114
							]
						}
					],
					"src": "34:4431:2"
				},
				"id": 2
			}
		}
	}
}