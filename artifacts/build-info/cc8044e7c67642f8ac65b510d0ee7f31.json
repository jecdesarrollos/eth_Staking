{
	"id": "cc8044e7c67642f8ac65b510d0ee7f31",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"JERC20.sol": {
				"content": "/// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.26;\r\nimport {ERC20} from \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\n\r\n/**\r\n * @title ERC-20 custom token IJERC-20 Interface\r\n * @notice this implements an JERC-20 token.\r\n * @author ~ Jorge Enrique Cabrera Curso Ashitaka ETH KIPU 2024\r\n */\r\n\r\ninterface IJERC20 {\r\n    /**\r\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\r\n     * another (`to`).\r\n     * Note that `value` may be zero.\r\n     */\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    /**\r\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\r\n     * a call to {approve}. `value` is the new allowance.\r\n     */\r\n    event Approval(address indexed owner, address indexed spender, uint256 value); \r\n\r\n    /**\r\n     * @dev Returns the total amount of tokens in existence.\r\n     */\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Returns the amount of tokens owned by `account`.\r\n     */\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from the caller's account to `to`.\r\n      * Returns a ~ success boolean value\r\n      * Emits a {Transfer} event.\r\n     */\r\n    function transfer(address to, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Returns the remaining number of tokens that `spender` will be\r\n     * allowed to spend on behalf of `owner` through {transferFrom}. \r\n     * default: 0\r\n     * This value changes when {approve} or {transferFrom} are called.\r\n     */\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     */\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from `from` to `to` using the\r\n     * allowance mechanism. `amount` is then deducted from the caller's\r\n     * allowance.\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 amount\r\n    ) external returns (bool);\r\n}\r\n\r\n\r\ncontract MyToken is IJERC20 {\r\n    mapping(address => uint256) private _balances;\r\n    mapping(address => mapping(address => uint256)) private _allowances;\r\n\r\n    uint256 private _totalSupply;\r\n    string private _name;\r\n    string private _symbol;\r\n\r\n    /**\r\n     * @notice Constructs the token with a name and symbol\r\n     * @param name_ token name\r\n     * @param symbol_ token symbol\r\n     */\r\nconstructor(string memory name_, string memory symbol_) {\r\n    _name = name_;\r\n    _symbol = symbol_;\r\n    _mint(msg.sender, 1000000 * 10 ** 18);\r\n}\r\n\r\n    /** \r\n     * @notice Returns token name\r\n     * @return token name\r\n     */\r\n    function name() public view virtual returns (string memory) {\r\n        return _name;\r\n    }\r\n\r\n    /**\r\n     * @notice Returns token symbol\r\n     * @return token symbol\r\n     */\r\n    function symbol() public view virtual returns (string memory) {\r\n        return _symbol;\r\n    }\r\n\r\n    /**\r\n     * @return decimals\r\n     */\r\n    function decimals() public view virtual returns (uint8) {\r\n        return 18;\r\n    }\r\n\r\n    /**\r\n     * @return total supply of tokens\r\n     */\r\n    function totalSupply() public view virtual override returns (uint256) {\r\n        return _totalSupply;\r\n    }\r\n\r\n    /**\r\n     * @notice Returns account balance of tokens\r\n     * @param account account address\r\n     * @return account balance of tokens\r\n     */\r\n    function balanceOf(address account) public view virtual override returns (uint256) {\r\n        return _balances[account];\r\n    }\r\n\r\n    /**\r\n     * @notice Transfers tokens from the caller to another address.\r\n     * @param to recipient address\r\n     * @param amount tokens amount to transfer\r\n     * @return A maybe successful ~ boolean value \r\n     * @dev _transfer emits a {Transfer} event\r\n     */\r\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\r\n        address owner = msg.sender;\r\n        _transfer(owner, to, amount);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @notice Returns the remaining number of tokens that `spender` will be\r\n     * allowed to spend on behalf of `owner` through {transferFrom} \r\n     * default 0\r\n     * @param owner owner token address\r\n     * @param spender spender address\r\n     * @return remaining allowance\r\n     */\r\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\r\n        return _allowances[owner][spender];\r\n    }\r\n\r\n    /**\r\n     * @notice Sets `amount` as the allowance of `spender` over the caller's tokens.\r\n     * @param spender spender address\r\n     * @param amount tokens amount to allow.\r\n     * @return A ~ succesful boolean value\r\n     * @dev _approve emits the {Approval} event\r\n     */\r\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\r\n        address owner = msg.sender;\r\n        _approve(owner, spender, amount);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @notice Moves `amount` tokens from `from` to `to` using the\r\n     * allowance mechanism. `amount` is then deducted from the caller's\r\n     * allowance\r\n     * @param from msg sender address\r\n     * @param to recipient address\r\n     * @param amount tokens amount to transfer\r\n     * @return A ~succesful boolean value\r\n     * @dev _transfer emits a {Transfer} event\r\n     */\r\n    function transferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 amount\r\n    ) public virtual override returns (bool) {\r\n        address spender = msg.sender;\r\n        _spendAllowance(from, spender, amount);\r\n        _transfer(from, to, amount);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @notice Transfers `amount` tokens from `from` to `to`.\r\n     * @param from msg sender address\r\n     * @param to recipient address\r\n     * @param amount tokens amount to transfer\r\n     * @dev This internal function is equivalent to {transfer}, and can be used to\r\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\r\n     * @dev Emits a {Transfer} event\r\n     */\r\n    function _transfer(\r\n        address from,\r\n        address to,\r\n        uint256 amount\r\n    ) internal virtual {\r\n        require(from != address(0), \"Transfer from address 0\");\r\n        require(to != address(0), \"Transfer to address 0\");\r\n\r\n        uint256 fromBalance = _balances[from];\r\n        require(fromBalance >= amount, \"Balance exceeded\");\r\n        unchecked {\r\n            _balances[from] = fromBalance - amount;\r\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\r\n            // decrementing then incrementing.\r\n            _balances[to] += amount;\r\n        }\r\n\r\n        emit Transfer(from, to, amount);\r\n    }\r\n\r\n    /**\r\n     * @notice Transfers `amount` tokens from `from` to `to`.\r\n     * @param recipients addresses array\r\n     * @param amount tokens amount to distribute\r\n     * @dev mint tokens _mint emits Transfer event\r\n    */   \r\n    function distributeTokens(address[] memory recipients, uint256 amount) public {\r\n        for (uint256 i = 0; i < recipients.length; i++) {\r\n            _mint(recipients[i], amount);\r\n        }\r\n    }\r\n\r\n    /** @notice Creates `amount` tokens and assigns them to `account`, increasing\r\n     * the total supply.\r\n     * @param account recipient address\r\n     * @param amount tokens amount to create\r\n     * @dev Emits a {Transfer} event with `from` set to the zero address.\r\n     */\r\n    function _mint(address account, uint256 amount) internal virtual {\r\n        require(account != address(0), \"mint to the 0 address\");\r\n\r\n        _totalSupply += amount;\r\n        unchecked {\r\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\r\n            _balances[account] += amount;\r\n        }\r\n        emit Transfer(address(0), account, amount);\r\n    }\r\n\r\n    /**\r\n     * @notice Sets `amount` as the allowance of `spender` over the `owner` s tokens.\r\n     * @param owner The address of the token owner.\r\n     * @param spender The address of the spender.\r\n     * @param amount The amount of tokens to allow.\r\n     * @dev Emits an {Approval} event.\r\n     */\r\n    function _approve(\r\n        address owner,\r\n        address spender,\r\n        uint256 amount\r\n    ) internal virtual {\r\n        require(owner != address(0), \"approve from the 0 address\");\r\n        require(spender != address(0), \"approve to the 0 address\");\r\n\r\n        _allowances[owner][spender] = amount;\r\n        emit Approval(owner, spender, amount);\r\n    }\r\n\r\n    /**\r\n     * @notice Updates `_allowances` during spending\r\n     * @param owner token owner address\r\n     * @param spender spender address\r\n     * @param amount tokens amount to spend\r\n     */\r\n    function _spendAllowance(\r\n        address owner,\r\n        address spender,\r\n        uint256 amount\r\n    ) internal virtual {\r\n        uint256 currentAllowance = allowance(owner, spender);\r\n        if (currentAllowance != type(uint256).max) {\r\n            require(currentAllowance >= amount, \"insufficient allowance\");\r\n            unchecked {\r\n                _approve(owner, spender, currentAllowance - amount);\r\n            }\r\n        }\r\n    }\r\n}"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xbf61ab2ae1d575a17ea58fbb99ca232baddcc4e0eeea180e84cbc74b0c348b31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e0968705bad99747a8e5288aa008678c2be2f471f919dce3925a3cc4f1dee09\",\"dweb:/ipfs/QmbAFnCQfo4tw6ssfQSjhA5LzwHWNNryXN8bX7ty8jiqqn\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 159,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 165,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 167,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 169,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 171,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"JERC20.sol": {
				"IJERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "~ Jorge Enrique Cabrera Curso Ashitaka ETH KIPU 2024",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}.  default: 0 This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the total amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a ~ success boolean value Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"title": "ERC-20 custom token IJERC-20 Interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"~ Jorge Enrique Cabrera Curso Ashitaka ETH KIPU 2024\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}.  default: 0 This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the total amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a ~ success boolean value Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"title\":\"ERC-20 custom token IJERC-20 Interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"this implements an JERC-20 token.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"JERC20.sol\":\"IJERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xbf61ab2ae1d575a17ea58fbb99ca232baddcc4e0eeea180e84cbc74b0c348b31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e0968705bad99747a8e5288aa008678c2be2f471f919dce3925a3cc4f1dee09\",\"dweb:/ipfs/QmbAFnCQfo4tw6ssfQSjhA5LzwHWNNryXN8bX7ty8jiqqn\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"JERC20.sol\":{\"keccak256\":\"0x1f3fd186f01ea0caebf664e5833ce8fad722ad3c78d0cd5ab1b8e718acf7abfd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e5a7ddae2a909daaeebdec92aaa74b63b0aa417117fcc4dbabfc67c7bf2d8765\",\"dweb:/ipfs/QmSbnoZWSiyoTqeLoiwc2Yit5Yr4NQMk9RbBsL6iUtK952\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "this implements an JERC-20 token.",
						"version": 1
					}
				},
				"MyToken": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "recipients",
									"type": "address[]"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "distributeTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"params": {
									"owner": "owner token address",
									"spender": "spender address"
								},
								"returns": {
									"_0": "remaining allowance"
								}
							},
							"approve(address,uint256)": {
								"details": "_approve emits the {Approval} event",
								"params": {
									"amount": "tokens amount to allow.",
									"spender": "spender address"
								},
								"returns": {
									"_0": "A ~ succesful boolean value"
								}
							},
							"balanceOf(address)": {
								"params": {
									"account": "account address"
								},
								"returns": {
									"_0": "account balance of tokens"
								}
							},
							"constructor": {
								"params": {
									"name_": "token name",
									"symbol_": "token symbol"
								}
							},
							"decimals()": {
								"returns": {
									"_0": "decimals"
								}
							},
							"distributeTokens(address[],uint256)": {
								"details": "mint tokens _mint emits Transfer event",
								"params": {
									"amount": "tokens amount to distribute",
									"recipients": "addresses array"
								}
							},
							"name()": {
								"returns": {
									"_0": "token name"
								}
							},
							"symbol()": {
								"returns": {
									"_0": "token symbol"
								}
							},
							"totalSupply()": {
								"returns": {
									"_0": "total supply of tokens"
								}
							},
							"transfer(address,uint256)": {
								"details": "_transfer emits a {Transfer} event",
								"params": {
									"amount": "tokens amount to transfer",
									"to": "recipient address"
								},
								"returns": {
									"_0": "A maybe successful ~ boolean value "
								}
							},
							"transferFrom(address,address,uint256)": {
								"details": "_transfer emits a {Transfer} event",
								"params": {
									"amount": "tokens amount to transfer",
									"from": "msg sender address",
									"to": "recipient address"
								},
								"returns": {
									"_0": "A ~succesful boolean value"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"JERC20.sol\":2379:9549  contract MyToken is IJERC20 {... */\n  mstore(0x40, 0x80)\n    /* \"JERC20.sol\":2777:2925  constructor(string memory name_, string memory symbol_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"JERC20.sol\":2848:2853  name_ */\n  dup2\n    /* \"JERC20.sol\":2840:2845  _name */\n  0x03\n    /* \"JERC20.sol\":2840:2853  _name = name_ */\n  swap1\n  dup2\n  tag_6\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"JERC20.sol\":2870:2877  symbol_ */\n  dup1\n    /* \"JERC20.sol\":2860:2867  _symbol */\n  0x04\n    /* \"JERC20.sol\":2860:2877  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_8\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \"JERC20.sol\":2884:2921  _mint(msg.sender, 1000000 * 10 ** 18) */\n  tag_9\n    /* \"JERC20.sol\":2890:2900  msg.sender */\n  caller\n    /* \"JERC20.sol\":2902:2920  1000000 * 10 ** 18 */\n  0xd3c21bcecceda1000000\n    /* \"JERC20.sol\":2884:2889  _mint */\n  shl(0x20, tag_10)\n    /* \"JERC20.sol\":2884:2921  _mint(msg.sender, 1000000 * 10 ** 18) */\n  0x20\n  shr\n  jump\t// in\ntag_9:\n    /* \"JERC20.sol\":2777:2925  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"JERC20.sol\":2379:9549  contract MyToken is IJERC20 {... */\n  jump(tag_11)\n    /* \"JERC20.sol\":7810:8225  function _mint(address account, uint256 amount) internal virtual {... */\ntag_10:\n    /* \"JERC20.sol\":7913:7914  0 */\n  0x00\n    /* \"JERC20.sol\":7894:7915  account != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"JERC20.sol\":7894:7901  account */\n  dup3\n    /* \"JERC20.sol\":7894:7915  account != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"JERC20.sol\":7886:7941  require(account != address(0), \"mint to the 0 address\") */\n  tag_13\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_14\n  swap1\n  tag_15\n  jump\t// in\ntag_14:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_13:\n    /* \"JERC20.sol\":7970:7976  amount */\n  dup1\n    /* \"JERC20.sol\":7954:7966  _totalSupply */\n  0x02\n  0x00\n    /* \"JERC20.sol\":7954:7976  _totalSupply += amount */\n  dup3\n  dup3\n  sload\n  tag_16\n  swap2\n  swap1\n  tag_17\n  jump\t// in\ntag_16:\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"JERC20.sol\":8147:8153  amount */\n  dup1\n    /* \"JERC20.sol\":8125:8134  _balances */\n  0x00\n    /* \"JERC20.sol\":8125:8143  _balances[account] */\n  dup1\n    /* \"JERC20.sol\":8135:8142  account */\n  dup5\n    /* \"JERC20.sol\":8125:8143  _balances[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"JERC20.sol\":8125:8153  _balances[account] += amount */\n  dup3\n  dup3\n  sload\n  add\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"JERC20.sol\":8201:8208  account */\n  dup2\n    /* \"JERC20.sol\":8180:8217  Transfer(address(0), account, amount) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"JERC20.sol\":8197:8198  0 */\n  0x00\n    /* \"JERC20.sol\":8180:8217  Transfer(address(0), account, amount) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"JERC20.sol\":8210:8216  amount */\n  dup4\n    /* \"JERC20.sol\":8180:8217  Transfer(address(0), account, amount) */\n  mload(0x40)\n  tag_18\n  swap2\n  swap1\n  tag_19\n  jump\t// in\ntag_18:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"JERC20.sol\":7810:8225  function _mint(address account, uint256 amount) internal virtual {... */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:82   */\ntag_20:\n    /* \"#utility.yul\":40:46   */\n  0x00\n    /* \"#utility.yul\":73:75   */\n  0x40\n    /* \"#utility.yul\":67:76   */\n  mload\n    /* \"#utility.yul\":57:76   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:82   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_21:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":211:328   */\ntag_22:\n    /* \"#utility.yul\":320:321   */\n  0x00\n    /* \"#utility.yul\":317:318   */\n  dup1\n    /* \"#utility.yul\":310:322   */\n  revert\n    /* \"#utility.yul\":334:451   */\ntag_23:\n    /* \"#utility.yul\":443:444   */\n  0x00\n    /* \"#utility.yul\":440:441   */\n  dup1\n    /* \"#utility.yul\":433:445   */\n  revert\n    /* \"#utility.yul\":457:574   */\ntag_24:\n    /* \"#utility.yul\":566:567   */\n  0x00\n    /* \"#utility.yul\":563:564   */\n  dup1\n    /* \"#utility.yul\":556:568   */\n  revert\n    /* \"#utility.yul\":580:682   */\ntag_25:\n    /* \"#utility.yul\":621:627   */\n  0x00\n    /* \"#utility.yul\":672:674   */\n  0x1f\n    /* \"#utility.yul\":668:675   */\n  not\n    /* \"#utility.yul\":663:665   */\n  0x1f\n    /* \"#utility.yul\":656:661   */\n  dup4\n    /* \"#utility.yul\":652:666   */\n  add\n    /* \"#utility.yul\":648:676   */\n  and\n    /* \"#utility.yul\":638:676   */\n  swap1\n  pop\n    /* \"#utility.yul\":580:682   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":688:868   */\ntag_26:\n    /* \"#utility.yul\":736:813   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":733:734   */\n  0x00\n    /* \"#utility.yul\":726:814   */\n  mstore\n    /* \"#utility.yul\":833:837   */\n  0x41\n    /* \"#utility.yul\":830:831   */\n  0x04\n    /* \"#utility.yul\":823:838   */\n  mstore\n    /* \"#utility.yul\":857:861   */\n  0x24\n    /* \"#utility.yul\":854:855   */\n  0x00\n    /* \"#utility.yul\":847:862   */\n  revert\n    /* \"#utility.yul\":874:1155   */\ntag_27:\n    /* \"#utility.yul\":957:984   */\n  tag_66\n    /* \"#utility.yul\":979:983   */\n  dup3\n    /* \"#utility.yul\":957:984   */\n  tag_25\n  jump\t// in\ntag_66:\n    /* \"#utility.yul\":949:955   */\n  dup2\n    /* \"#utility.yul\":945:985   */\n  add\n    /* \"#utility.yul\":1087:1093   */\n  dup2\n    /* \"#utility.yul\":1075:1085   */\n  dup2\n    /* \"#utility.yul\":1072:1094   */\n  lt\n    /* \"#utility.yul\":1051:1069   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1039:1049   */\n  dup3\n    /* \"#utility.yul\":1036:1070   */\n  gt\n    /* \"#utility.yul\":1033:1095   */\n  or\n    /* \"#utility.yul\":1030:1118   */\n  iszero\n  tag_67\n  jumpi\n    /* \"#utility.yul\":1098:1116   */\n  tag_68\n  tag_26\n  jump\t// in\ntag_68:\n    /* \"#utility.yul\":1030:1118   */\ntag_67:\n    /* \"#utility.yul\":1138:1148   */\n  dup1\n    /* \"#utility.yul\":1134:1136   */\n  0x40\n    /* \"#utility.yul\":1127:1149   */\n  mstore\n    /* \"#utility.yul\":917:1155   */\n  pop\n    /* \"#utility.yul\":874:1155   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1161:1290   */\ntag_28:\n    /* \"#utility.yul\":1195:1201   */\n  0x00\n    /* \"#utility.yul\":1222:1242   */\n  tag_70\n  tag_20\n  jump\t// in\ntag_70:\n    /* \"#utility.yul\":1212:1242   */\n  swap1\n  pop\n    /* \"#utility.yul\":1251:1284   */\n  tag_71\n    /* \"#utility.yul\":1279:1283   */\n  dup3\n    /* \"#utility.yul\":1271:1277   */\n  dup3\n    /* \"#utility.yul\":1251:1284   */\n  tag_27\n  jump\t// in\ntag_71:\n    /* \"#utility.yul\":1161:1290   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1296:1604   */\ntag_29:\n    /* \"#utility.yul\":1358:1362   */\n  0x00\n    /* \"#utility.yul\":1448:1466   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1440:1446   */\n  dup3\n    /* \"#utility.yul\":1437:1467   */\n  gt\n    /* \"#utility.yul\":1434:1490   */\n  iszero\n  tag_73\n  jumpi\n    /* \"#utility.yul\":1470:1488   */\n  tag_74\n  tag_26\n  jump\t// in\ntag_74:\n    /* \"#utility.yul\":1434:1490   */\ntag_73:\n    /* \"#utility.yul\":1508:1537   */\n  tag_75\n    /* \"#utility.yul\":1530:1536   */\n  dup3\n    /* \"#utility.yul\":1508:1537   */\n  tag_25\n  jump\t// in\ntag_75:\n    /* \"#utility.yul\":1500:1537   */\n  swap1\n  pop\n    /* \"#utility.yul\":1592:1596   */\n  0x20\n    /* \"#utility.yul\":1586:1590   */\n  dup2\n    /* \"#utility.yul\":1582:1597   */\n  add\n    /* \"#utility.yul\":1574:1597   */\n  swap1\n  pop\n    /* \"#utility.yul\":1296:1604   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1610:1749   */\ntag_30:\n    /* \"#utility.yul\":1699:1705   */\n  dup3\n    /* \"#utility.yul\":1694:1697   */\n  dup2\n    /* \"#utility.yul\":1689:1692   */\n  dup4\n    /* \"#utility.yul\":1683:1706   */\n  mcopy\n    /* \"#utility.yul\":1740:1741   */\n  0x00\n    /* \"#utility.yul\":1731:1737   */\n  dup4\n    /* \"#utility.yul\":1726:1729   */\n  dup4\n    /* \"#utility.yul\":1722:1738   */\n  add\n    /* \"#utility.yul\":1715:1742   */\n  mstore\n    /* \"#utility.yul\":1610:1749   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1755:2189   */\ntag_31:\n    /* \"#utility.yul\":1844:1849   */\n  0x00\n    /* \"#utility.yul\":1869:1935   */\n  tag_78\n    /* \"#utility.yul\":1885:1934   */\n  tag_79\n    /* \"#utility.yul\":1927:1933   */\n  dup5\n    /* \"#utility.yul\":1885:1934   */\n  tag_29\n  jump\t// in\ntag_79:\n    /* \"#utility.yul\":1869:1935   */\n  tag_28\n  jump\t// in\ntag_78:\n    /* \"#utility.yul\":1860:1935   */\n  swap1\n  pop\n    /* \"#utility.yul\":1958:1964   */\n  dup3\n    /* \"#utility.yul\":1951:1956   */\n  dup2\n    /* \"#utility.yul\":1944:1965   */\n  mstore\n    /* \"#utility.yul\":1996:2000   */\n  0x20\n    /* \"#utility.yul\":1989:1994   */\n  dup2\n    /* \"#utility.yul\":1985:2001   */\n  add\n    /* \"#utility.yul\":2034:2037   */\n  dup5\n    /* \"#utility.yul\":2025:2031   */\n  dup5\n    /* \"#utility.yul\":2020:2023   */\n  dup5\n    /* \"#utility.yul\":2016:2032   */\n  add\n    /* \"#utility.yul\":2013:2038   */\n  gt\n    /* \"#utility.yul\":2010:2122   */\n  iszero\n  tag_80\n  jumpi\n    /* \"#utility.yul\":2041:2120   */\n  tag_81\n  tag_24\n  jump\t// in\ntag_81:\n    /* \"#utility.yul\":2010:2122   */\ntag_80:\n    /* \"#utility.yul\":2131:2183   */\n  tag_82\n    /* \"#utility.yul\":2176:2182   */\n  dup5\n    /* \"#utility.yul\":2171:2174   */\n  dup3\n    /* \"#utility.yul\":2166:2169   */\n  dup6\n    /* \"#utility.yul\":2131:2183   */\n  tag_30\n  jump\t// in\ntag_82:\n    /* \"#utility.yul\":1850:2189   */\n  pop\n    /* \"#utility.yul\":1755:2189   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2209:2564   */\ntag_32:\n    /* \"#utility.yul\":2276:2281   */\n  0x00\n    /* \"#utility.yul\":2325:2328   */\n  dup3\n    /* \"#utility.yul\":2318:2322   */\n  0x1f\n    /* \"#utility.yul\":2310:2316   */\n  dup4\n    /* \"#utility.yul\":2306:2323   */\n  add\n    /* \"#utility.yul\":2302:2329   */\n  slt\n    /* \"#utility.yul\":2292:2414   */\n  tag_84\n  jumpi\n    /* \"#utility.yul\":2333:2412   */\n  tag_85\n  tag_23\n  jump\t// in\ntag_85:\n    /* \"#utility.yul\":2292:2414   */\ntag_84:\n    /* \"#utility.yul\":2443:2449   */\n  dup2\n    /* \"#utility.yul\":2437:2450   */\n  mload\n    /* \"#utility.yul\":2468:2558   */\n  tag_86\n    /* \"#utility.yul\":2554:2557   */\n  dup5\n    /* \"#utility.yul\":2546:2552   */\n  dup3\n    /* \"#utility.yul\":2539:2543   */\n  0x20\n    /* \"#utility.yul\":2531:2537   */\n  dup7\n    /* \"#utility.yul\":2527:2544   */\n  add\n    /* \"#utility.yul\":2468:2558   */\n  tag_31\n  jump\t// in\ntag_86:\n    /* \"#utility.yul\":2459:2558   */\n  swap2\n  pop\n    /* \"#utility.yul\":2282:2564   */\n  pop\n    /* \"#utility.yul\":2209:2564   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2570:3423   */\ntag_3:\n    /* \"#utility.yul\":2669:2675   */\n  0x00\n    /* \"#utility.yul\":2677:2683   */\n  dup1\n    /* \"#utility.yul\":2726:2728   */\n  0x40\n    /* \"#utility.yul\":2714:2723   */\n  dup4\n    /* \"#utility.yul\":2705:2712   */\n  dup6\n    /* \"#utility.yul\":2701:2724   */\n  sub\n    /* \"#utility.yul\":2697:2729   */\n  slt\n    /* \"#utility.yul\":2694:2813   */\n  iszero\n  tag_88\n  jumpi\n    /* \"#utility.yul\":2732:2811   */\n  tag_89\n  tag_21\n  jump\t// in\ntag_89:\n    /* \"#utility.yul\":2694:2813   */\ntag_88:\n    /* \"#utility.yul\":2873:2874   */\n  0x00\n    /* \"#utility.yul\":2862:2871   */\n  dup4\n    /* \"#utility.yul\":2858:2875   */\n  add\n    /* \"#utility.yul\":2852:2876   */\n  mload\n    /* \"#utility.yul\":2903:2921   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":2895:2901   */\n  dup2\n    /* \"#utility.yul\":2892:2922   */\n  gt\n    /* \"#utility.yul\":2889:3006   */\n  iszero\n  tag_90\n  jumpi\n    /* \"#utility.yul\":2925:3004   */\n  tag_91\n  tag_22\n  jump\t// in\ntag_91:\n    /* \"#utility.yul\":2889:3006   */\ntag_90:\n    /* \"#utility.yul\":3030:3104   */\n  tag_92\n    /* \"#utility.yul\":3096:3103   */\n  dup6\n    /* \"#utility.yul\":3087:3093   */\n  dup3\n    /* \"#utility.yul\":3076:3085   */\n  dup7\n    /* \"#utility.yul\":3072:3094   */\n  add\n    /* \"#utility.yul\":3030:3104   */\n  tag_32\n  jump\t// in\ntag_92:\n    /* \"#utility.yul\":3020:3104   */\n  swap3\n  pop\n    /* \"#utility.yul\":2823:3114   */\n  pop\n    /* \"#utility.yul\":3174:3176   */\n  0x20\n    /* \"#utility.yul\":3163:3172   */\n  dup4\n    /* \"#utility.yul\":3159:3177   */\n  add\n    /* \"#utility.yul\":3153:3178   */\n  mload\n    /* \"#utility.yul\":3205:3223   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3197:3203   */\n  dup2\n    /* \"#utility.yul\":3194:3224   */\n  gt\n    /* \"#utility.yul\":3191:3308   */\n  iszero\n  tag_93\n  jumpi\n    /* \"#utility.yul\":3227:3306   */\n  tag_94\n  tag_22\n  jump\t// in\ntag_94:\n    /* \"#utility.yul\":3191:3308   */\ntag_93:\n    /* \"#utility.yul\":3332:3406   */\n  tag_95\n    /* \"#utility.yul\":3398:3405   */\n  dup6\n    /* \"#utility.yul\":3389:3395   */\n  dup3\n    /* \"#utility.yul\":3378:3387   */\n  dup7\n    /* \"#utility.yul\":3374:3396   */\n  add\n    /* \"#utility.yul\":3332:3406   */\n  tag_32\n  jump\t// in\ntag_95:\n    /* \"#utility.yul\":3322:3406   */\n  swap2\n  pop\n    /* \"#utility.yul\":3124:3416   */\n  pop\n    /* \"#utility.yul\":2570:3423   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3429:3528   */\ntag_33:\n    /* \"#utility.yul\":3481:3487   */\n  0x00\n    /* \"#utility.yul\":3515:3520   */\n  dup2\n    /* \"#utility.yul\":3509:3521   */\n  mload\n    /* \"#utility.yul\":3499:3521   */\n  swap1\n  pop\n    /* \"#utility.yul\":3429:3528   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3534:3714   */\ntag_34:\n    /* \"#utility.yul\":3582:3659   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":3579:3580   */\n  0x00\n    /* \"#utility.yul\":3572:3660   */\n  mstore\n    /* \"#utility.yul\":3679:3683   */\n  0x22\n    /* \"#utility.yul\":3676:3677   */\n  0x04\n    /* \"#utility.yul\":3669:3684   */\n  mstore\n    /* \"#utility.yul\":3703:3707   */\n  0x24\n    /* \"#utility.yul\":3700:3701   */\n  0x00\n    /* \"#utility.yul\":3693:3708   */\n  revert\n    /* \"#utility.yul\":3720:4040   */\ntag_35:\n    /* \"#utility.yul\":3764:3770   */\n  0x00\n    /* \"#utility.yul\":3801:3802   */\n  0x02\n    /* \"#utility.yul\":3795:3799   */\n  dup3\n    /* \"#utility.yul\":3791:3803   */\n  div\n    /* \"#utility.yul\":3781:3803   */\n  swap1\n  pop\n    /* \"#utility.yul\":3848:3849   */\n  0x01\n    /* \"#utility.yul\":3842:3846   */\n  dup3\n    /* \"#utility.yul\":3838:3850   */\n  and\n    /* \"#utility.yul\":3869:3887   */\n  dup1\n    /* \"#utility.yul\":3859:3940   */\n  tag_99\n  jumpi\n    /* \"#utility.yul\":3925:3929   */\n  0x7f\n    /* \"#utility.yul\":3917:3923   */\n  dup3\n    /* \"#utility.yul\":3913:3930   */\n  and\n    /* \"#utility.yul\":3903:3930   */\n  swap2\n  pop\n    /* \"#utility.yul\":3859:3940   */\ntag_99:\n    /* \"#utility.yul\":3987:3989   */\n  0x20\n    /* \"#utility.yul\":3979:3985   */\n  dup3\n    /* \"#utility.yul\":3976:3990   */\n  lt\n    /* \"#utility.yul\":3956:3974   */\n  dup2\n    /* \"#utility.yul\":3953:3991   */\n  sub\n    /* \"#utility.yul\":3950:4034   */\n  tag_100\n  jumpi\n    /* \"#utility.yul\":4006:4024   */\n  tag_101\n  tag_34\n  jump\t// in\ntag_101:\n    /* \"#utility.yul\":3950:4034   */\ntag_100:\n    /* \"#utility.yul\":3771:4040   */\n  pop\n    /* \"#utility.yul\":3720:4040   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4046:4187   */\ntag_36:\n    /* \"#utility.yul\":4095:4099   */\n  0x00\n    /* \"#utility.yul\":4118:4121   */\n  dup2\n    /* \"#utility.yul\":4110:4121   */\n  swap1\n  pop\n    /* \"#utility.yul\":4141:4144   */\n  dup2\n    /* \"#utility.yul\":4138:4139   */\n  0x00\n    /* \"#utility.yul\":4131:4145   */\n  mstore\n    /* \"#utility.yul\":4175:4179   */\n  0x20\n    /* \"#utility.yul\":4172:4173   */\n  0x00\n    /* \"#utility.yul\":4162:4180   */\n  keccak256\n    /* \"#utility.yul\":4154:4180   */\n  swap1\n  pop\n    /* \"#utility.yul\":4046:4187   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4193:4286   */\ntag_37:\n    /* \"#utility.yul\":4230:4236   */\n  0x00\n    /* \"#utility.yul\":4277:4279   */\n  0x20\n    /* \"#utility.yul\":4272:4274   */\n  0x1f\n    /* \"#utility.yul\":4265:4270   */\n  dup4\n    /* \"#utility.yul\":4261:4275   */\n  add\n    /* \"#utility.yul\":4257:4280   */\n  div\n    /* \"#utility.yul\":4247:4280   */\n  swap1\n  pop\n    /* \"#utility.yul\":4193:4286   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4292:4399   */\ntag_38:\n    /* \"#utility.yul\":4336:4344   */\n  0x00\n    /* \"#utility.yul\":4386:4391   */\n  dup3\n    /* \"#utility.yul\":4380:4384   */\n  dup3\n    /* \"#utility.yul\":4376:4392   */\n  shl\n    /* \"#utility.yul\":4355:4392   */\n  swap1\n  pop\n    /* \"#utility.yul\":4292:4399   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4405:4798   */\ntag_39:\n    /* \"#utility.yul\":4474:4480   */\n  0x00\n    /* \"#utility.yul\":4524:4525   */\n  0x08\n    /* \"#utility.yul\":4512:4522   */\n  dup4\n    /* \"#utility.yul\":4508:4526   */\n  mul\n    /* \"#utility.yul\":4547:4644   */\n  tag_106\n    /* \"#utility.yul\":4577:4643   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":4566:4575   */\n  dup3\n    /* \"#utility.yul\":4547:4644   */\n  tag_38\n  jump\t// in\ntag_106:\n    /* \"#utility.yul\":4665:4704   */\n  tag_107\n    /* \"#utility.yul\":4695:4703   */\n  dup7\n    /* \"#utility.yul\":4684:4693   */\n  dup4\n    /* \"#utility.yul\":4665:4704   */\n  tag_38\n  jump\t// in\ntag_107:\n    /* \"#utility.yul\":4653:4704   */\n  swap6\n  pop\n    /* \"#utility.yul\":4737:4741   */\n  dup1\n    /* \"#utility.yul\":4733:4742   */\n  not\n    /* \"#utility.yul\":4726:4731   */\n  dup5\n    /* \"#utility.yul\":4722:4743   */\n  and\n    /* \"#utility.yul\":4713:4743   */\n  swap4\n  pop\n    /* \"#utility.yul\":4786:4790   */\n  dup1\n    /* \"#utility.yul\":4776:4784   */\n  dup7\n    /* \"#utility.yul\":4772:4791   */\n  and\n    /* \"#utility.yul\":4765:4770   */\n  dup5\n    /* \"#utility.yul\":4762:4792   */\n  or\n    /* \"#utility.yul\":4752:4792   */\n  swap3\n  pop\n    /* \"#utility.yul\":4481:4798   */\n  pop\n  pop\n    /* \"#utility.yul\":4405:4798   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4804:4881   */\ntag_40:\n    /* \"#utility.yul\":4841:4848   */\n  0x00\n    /* \"#utility.yul\":4870:4875   */\n  dup2\n    /* \"#utility.yul\":4859:4875   */\n  swap1\n  pop\n    /* \"#utility.yul\":4804:4881   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4887:4947   */\ntag_41:\n    /* \"#utility.yul\":4915:4918   */\n  0x00\n    /* \"#utility.yul\":4936:4941   */\n  dup2\n    /* \"#utility.yul\":4929:4941   */\n  swap1\n  pop\n    /* \"#utility.yul\":4887:4947   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4953:5095   */\ntag_42:\n    /* \"#utility.yul\":5003:5012   */\n  0x00\n    /* \"#utility.yul\":5036:5089   */\n  tag_111\n    /* \"#utility.yul\":5054:5088   */\n  tag_112\n    /* \"#utility.yul\":5063:5087   */\n  tag_113\n    /* \"#utility.yul\":5081:5086   */\n  dup5\n    /* \"#utility.yul\":5063:5087   */\n  tag_40\n  jump\t// in\ntag_113:\n    /* \"#utility.yul\":5054:5088   */\n  tag_41\n  jump\t// in\ntag_112:\n    /* \"#utility.yul\":5036:5089   */\n  tag_40\n  jump\t// in\ntag_111:\n    /* \"#utility.yul\":5023:5089   */\n  swap1\n  pop\n    /* \"#utility.yul\":4953:5095   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5101:5176   */\ntag_43:\n    /* \"#utility.yul\":5144:5147   */\n  0x00\n    /* \"#utility.yul\":5165:5170   */\n  dup2\n    /* \"#utility.yul\":5158:5170   */\n  swap1\n  pop\n    /* \"#utility.yul\":5101:5176   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5182:5451   */\ntag_44:\n    /* \"#utility.yul\":5292:5331   */\n  tag_116\n    /* \"#utility.yul\":5323:5330   */\n  dup4\n    /* \"#utility.yul\":5292:5331   */\n  tag_42\n  jump\t// in\ntag_116:\n    /* \"#utility.yul\":5353:5444   */\n  tag_117\n    /* \"#utility.yul\":5402:5443   */\n  tag_118\n    /* \"#utility.yul\":5426:5442   */\n  dup3\n    /* \"#utility.yul\":5402:5443   */\n  tag_43\n  jump\t// in\ntag_118:\n    /* \"#utility.yul\":5394:5400   */\n  dup5\n    /* \"#utility.yul\":5387:5391   */\n  dup5\n    /* \"#utility.yul\":5381:5392   */\n  sload\n    /* \"#utility.yul\":5353:5444   */\n  tag_39\n  jump\t// in\ntag_117:\n    /* \"#utility.yul\":5347:5351   */\n  dup3\n    /* \"#utility.yul\":5340:5445   */\n  sstore\n    /* \"#utility.yul\":5258:5451   */\n  pop\n    /* \"#utility.yul\":5182:5451   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5457:5530   */\ntag_45:\n    /* \"#utility.yul\":5502:5505   */\n  0x00\n    /* \"#utility.yul\":5457:5530   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":5536:5725   */\ntag_46:\n    /* \"#utility.yul\":5613:5645   */\n  tag_121\n  tag_45\n  jump\t// in\ntag_121:\n    /* \"#utility.yul\":5654:5719   */\n  tag_122\n    /* \"#utility.yul\":5712:5718   */\n  dup2\n    /* \"#utility.yul\":5704:5710   */\n  dup5\n    /* \"#utility.yul\":5698:5702   */\n  dup5\n    /* \"#utility.yul\":5654:5719   */\n  tag_44\n  jump\t// in\ntag_122:\n    /* \"#utility.yul\":5589:5725   */\n  pop\n    /* \"#utility.yul\":5536:5725   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5731:5917   */\ntag_47:\n    /* \"#utility.yul\":5791:5911   */\ntag_124:\n    /* \"#utility.yul\":5808:5811   */\n  dup2\n    /* \"#utility.yul\":5801:5806   */\n  dup2\n    /* \"#utility.yul\":5798:5812   */\n  lt\n    /* \"#utility.yul\":5791:5911   */\n  iszero\n  tag_126\n  jumpi\n    /* \"#utility.yul\":5862:5901   */\n  tag_127\n    /* \"#utility.yul\":5899:5900   */\n  0x00\n    /* \"#utility.yul\":5892:5897   */\n  dup3\n    /* \"#utility.yul\":5862:5901   */\n  tag_46\n  jump\t// in\ntag_127:\n    /* \"#utility.yul\":5835:5836   */\n  0x01\n    /* \"#utility.yul\":5828:5833   */\n  dup2\n    /* \"#utility.yul\":5824:5837   */\n  add\n    /* \"#utility.yul\":5815:5837   */\n  swap1\n  pop\n    /* \"#utility.yul\":5791:5911   */\n  jump(tag_124)\ntag_126:\n    /* \"#utility.yul\":5731:5917   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5923:6466   */\ntag_48:\n    /* \"#utility.yul\":6024:6026   */\n  0x1f\n    /* \"#utility.yul\":6019:6022   */\n  dup3\n    /* \"#utility.yul\":6016:6027   */\n  gt\n    /* \"#utility.yul\":6013:6459   */\n  iszero\n  tag_129\n  jumpi\n    /* \"#utility.yul\":6058:6096   */\n  tag_130\n    /* \"#utility.yul\":6090:6095   */\n  dup2\n    /* \"#utility.yul\":6058:6096   */\n  tag_36\n  jump\t// in\ntag_130:\n    /* \"#utility.yul\":6142:6171   */\n  tag_131\n    /* \"#utility.yul\":6160:6170   */\n  dup5\n    /* \"#utility.yul\":6142:6171   */\n  tag_37\n  jump\t// in\ntag_131:\n    /* \"#utility.yul\":6132:6140   */\n  dup2\n    /* \"#utility.yul\":6128:6172   */\n  add\n    /* \"#utility.yul\":6325:6327   */\n  0x20\n    /* \"#utility.yul\":6313:6323   */\n  dup6\n    /* \"#utility.yul\":6310:6328   */\n  lt\n    /* \"#utility.yul\":6307:6356   */\n  iszero\n  tag_132\n  jumpi\n    /* \"#utility.yul\":6346:6354   */\n  dup2\n    /* \"#utility.yul\":6331:6354   */\n  swap1\n  pop\n    /* \"#utility.yul\":6307:6356   */\ntag_132:\n    /* \"#utility.yul\":6369:6449   */\n  tag_133\n    /* \"#utility.yul\":6425:6447   */\n  tag_134\n    /* \"#utility.yul\":6443:6446   */\n  dup6\n    /* \"#utility.yul\":6425:6447   */\n  tag_37\n  jump\t// in\ntag_134:\n    /* \"#utility.yul\":6415:6423   */\n  dup4\n    /* \"#utility.yul\":6411:6448   */\n  add\n    /* \"#utility.yul\":6398:6409   */\n  dup3\n    /* \"#utility.yul\":6369:6449   */\n  tag_47\n  jump\t// in\ntag_133:\n    /* \"#utility.yul\":6028:6459   */\n  pop\n  pop\n    /* \"#utility.yul\":6013:6459   */\ntag_129:\n    /* \"#utility.yul\":5923:6466   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6472:6589   */\ntag_49:\n    /* \"#utility.yul\":6526:6534   */\n  0x00\n    /* \"#utility.yul\":6576:6581   */\n  dup3\n    /* \"#utility.yul\":6570:6574   */\n  dup3\n    /* \"#utility.yul\":6566:6582   */\n  shr\n    /* \"#utility.yul\":6545:6582   */\n  swap1\n  pop\n    /* \"#utility.yul\":6472:6589   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6595:6764   */\ntag_50:\n    /* \"#utility.yul\":6639:6645   */\n  0x00\n    /* \"#utility.yul\":6672:6723   */\n  tag_137\n    /* \"#utility.yul\":6720:6721   */\n  0x00\n    /* \"#utility.yul\":6716:6722   */\n  not\n    /* \"#utility.yul\":6708:6713   */\n  dup5\n    /* \"#utility.yul\":6705:6706   */\n  0x08\n    /* \"#utility.yul\":6701:6714   */\n  mul\n    /* \"#utility.yul\":6672:6723   */\n  tag_49\n  jump\t// in\ntag_137:\n    /* \"#utility.yul\":6668:6724   */\n  not\n    /* \"#utility.yul\":6753:6757   */\n  dup1\n    /* \"#utility.yul\":6747:6751   */\n  dup4\n    /* \"#utility.yul\":6743:6758   */\n  and\n    /* \"#utility.yul\":6733:6758   */\n  swap2\n  pop\n    /* \"#utility.yul\":6646:6764   */\n  pop\n    /* \"#utility.yul\":6595:6764   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6769:7064   */\ntag_51:\n    /* \"#utility.yul\":6845:6849   */\n  0x00\n    /* \"#utility.yul\":6991:7020   */\n  tag_139\n    /* \"#utility.yul\":7016:7019   */\n  dup4\n    /* \"#utility.yul\":7010:7014   */\n  dup4\n    /* \"#utility.yul\":6991:7020   */\n  tag_50\n  jump\t// in\ntag_139:\n    /* \"#utility.yul\":6983:7020   */\n  swap2\n  pop\n    /* \"#utility.yul\":7053:7056   */\n  dup3\n    /* \"#utility.yul\":7050:7051   */\n  0x02\n    /* \"#utility.yul\":7046:7057   */\n  mul\n    /* \"#utility.yul\":7040:7044   */\n  dup3\n    /* \"#utility.yul\":7037:7058   */\n  or\n    /* \"#utility.yul\":7029:7058   */\n  swap1\n  pop\n    /* \"#utility.yul\":6769:7064   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7069:8464   */\ntag_7:\n    /* \"#utility.yul\":7186:7223   */\n  tag_141\n    /* \"#utility.yul\":7219:7222   */\n  dup3\n    /* \"#utility.yul\":7186:7223   */\n  tag_33\n  jump\t// in\ntag_141:\n    /* \"#utility.yul\":7288:7306   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":7280:7286   */\n  dup2\n    /* \"#utility.yul\":7277:7307   */\n  gt\n    /* \"#utility.yul\":7274:7330   */\n  iszero\n  tag_142\n  jumpi\n    /* \"#utility.yul\":7310:7328   */\n  tag_143\n  tag_26\n  jump\t// in\ntag_143:\n    /* \"#utility.yul\":7274:7330   */\ntag_142:\n    /* \"#utility.yul\":7354:7392   */\n  tag_144\n    /* \"#utility.yul\":7386:7390   */\n  dup3\n    /* \"#utility.yul\":7380:7391   */\n  sload\n    /* \"#utility.yul\":7354:7392   */\n  tag_35\n  jump\t// in\ntag_144:\n    /* \"#utility.yul\":7439:7506   */\n  tag_145\n    /* \"#utility.yul\":7499:7505   */\n  dup3\n    /* \"#utility.yul\":7491:7497   */\n  dup3\n    /* \"#utility.yul\":7485:7489   */\n  dup6\n    /* \"#utility.yul\":7439:7506   */\n  tag_48\n  jump\t// in\ntag_145:\n    /* \"#utility.yul\":7533:7534   */\n  0x00\n    /* \"#utility.yul\":7557:7561   */\n  0x20\n    /* \"#utility.yul\":7544:7561   */\n  swap1\n  pop\n    /* \"#utility.yul\":7589:7591   */\n  0x1f\n    /* \"#utility.yul\":7581:7587   */\n  dup4\n    /* \"#utility.yul\":7578:7592   */\n  gt\n    /* \"#utility.yul\":7606:7607   */\n  0x01\n    /* \"#utility.yul\":7601:8219   */\n  dup2\n  eq\n  tag_147\n  jumpi\n    /* \"#utility.yul\":8263:8264   */\n  0x00\n    /* \"#utility.yul\":8280:8286   */\n  dup5\n    /* \"#utility.yul\":8277:8354   */\n  iszero\n  tag_148\n  jumpi\n    /* \"#utility.yul\":8329:8338   */\n  dup3\n    /* \"#utility.yul\":8324:8327   */\n  dup8\n    /* \"#utility.yul\":8320:8339   */\n  add\n    /* \"#utility.yul\":8314:8340   */\n  mload\n    /* \"#utility.yul\":8305:8340   */\n  swap1\n  pop\n    /* \"#utility.yul\":8277:8354   */\ntag_148:\n    /* \"#utility.yul\":8380:8447   */\n  tag_149\n    /* \"#utility.yul\":8440:8446   */\n  dup6\n    /* \"#utility.yul\":8433:8438   */\n  dup3\n    /* \"#utility.yul\":8380:8447   */\n  tag_51\n  jump\t// in\ntag_149:\n    /* \"#utility.yul\":8374:8378   */\n  dup7\n    /* \"#utility.yul\":8367:8448   */\n  sstore\n    /* \"#utility.yul\":8236:8458   */\n  pop\n    /* \"#utility.yul\":7571:8458   */\n  jump(tag_146)\n    /* \"#utility.yul\":7601:8219   */\ntag_147:\n    /* \"#utility.yul\":7653:7657   */\n  0x1f\n    /* \"#utility.yul\":7649:7658   */\n  not\n    /* \"#utility.yul\":7641:7647   */\n  dup5\n    /* \"#utility.yul\":7637:7659   */\n  and\n    /* \"#utility.yul\":7687:7724   */\n  tag_150\n    /* \"#utility.yul\":7719:7723   */\n  dup7\n    /* \"#utility.yul\":7687:7724   */\n  tag_36\n  jump\t// in\ntag_150:\n    /* \"#utility.yul\":7746:7747   */\n  0x00\n    /* \"#utility.yul\":7760:7968   */\ntag_151:\n    /* \"#utility.yul\":7774:7781   */\n  dup3\n    /* \"#utility.yul\":7771:7772   */\n  dup2\n    /* \"#utility.yul\":7768:7782   */\n  lt\n    /* \"#utility.yul\":7760:7968   */\n  iszero\n  tag_153\n  jumpi\n    /* \"#utility.yul\":7853:7862   */\n  dup5\n    /* \"#utility.yul\":7848:7851   */\n  dup10\n    /* \"#utility.yul\":7844:7863   */\n  add\n    /* \"#utility.yul\":7838:7864   */\n  mload\n    /* \"#utility.yul\":7830:7836   */\n  dup3\n    /* \"#utility.yul\":7823:7865   */\n  sstore\n    /* \"#utility.yul\":7904:7905   */\n  0x01\n    /* \"#utility.yul\":7896:7902   */\n  dup3\n    /* \"#utility.yul\":7892:7906   */\n  add\n    /* \"#utility.yul\":7882:7906   */\n  swap2\n  pop\n    /* \"#utility.yul\":7951:7953   */\n  0x20\n    /* \"#utility.yul\":7940:7949   */\n  dup6\n    /* \"#utility.yul\":7936:7954   */\n  add\n    /* \"#utility.yul\":7923:7954   */\n  swap5\n  pop\n    /* \"#utility.yul\":7797:7801   */\n  0x20\n    /* \"#utility.yul\":7794:7795   */\n  dup2\n    /* \"#utility.yul\":7790:7802   */\n  add\n    /* \"#utility.yul\":7785:7802   */\n  swap1\n  pop\n    /* \"#utility.yul\":7760:7968   */\n  jump(tag_151)\ntag_153:\n    /* \"#utility.yul\":7996:8002   */\n  dup7\n    /* \"#utility.yul\":7987:7994   */\n  dup4\n    /* \"#utility.yul\":7984:8003   */\n  lt\n    /* \"#utility.yul\":7981:8160   */\n  iszero\n  tag_154\n  jumpi\n    /* \"#utility.yul\":8054:8063   */\n  dup5\n    /* \"#utility.yul\":8049:8052   */\n  dup10\n    /* \"#utility.yul\":8045:8064   */\n  add\n    /* \"#utility.yul\":8039:8065   */\n  mload\n    /* \"#utility.yul\":8097:8145   */\n  tag_155\n    /* \"#utility.yul\":8139:8143   */\n  0x1f\n    /* \"#utility.yul\":8131:8137   */\n  dup10\n    /* \"#utility.yul\":8127:8144   */\n  and\n    /* \"#utility.yul\":8116:8125   */\n  dup3\n    /* \"#utility.yul\":8097:8145   */\n  tag_50\n  jump\t// in\ntag_155:\n    /* \"#utility.yul\":8089:8095   */\n  dup4\n    /* \"#utility.yul\":8082:8146   */\n  sstore\n    /* \"#utility.yul\":8004:8160   */\n  pop\n    /* \"#utility.yul\":7981:8160   */\ntag_154:\n    /* \"#utility.yul\":8206:8207   */\n  0x01\n    /* \"#utility.yul\":8202:8203   */\n  0x02\n    /* \"#utility.yul\":8194:8200   */\n  dup9\n    /* \"#utility.yul\":8190:8204   */\n  mul\n    /* \"#utility.yul\":8186:8208   */\n  add\n    /* \"#utility.yul\":8180:8184   */\n  dup9\n    /* \"#utility.yul\":8173:8209   */\n  sstore\n    /* \"#utility.yul\":7608:8219   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":7571:8458   */\ntag_146:\n  pop\n    /* \"#utility.yul\":7161:8464   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":7069:8464   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8470:8639   */\ntag_52:\n    /* \"#utility.yul\":8554:8565   */\n  0x00\n    /* \"#utility.yul\":8588:8594   */\n  dup3\n    /* \"#utility.yul\":8583:8586   */\n  dup3\n    /* \"#utility.yul\":8576:8595   */\n  mstore\n    /* \"#utility.yul\":8628:8632   */\n  0x20\n    /* \"#utility.yul\":8623:8626   */\n  dup3\n    /* \"#utility.yul\":8619:8633   */\n  add\n    /* \"#utility.yul\":8604:8633   */\n  swap1\n  pop\n    /* \"#utility.yul\":8470:8639   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8645:8816   */\ntag_53:\n    /* \"#utility.yul\":8785:8808   */\n  0x6d696e7420746f20746865203020616464726573730000000000000000000000\n    /* \"#utility.yul\":8781:8782   */\n  0x00\n    /* \"#utility.yul\":8773:8779   */\n  dup3\n    /* \"#utility.yul\":8769:8783   */\n  add\n    /* \"#utility.yul\":8762:8809   */\n  mstore\n    /* \"#utility.yul\":8645:8816   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8822:9188   */\ntag_54:\n    /* \"#utility.yul\":8964:8967   */\n  0x00\n    /* \"#utility.yul\":8985:9052   */\n  tag_159\n    /* \"#utility.yul\":9049:9051   */\n  0x15\n    /* \"#utility.yul\":9044:9047   */\n  dup4\n    /* \"#utility.yul\":8985:9052   */\n  tag_52\n  jump\t// in\ntag_159:\n    /* \"#utility.yul\":8978:9052   */\n  swap2\n  pop\n    /* \"#utility.yul\":9061:9154   */\n  tag_160\n    /* \"#utility.yul\":9150:9153   */\n  dup3\n    /* \"#utility.yul\":9061:9154   */\n  tag_53\n  jump\t// in\ntag_160:\n    /* \"#utility.yul\":9179:9181   */\n  0x20\n    /* \"#utility.yul\":9174:9177   */\n  dup3\n    /* \"#utility.yul\":9170:9182   */\n  add\n    /* \"#utility.yul\":9163:9182   */\n  swap1\n  pop\n    /* \"#utility.yul\":8822:9188   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9194:9613   */\ntag_15:\n    /* \"#utility.yul\":9360:9364   */\n  0x00\n    /* \"#utility.yul\":9398:9400   */\n  0x20\n    /* \"#utility.yul\":9387:9396   */\n  dup3\n    /* \"#utility.yul\":9383:9401   */\n  add\n    /* \"#utility.yul\":9375:9401   */\n  swap1\n  pop\n    /* \"#utility.yul\":9447:9456   */\n  dup2\n    /* \"#utility.yul\":9441:9445   */\n  dup2\n    /* \"#utility.yul\":9437:9457   */\n  sub\n    /* \"#utility.yul\":9433:9434   */\n  0x00\n    /* \"#utility.yul\":9422:9431   */\n  dup4\n    /* \"#utility.yul\":9418:9435   */\n  add\n    /* \"#utility.yul\":9411:9458   */\n  mstore\n    /* \"#utility.yul\":9475:9606   */\n  tag_162\n    /* \"#utility.yul\":9601:9605   */\n  dup2\n    /* \"#utility.yul\":9475:9606   */\n  tag_54\n  jump\t// in\ntag_162:\n    /* \"#utility.yul\":9467:9606   */\n  swap1\n  pop\n    /* \"#utility.yul\":9194:9613   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9619:9799   */\ntag_55:\n    /* \"#utility.yul\":9667:9744   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":9664:9665   */\n  0x00\n    /* \"#utility.yul\":9657:9745   */\n  mstore\n    /* \"#utility.yul\":9764:9768   */\n  0x11\n    /* \"#utility.yul\":9761:9762   */\n  0x04\n    /* \"#utility.yul\":9754:9769   */\n  mstore\n    /* \"#utility.yul\":9788:9792   */\n  0x24\n    /* \"#utility.yul\":9785:9786   */\n  0x00\n    /* \"#utility.yul\":9778:9793   */\n  revert\n    /* \"#utility.yul\":9805:9996   */\ntag_17:\n    /* \"#utility.yul\":9845:9848   */\n  0x00\n    /* \"#utility.yul\":9864:9884   */\n  tag_165\n    /* \"#utility.yul\":9882:9883   */\n  dup3\n    /* \"#utility.yul\":9864:9884   */\n  tag_40\n  jump\t// in\ntag_165:\n    /* \"#utility.yul\":9859:9884   */\n  swap2\n  pop\n    /* \"#utility.yul\":9898:9918   */\n  tag_166\n    /* \"#utility.yul\":9916:9917   */\n  dup4\n    /* \"#utility.yul\":9898:9918   */\n  tag_40\n  jump\t// in\ntag_166:\n    /* \"#utility.yul\":9893:9918   */\n  swap3\n  pop\n    /* \"#utility.yul\":9941:9942   */\n  dup3\n    /* \"#utility.yul\":9938:9939   */\n  dup3\n    /* \"#utility.yul\":9934:9943   */\n  add\n    /* \"#utility.yul\":9927:9943   */\n  swap1\n  pop\n    /* \"#utility.yul\":9962:9965   */\n  dup1\n    /* \"#utility.yul\":9959:9960   */\n  dup3\n    /* \"#utility.yul\":9956:9966   */\n  gt\n    /* \"#utility.yul\":9953:9989   */\n  iszero\n  tag_167\n  jumpi\n    /* \"#utility.yul\":9969:9987   */\n  tag_168\n  tag_55\n  jump\t// in\ntag_168:\n    /* \"#utility.yul\":9953:9989   */\ntag_167:\n    /* \"#utility.yul\":9805:9996   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10002:10120   */\ntag_56:\n    /* \"#utility.yul\":10089:10113   */\n  tag_170\n    /* \"#utility.yul\":10107:10112   */\n  dup2\n    /* \"#utility.yul\":10089:10113   */\n  tag_40\n  jump\t// in\ntag_170:\n    /* \"#utility.yul\":10084:10087   */\n  dup3\n    /* \"#utility.yul\":10077:10114   */\n  mstore\n    /* \"#utility.yul\":10002:10120   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10126:10348   */\ntag_19:\n    /* \"#utility.yul\":10219:10223   */\n  0x00\n    /* \"#utility.yul\":10257:10259   */\n  0x20\n    /* \"#utility.yul\":10246:10255   */\n  dup3\n    /* \"#utility.yul\":10242:10260   */\n  add\n    /* \"#utility.yul\":10234:10260   */\n  swap1\n  pop\n    /* \"#utility.yul\":10270:10341   */\n  tag_172\n    /* \"#utility.yul\":10338:10339   */\n  0x00\n    /* \"#utility.yul\":10327:10336   */\n  dup4\n    /* \"#utility.yul\":10323:10340   */\n  add\n    /* \"#utility.yul\":10314:10320   */\n  dup5\n    /* \"#utility.yul\":10270:10341   */\n  tag_56\n  jump\t// in\ntag_172:\n    /* \"#utility.yul\":10126:10348   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"JERC20.sol\":2379:9549  contract MyToken is IJERC20 {... */\ntag_11:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"JERC20.sol\":2379:9549  contract MyToken is IJERC20 {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x313ce567\n      gt\n      tag_13\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_13:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x256fa241\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"JERC20.sol\":3014:3105  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_14\n      tag_15\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      tag_16\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"JERC20.sol\":5103:5302  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_4:\n      tag_18\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      tag_21\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"JERC20.sol\":3492:3600  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_5:\n      tag_24\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_26\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"JERC20.sol\":5701:5994  function transferFrom(... */\n    tag_6:\n      tag_28\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      tag_31\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      tag_32\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"JERC20.sol\":7323:7522  function distributeTokens(address[] memory recipients, uint256 amount) public {... */\n    tag_7:\n      tag_33\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      tag_36\n      jump\t// in\n    tag_33:\n      stop\n        /* \"JERC20.sol\":3343:3427  function decimals() public view virtual returns (uint8) {... */\n    tag_8:\n      tag_37\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      tag_39\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"JERC20.sol\":3757:3884  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_9:\n      tag_41\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_42\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n      tag_44\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      tag_45\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"JERC20.sol\":3197:3292  function symbol() public view virtual returns (string memory) {... */\n    tag_10:\n      tag_46\n      tag_47\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      tag_48\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"JERC20.sol\":4163:4354  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_11:\n      tag_49\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_50\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_50:\n      tag_51\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      tag_52\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"JERC20.sol\":4662:4813  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_12:\n      tag_53\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_54\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_54:\n      tag_56\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      tag_57\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"JERC20.sol\":3014:3105  function name() public view virtual returns (string memory) {... */\n    tag_15:\n        /* \"JERC20.sol\":3059:3072  string memory */\n      0x60\n        /* \"JERC20.sol\":3092:3097  _name */\n      0x03\n        /* \"JERC20.sol\":3085:3097  return _name */\n      dup1\n      sload\n      tag_59\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_61\n      swap1\n      tag_60\n      jump\t// in\n    tag_61:\n      dup1\n      iszero\n      tag_62\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_63\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_62)\n    tag_63:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_64:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_64\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_62:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"JERC20.sol\":3014:3105  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"JERC20.sol\":5103:5302  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_21:\n        /* \"JERC20.sol\":5186:5190  bool */\n      0x00\n        /* \"JERC20.sol\":5203:5216  address owner */\n      dup1\n        /* \"JERC20.sol\":5219:5229  msg.sender */\n      caller\n        /* \"JERC20.sol\":5203:5229  address owner = msg.sender */\n      swap1\n      pop\n        /* \"JERC20.sol\":5240:5272  _approve(owner, spender, amount) */\n      tag_66\n        /* \"JERC20.sol\":5249:5254  owner */\n      dup2\n        /* \"JERC20.sol\":5256:5263  spender */\n      dup6\n        /* \"JERC20.sol\":5265:5271  amount */\n      dup6\n        /* \"JERC20.sol\":5240:5248  _approve */\n      tag_67\n        /* \"JERC20.sol\":5240:5272  _approve(owner, spender, amount) */\n      jump\t// in\n    tag_66:\n        /* \"JERC20.sol\":5290:5294  true */\n      0x01\n        /* \"JERC20.sol\":5283:5294  return true */\n      swap2\n      pop\n      pop\n        /* \"JERC20.sol\":5103:5302  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"JERC20.sol\":3492:3600  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_25:\n        /* \"JERC20.sol\":3553:3560  uint256 */\n      0x00\n        /* \"JERC20.sol\":3580:3592  _totalSupply */\n      sload(0x02)\n        /* \"JERC20.sol\":3573:3592  return _totalSupply */\n      swap1\n      pop\n        /* \"JERC20.sol\":3492:3600  function totalSupply() public view virtual override returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"JERC20.sol\":5701:5994  function transferFrom(... */\n    tag_31:\n        /* \"JERC20.sol\":5832:5836  bool */\n      0x00\n        /* \"JERC20.sol\":5849:5864  address spender */\n      dup1\n        /* \"JERC20.sol\":5867:5877  msg.sender */\n      caller\n        /* \"JERC20.sol\":5849:5877  address spender = msg.sender */\n      swap1\n      pop\n        /* \"JERC20.sol\":5888:5926  _spendAllowance(from, spender, amount) */\n      tag_70\n        /* \"JERC20.sol\":5904:5908  from */\n      dup6\n        /* \"JERC20.sol\":5910:5917  spender */\n      dup3\n        /* \"JERC20.sol\":5919:5925  amount */\n      dup6\n        /* \"JERC20.sol\":5888:5903  _spendAllowance */\n      tag_71\n        /* \"JERC20.sol\":5888:5926  _spendAllowance(from, spender, amount) */\n      jump\t// in\n    tag_70:\n        /* \"JERC20.sol\":5937:5964  _transfer(from, to, amount) */\n      tag_72\n        /* \"JERC20.sol\":5947:5951  from */\n      dup6\n        /* \"JERC20.sol\":5953:5955  to */\n      dup6\n        /* \"JERC20.sol\":5957:5963  amount */\n      dup6\n        /* \"JERC20.sol\":5937:5946  _transfer */\n      tag_73\n        /* \"JERC20.sol\":5937:5964  _transfer(from, to, amount) */\n      jump\t// in\n    tag_72:\n        /* \"JERC20.sol\":5982:5986  true */\n      0x01\n        /* \"JERC20.sol\":5975:5986  return true */\n      swap2\n      pop\n      pop\n        /* \"JERC20.sol\":5701:5994  function transferFrom(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"JERC20.sol\":7323:7522  function distributeTokens(address[] memory recipients, uint256 amount) public {... */\n    tag_36:\n        /* \"JERC20.sol\":7417:7426  uint256 i */\n      0x00\n        /* \"JERC20.sol\":7412:7515  for (uint256 i = 0; i < recipients.length; i++) {... */\n    tag_75:\n        /* \"JERC20.sol\":7436:7446  recipients */\n      dup3\n        /* \"JERC20.sol\":7436:7453  recipients.length */\n      mload\n        /* \"JERC20.sol\":7432:7433  i */\n      dup2\n        /* \"JERC20.sol\":7432:7453  i < recipients.length */\n      lt\n        /* \"JERC20.sol\":7412:7515  for (uint256 i = 0; i < recipients.length; i++) {... */\n      iszero\n      tag_76\n      jumpi\n        /* \"JERC20.sol\":7475:7503  _mint(recipients[i], amount) */\n      tag_78\n        /* \"JERC20.sol\":7481:7491  recipients */\n      dup4\n        /* \"JERC20.sol\":7492:7493  i */\n      dup3\n        /* \"JERC20.sol\":7481:7494  recipients[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_79\n      jumpi\n      tag_80\n      tag_81\n      jump\t// in\n    tag_80:\n    tag_79:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"JERC20.sol\":7496:7502  amount */\n      dup4\n        /* \"JERC20.sol\":7475:7480  _mint */\n      tag_82\n        /* \"JERC20.sol\":7475:7503  _mint(recipients[i], amount) */\n      jump\t// in\n    tag_78:\n        /* \"JERC20.sol\":7455:7458  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"JERC20.sol\":7412:7515  for (uint256 i = 0; i < recipients.length; i++) {... */\n      jump(tag_75)\n    tag_76:\n      pop\n        /* \"JERC20.sol\":7323:7522  function distributeTokens(address[] memory recipients, uint256 amount) public {... */\n      pop\n      pop\n      jump\t// out\n        /* \"JERC20.sol\":3343:3427  function decimals() public view virtual returns (uint8) {... */\n    tag_38:\n        /* \"JERC20.sol\":3392:3397  uint8 */\n      0x00\n        /* \"JERC20.sol\":3417:3419  18 */\n      0x12\n        /* \"JERC20.sol\":3410:3419  return 18 */\n      swap1\n      pop\n        /* \"JERC20.sol\":3343:3427  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"JERC20.sol\":3757:3884  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_44:\n        /* \"JERC20.sol\":3831:3838  uint256 */\n      0x00\n        /* \"JERC20.sol\":3858:3867  _balances */\n      dup1\n        /* \"JERC20.sol\":3858:3876  _balances[account] */\n      0x00\n        /* \"JERC20.sol\":3868:3875  account */\n      dup4\n        /* \"JERC20.sol\":3858:3876  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"JERC20.sol\":3851:3876  return _balances[account] */\n      swap1\n      pop\n        /* \"JERC20.sol\":3757:3884  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"JERC20.sol\":3197:3292  function symbol() public view virtual returns (string memory) {... */\n    tag_47:\n        /* \"JERC20.sol\":3244:3257  string memory */\n      0x60\n        /* \"JERC20.sol\":3277:3284  _symbol */\n      0x04\n        /* \"JERC20.sol\":3270:3284  return _symbol */\n      dup1\n      sload\n      tag_86\n      swap1\n      tag_60\n      jump\t// in\n    tag_86:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_87\n      swap1\n      tag_60\n      jump\t// in\n    tag_87:\n      dup1\n      iszero\n      tag_88\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_89\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_88)\n    tag_89:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_90:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_90\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_88:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"JERC20.sol\":3197:3292  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"JERC20.sol\":4163:4354  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_51:\n        /* \"JERC20.sol\":4242:4246  bool */\n      0x00\n        /* \"JERC20.sol\":4259:4272  address owner */\n      dup1\n        /* \"JERC20.sol\":4275:4285  msg.sender */\n      caller\n        /* \"JERC20.sol\":4259:4285  address owner = msg.sender */\n      swap1\n      pop\n        /* \"JERC20.sol\":4296:4324  _transfer(owner, to, amount) */\n      tag_92\n        /* \"JERC20.sol\":4306:4311  owner */\n      dup2\n        /* \"JERC20.sol\":4313:4315  to */\n      dup6\n        /* \"JERC20.sol\":4317:4323  amount */\n      dup6\n        /* \"JERC20.sol\":4296:4305  _transfer */\n      tag_73\n        /* \"JERC20.sol\":4296:4324  _transfer(owner, to, amount) */\n      jump\t// in\n    tag_92:\n        /* \"JERC20.sol\":4342:4346  true */\n      0x01\n        /* \"JERC20.sol\":4335:4346  return true */\n      swap2\n      pop\n      pop\n        /* \"JERC20.sol\":4163:4354  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"JERC20.sol\":4662:4813  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_56:\n        /* \"JERC20.sol\":4751:4758  uint256 */\n      0x00\n        /* \"JERC20.sol\":4778:4789  _allowances */\n      0x01\n        /* \"JERC20.sol\":4778:4796  _allowances[owner] */\n      0x00\n        /* \"JERC20.sol\":4790:4795  owner */\n      dup5\n        /* \"JERC20.sol\":4778:4796  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"JERC20.sol\":4778:4805  _allowances[owner][spender] */\n      0x00\n        /* \"JERC20.sol\":4797:4804  spender */\n      dup4\n        /* \"JERC20.sol\":4778:4805  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"JERC20.sol\":4771:4805  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"JERC20.sol\":4662:4813  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"JERC20.sol\":8535:8895  function _approve(... */\n    tag_67:\n        /* \"JERC20.sol\":8688:8689  0 */\n      0x00\n        /* \"JERC20.sol\":8671:8690  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"JERC20.sol\":8671:8676  owner */\n      dup4\n        /* \"JERC20.sol\":8671:8690  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"JERC20.sol\":8663:8721  require(owner != address(0), \"approve from the 0 address\") */\n      tag_95\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_96\n      swap1\n      tag_97\n      jump\t// in\n    tag_96:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_95:\n        /* \"JERC20.sol\":8759:8760  0 */\n      0x00\n        /* \"JERC20.sol\":8740:8761  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"JERC20.sol\":8740:8747  spender */\n      dup3\n        /* \"JERC20.sol\":8740:8761  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"JERC20.sol\":8732:8790  require(spender != address(0), \"approve to the 0 address\") */\n      tag_98\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_99\n      swap1\n      tag_100\n      jump\t// in\n    tag_99:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_98:\n        /* \"JERC20.sol\":8833:8839  amount */\n      dup1\n        /* \"JERC20.sol\":8803:8814  _allowances */\n      0x01\n        /* \"JERC20.sol\":8803:8821  _allowances[owner] */\n      0x00\n        /* \"JERC20.sol\":8815:8820  owner */\n      dup6\n        /* \"JERC20.sol\":8803:8821  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"JERC20.sol\":8803:8830  _allowances[owner][spender] */\n      0x00\n        /* \"JERC20.sol\":8822:8829  spender */\n      dup5\n        /* \"JERC20.sol\":8803:8830  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"JERC20.sol\":8803:8839  _allowances[owner][spender] = amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"JERC20.sol\":8871:8878  spender */\n      dup2\n        /* \"JERC20.sol\":8855:8887  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"JERC20.sol\":8864:8869  owner */\n      dup4\n        /* \"JERC20.sol\":8855:8887  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"JERC20.sol\":8880:8886  amount */\n      dup4\n        /* \"JERC20.sol\":8855:8887  Approval(owner, spender, amount) */\n      mload(0x40)\n      tag_101\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_101:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"JERC20.sol\":8535:8895  function _approve(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"JERC20.sol\":9100:9546  function _spendAllowance(... */\n    tag_71:\n        /* \"JERC20.sol\":9235:9259  uint256 currentAllowance */\n      0x00\n        /* \"JERC20.sol\":9262:9287  allowance(owner, spender) */\n      tag_103\n        /* \"JERC20.sol\":9272:9277  owner */\n      dup5\n        /* \"JERC20.sol\":9279:9286  spender */\n      dup5\n        /* \"JERC20.sol\":9262:9271  allowance */\n      tag_56\n        /* \"JERC20.sol\":9262:9287  allowance(owner, spender) */\n      jump\t// in\n    tag_103:\n        /* \"JERC20.sol\":9235:9287  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"JERC20.sol\":9322:9339  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"JERC20.sol\":9302:9318  currentAllowance */\n      dup2\n        /* \"JERC20.sol\":9302:9339  currentAllowance != type(uint256).max */\n      eq\n        /* \"JERC20.sol\":9298:9539  if (currentAllowance != type(uint256).max) {... */\n      tag_104\n      jumpi\n        /* \"JERC20.sol\":9384:9390  amount */\n      dup2\n        /* \"JERC20.sol\":9364:9380  currentAllowance */\n      dup2\n        /* \"JERC20.sol\":9364:9390  currentAllowance >= amount */\n      lt\n      iszero\n        /* \"JERC20.sol\":9356:9417  require(currentAllowance >= amount, \"insufficient allowance\") */\n      tag_105\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_106\n      swap1\n      tag_107\n      jump\t// in\n    tag_106:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_105:\n        /* \"JERC20.sol\":9461:9512  _approve(owner, spender, currentAllowance - amount) */\n      tag_108\n        /* \"JERC20.sol\":9470:9475  owner */\n      dup5\n        /* \"JERC20.sol\":9477:9484  spender */\n      dup5\n        /* \"JERC20.sol\":9505:9511  amount */\n      dup5\n        /* \"JERC20.sol\":9486:9502  currentAllowance */\n      dup5\n        /* \"JERC20.sol\":9486:9511  currentAllowance - amount */\n      sub\n        /* \"JERC20.sol\":9461:9469  _approve */\n      tag_67\n        /* \"JERC20.sol\":9461:9512  _approve(owner, spender, currentAllowance - amount) */\n      jump\t// in\n    tag_108:\n        /* \"JERC20.sol\":9298:9539  if (currentAllowance != type(uint256).max) {... */\n    tag_104:\n        /* \"JERC20.sol\":9224:9546  {... */\n      pop\n        /* \"JERC20.sol\":9100:9546  function _spendAllowance(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"JERC20.sol\":6399:7088  function _transfer(... */\n    tag_73:\n        /* \"JERC20.sol\":6546:6547  0 */\n      0x00\n        /* \"JERC20.sol\":6530:6548  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"JERC20.sol\":6530:6534  from */\n      dup4\n        /* \"JERC20.sol\":6530:6548  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"JERC20.sol\":6522:6576  require(from != address(0), \"Transfer from address 0\") */\n      tag_110\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_111\n      swap1\n      tag_112\n      jump\t// in\n    tag_111:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_110:\n        /* \"JERC20.sol\":6609:6610  0 */\n      0x00\n        /* \"JERC20.sol\":6595:6611  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"JERC20.sol\":6595:6597  to */\n      dup3\n        /* \"JERC20.sol\":6595:6611  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"JERC20.sol\":6587:6637  require(to != address(0), \"Transfer to address 0\") */\n      tag_113\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_114\n      swap1\n      tag_115\n      jump\t// in\n    tag_114:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_113:\n        /* \"JERC20.sol\":6650:6669  uint256 fromBalance */\n      0x00\n        /* \"JERC20.sol\":6672:6681  _balances */\n      dup1\n        /* \"JERC20.sol\":6672:6687  _balances[from] */\n      0x00\n        /* \"JERC20.sol\":6682:6686  from */\n      dup6\n        /* \"JERC20.sol\":6672:6687  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"JERC20.sol\":6650:6687  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"JERC20.sol\":6721:6727  amount */\n      dup2\n        /* \"JERC20.sol\":6706:6717  fromBalance */\n      dup2\n        /* \"JERC20.sol\":6706:6727  fromBalance >= amount */\n      lt\n      iszero\n        /* \"JERC20.sol\":6698:6748  require(fromBalance >= amount, \"Balance exceeded\") */\n      tag_116\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_117\n      swap1\n      tag_118\n      jump\t// in\n    tag_117:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_116:\n        /* \"JERC20.sol\":6816:6822  amount */\n      dup2\n        /* \"JERC20.sol\":6802:6813  fromBalance */\n      dup2\n        /* \"JERC20.sol\":6802:6822  fromBalance - amount */\n      sub\n        /* \"JERC20.sol\":6784:6793  _balances */\n      0x00\n        /* \"JERC20.sol\":6784:6799  _balances[from] */\n      dup1\n        /* \"JERC20.sol\":6794:6798  from */\n      dup7\n        /* \"JERC20.sol\":6784:6799  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"JERC20.sol\":6784:6822  _balances[from] = fromBalance - amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"JERC20.sol\":7019:7025  amount */\n      dup2\n        /* \"JERC20.sol\":7002:7011  _balances */\n      0x00\n        /* \"JERC20.sol\":7002:7015  _balances[to] */\n      dup1\n        /* \"JERC20.sol\":7012:7014  to */\n      dup6\n        /* \"JERC20.sol\":7002:7015  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"JERC20.sol\":7002:7025  _balances[to] += amount */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"JERC20.sol\":7069:7071  to */\n      dup3\n        /* \"JERC20.sol\":7054:7080  Transfer(from, to, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"JERC20.sol\":7063:7067  from */\n      dup5\n        /* \"JERC20.sol\":7054:7080  Transfer(from, to, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"JERC20.sol\":7073:7079  amount */\n      dup5\n        /* \"JERC20.sol\":7054:7080  Transfer(from, to, amount) */\n      mload(0x40)\n      tag_119\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_119:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"JERC20.sol\":6511:7088  {... */\n      pop\n        /* \"JERC20.sol\":6399:7088  function _transfer(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"JERC20.sol\":7810:8225  function _mint(address account, uint256 amount) internal virtual {... */\n    tag_82:\n        /* \"JERC20.sol\":7913:7914  0 */\n      0x00\n        /* \"JERC20.sol\":7894:7915  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"JERC20.sol\":7894:7901  account */\n      dup3\n        /* \"JERC20.sol\":7894:7915  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"JERC20.sol\":7886:7941  require(account != address(0), \"mint to the 0 address\") */\n      tag_121\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_122\n      swap1\n      tag_123\n      jump\t// in\n    tag_122:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_121:\n        /* \"JERC20.sol\":7970:7976  amount */\n      dup1\n        /* \"JERC20.sol\":7954:7966  _totalSupply */\n      0x02\n      0x00\n        /* \"JERC20.sol\":7954:7976  _totalSupply += amount */\n      dup3\n      dup3\n      sload\n      tag_124\n      swap2\n      swap1\n      tag_125\n      jump\t// in\n    tag_124:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"JERC20.sol\":8147:8153  amount */\n      dup1\n        /* \"JERC20.sol\":8125:8134  _balances */\n      0x00\n        /* \"JERC20.sol\":8125:8143  _balances[account] */\n      dup1\n        /* \"JERC20.sol\":8135:8142  account */\n      dup5\n        /* \"JERC20.sol\":8125:8143  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"JERC20.sol\":8125:8153  _balances[account] += amount */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"JERC20.sol\":8201:8208  account */\n      dup2\n        /* \"JERC20.sol\":8180:8217  Transfer(address(0), account, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"JERC20.sol\":8197:8198  0 */\n      0x00\n        /* \"JERC20.sol\":8180:8217  Transfer(address(0), account, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"JERC20.sol\":8210:8216  amount */\n      dup4\n        /* \"JERC20.sol\":8180:8217  Transfer(address(0), account, amount) */\n      mload(0x40)\n      tag_126\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_126:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"JERC20.sol\":7810:8225  function _mint(address account, uint256 amount) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_127:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_128:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:426   */\n    tag_129:\n        /* \"#utility.yul\":376:382   */\n      dup3\n        /* \"#utility.yul\":371:374   */\n      dup2\n        /* \"#utility.yul\":366:369   */\n      dup4\n        /* \"#utility.yul\":360:383   */\n      mcopy\n        /* \"#utility.yul\":417:418   */\n      0x00\n        /* \"#utility.yul\":408:414   */\n      dup4\n        /* \"#utility.yul\":403:406   */\n      dup4\n        /* \"#utility.yul\":399:415   */\n      add\n        /* \"#utility.yul\":392:419   */\n      mstore\n        /* \"#utility.yul\":287:426   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":432:534   */\n    tag_130:\n        /* \"#utility.yul\":473:479   */\n      0x00\n        /* \"#utility.yul\":524:526   */\n      0x1f\n        /* \"#utility.yul\":520:527   */\n      not\n        /* \"#utility.yul\":515:517   */\n      0x1f\n        /* \"#utility.yul\":508:513   */\n      dup4\n        /* \"#utility.yul\":504:518   */\n      add\n        /* \"#utility.yul\":500:528   */\n      and\n        /* \"#utility.yul\":490:528   */\n      swap1\n      pop\n        /* \"#utility.yul\":432:534   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":540:917   */\n    tag_131:\n        /* \"#utility.yul\":628:631   */\n      0x00\n        /* \"#utility.yul\":656:695   */\n      tag_177\n        /* \"#utility.yul\":689:694   */\n      dup3\n        /* \"#utility.yul\":656:695   */\n      tag_127\n      jump\t// in\n    tag_177:\n        /* \"#utility.yul\":711:782   */\n      tag_178\n        /* \"#utility.yul\":775:781   */\n      dup2\n        /* \"#utility.yul\":770:773   */\n      dup6\n        /* \"#utility.yul\":711:782   */\n      tag_128\n      jump\t// in\n    tag_178:\n        /* \"#utility.yul\":704:782   */\n      swap4\n      pop\n        /* \"#utility.yul\":791:856   */\n      tag_179\n        /* \"#utility.yul\":849:855   */\n      dup2\n        /* \"#utility.yul\":844:847   */\n      dup6\n        /* \"#utility.yul\":837:841   */\n      0x20\n        /* \"#utility.yul\":830:835   */\n      dup7\n        /* \"#utility.yul\":826:842   */\n      add\n        /* \"#utility.yul\":791:856   */\n      tag_129\n      jump\t// in\n    tag_179:\n        /* \"#utility.yul\":881:910   */\n      tag_180\n        /* \"#utility.yul\":903:909   */\n      dup2\n        /* \"#utility.yul\":881:910   */\n      tag_130\n      jump\t// in\n    tag_180:\n        /* \"#utility.yul\":876:879   */\n      dup5\n        /* \"#utility.yul\":872:911   */\n      add\n        /* \"#utility.yul\":865:911   */\n      swap2\n      pop\n        /* \"#utility.yul\":632:917   */\n      pop\n        /* \"#utility.yul\":540:917   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":923:1236   */\n    tag_17:\n        /* \"#utility.yul\":1036:1040   */\n      0x00\n        /* \"#utility.yul\":1074:1076   */\n      0x20\n        /* \"#utility.yul\":1063:1072   */\n      dup3\n        /* \"#utility.yul\":1059:1077   */\n      add\n        /* \"#utility.yul\":1051:1077   */\n      swap1\n      pop\n        /* \"#utility.yul\":1123:1132   */\n      dup2\n        /* \"#utility.yul\":1117:1121   */\n      dup2\n        /* \"#utility.yul\":1113:1133   */\n      sub\n        /* \"#utility.yul\":1109:1110   */\n      0x00\n        /* \"#utility.yul\":1098:1107   */\n      dup4\n        /* \"#utility.yul\":1094:1111   */\n      add\n        /* \"#utility.yul\":1087:1134   */\n      mstore\n        /* \"#utility.yul\":1151:1229   */\n      tag_182\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1215:1221   */\n      dup5\n        /* \"#utility.yul\":1151:1229   */\n      tag_131\n      jump\t// in\n    tag_182:\n        /* \"#utility.yul\":1143:1229   */\n      swap1\n      pop\n        /* \"#utility.yul\":923:1236   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1242:1317   */\n    tag_132:\n        /* \"#utility.yul\":1275:1281   */\n      0x00\n        /* \"#utility.yul\":1308:1310   */\n      0x40\n        /* \"#utility.yul\":1302:1311   */\n      mload\n        /* \"#utility.yul\":1292:1311   */\n      swap1\n      pop\n        /* \"#utility.yul\":1242:1317   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":1323:1440   */\n    tag_133:\n        /* \"#utility.yul\":1432:1433   */\n      0x00\n        /* \"#utility.yul\":1429:1430   */\n      dup1\n        /* \"#utility.yul\":1422:1434   */\n      revert\n        /* \"#utility.yul\":1446:1563   */\n    tag_134:\n        /* \"#utility.yul\":1555:1556   */\n      0x00\n        /* \"#utility.yul\":1552:1553   */\n      dup1\n        /* \"#utility.yul\":1545:1557   */\n      revert\n        /* \"#utility.yul\":1569:1695   */\n    tag_135:\n        /* \"#utility.yul\":1606:1613   */\n      0x00\n        /* \"#utility.yul\":1646:1688   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1639:1644   */\n      dup3\n        /* \"#utility.yul\":1635:1689   */\n      and\n        /* \"#utility.yul\":1624:1689   */\n      swap1\n      pop\n        /* \"#utility.yul\":1569:1695   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1701:1797   */\n    tag_136:\n        /* \"#utility.yul\":1738:1745   */\n      0x00\n        /* \"#utility.yul\":1767:1791   */\n      tag_188\n        /* \"#utility.yul\":1785:1790   */\n      dup3\n        /* \"#utility.yul\":1767:1791   */\n      tag_135\n      jump\t// in\n    tag_188:\n        /* \"#utility.yul\":1756:1791   */\n      swap1\n      pop\n        /* \"#utility.yul\":1701:1797   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1803:1925   */\n    tag_137:\n        /* \"#utility.yul\":1876:1900   */\n      tag_190\n        /* \"#utility.yul\":1894:1899   */\n      dup2\n        /* \"#utility.yul\":1876:1900   */\n      tag_136\n      jump\t// in\n    tag_190:\n        /* \"#utility.yul\":1869:1874   */\n      dup2\n        /* \"#utility.yul\":1866:1901   */\n      eq\n        /* \"#utility.yul\":1856:1919   */\n      tag_191\n      jumpi\n        /* \"#utility.yul\":1915:1916   */\n      0x00\n        /* \"#utility.yul\":1912:1913   */\n      dup1\n        /* \"#utility.yul\":1905:1917   */\n      revert\n        /* \"#utility.yul\":1856:1919   */\n    tag_191:\n        /* \"#utility.yul\":1803:1925   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1931:2070   */\n    tag_138:\n        /* \"#utility.yul\":1977:1982   */\n      0x00\n        /* \"#utility.yul\":2015:2021   */\n      dup2\n        /* \"#utility.yul\":2002:2022   */\n      calldataload\n        /* \"#utility.yul\":1993:2022   */\n      swap1\n      pop\n        /* \"#utility.yul\":2031:2064   */\n      tag_193\n        /* \"#utility.yul\":2058:2063   */\n      dup2\n        /* \"#utility.yul\":2031:2064   */\n      tag_137\n      jump\t// in\n    tag_193:\n        /* \"#utility.yul\":1931:2070   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2076:2153   */\n    tag_139:\n        /* \"#utility.yul\":2113:2120   */\n      0x00\n        /* \"#utility.yul\":2142:2147   */\n      dup2\n        /* \"#utility.yul\":2131:2147   */\n      swap1\n      pop\n        /* \"#utility.yul\":2076:2153   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2159:2281   */\n    tag_140:\n        /* \"#utility.yul\":2232:2256   */\n      tag_196\n        /* \"#utility.yul\":2250:2255   */\n      dup2\n        /* \"#utility.yul\":2232:2256   */\n      tag_139\n      jump\t// in\n    tag_196:\n        /* \"#utility.yul\":2225:2230   */\n      dup2\n        /* \"#utility.yul\":2222:2257   */\n      eq\n        /* \"#utility.yul\":2212:2275   */\n      tag_197\n      jumpi\n        /* \"#utility.yul\":2271:2272   */\n      0x00\n        /* \"#utility.yul\":2268:2269   */\n      dup1\n        /* \"#utility.yul\":2261:2273   */\n      revert\n        /* \"#utility.yul\":2212:2275   */\n    tag_197:\n        /* \"#utility.yul\":2159:2281   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2287:2426   */\n    tag_141:\n        /* \"#utility.yul\":2333:2338   */\n      0x00\n        /* \"#utility.yul\":2371:2377   */\n      dup2\n        /* \"#utility.yul\":2358:2378   */\n      calldataload\n        /* \"#utility.yul\":2349:2378   */\n      swap1\n      pop\n        /* \"#utility.yul\":2387:2420   */\n      tag_199\n        /* \"#utility.yul\":2414:2419   */\n      dup2\n        /* \"#utility.yul\":2387:2420   */\n      tag_140\n      jump\t// in\n    tag_199:\n        /* \"#utility.yul\":2287:2426   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2432:2906   */\n    tag_20:\n        /* \"#utility.yul\":2500:2506   */\n      0x00\n        /* \"#utility.yul\":2508:2514   */\n      dup1\n        /* \"#utility.yul\":2557:2559   */\n      0x40\n        /* \"#utility.yul\":2545:2554   */\n      dup4\n        /* \"#utility.yul\":2536:2543   */\n      dup6\n        /* \"#utility.yul\":2532:2555   */\n      sub\n        /* \"#utility.yul\":2528:2560   */\n      slt\n        /* \"#utility.yul\":2525:2644   */\n      iszero\n      tag_201\n      jumpi\n        /* \"#utility.yul\":2563:2642   */\n      tag_202\n      tag_133\n      jump\t// in\n    tag_202:\n        /* \"#utility.yul\":2525:2644   */\n    tag_201:\n        /* \"#utility.yul\":2683:2684   */\n      0x00\n        /* \"#utility.yul\":2708:2761   */\n      tag_203\n        /* \"#utility.yul\":2753:2760   */\n      dup6\n        /* \"#utility.yul\":2744:2750   */\n      dup3\n        /* \"#utility.yul\":2733:2742   */\n      dup7\n        /* \"#utility.yul\":2729:2751   */\n      add\n        /* \"#utility.yul\":2708:2761   */\n      tag_138\n      jump\t// in\n    tag_203:\n        /* \"#utility.yul\":2698:2761   */\n      swap3\n      pop\n        /* \"#utility.yul\":2654:2771   */\n      pop\n        /* \"#utility.yul\":2810:2812   */\n      0x20\n        /* \"#utility.yul\":2836:2889   */\n      tag_204\n        /* \"#utility.yul\":2881:2888   */\n      dup6\n        /* \"#utility.yul\":2872:2878   */\n      dup3\n        /* \"#utility.yul\":2861:2870   */\n      dup7\n        /* \"#utility.yul\":2857:2879   */\n      add\n        /* \"#utility.yul\":2836:2889   */\n      tag_141\n      jump\t// in\n    tag_204:\n        /* \"#utility.yul\":2826:2889   */\n      swap2\n      pop\n        /* \"#utility.yul\":2781:2899   */\n      pop\n        /* \"#utility.yul\":2432:2906   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2912:3002   */\n    tag_142:\n        /* \"#utility.yul\":2946:2953   */\n      0x00\n        /* \"#utility.yul\":2989:2994   */\n      dup2\n        /* \"#utility.yul\":2982:2995   */\n      iszero\n        /* \"#utility.yul\":2975:2996   */\n      iszero\n        /* \"#utility.yul\":2964:2996   */\n      swap1\n      pop\n        /* \"#utility.yul\":2912:3002   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3008:3117   */\n    tag_143:\n        /* \"#utility.yul\":3089:3110   */\n      tag_207\n        /* \"#utility.yul\":3104:3109   */\n      dup2\n        /* \"#utility.yul\":3089:3110   */\n      tag_142\n      jump\t// in\n    tag_207:\n        /* \"#utility.yul\":3084:3087   */\n      dup3\n        /* \"#utility.yul\":3077:3111   */\n      mstore\n        /* \"#utility.yul\":3008:3117   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3123:3333   */\n    tag_23:\n        /* \"#utility.yul\":3210:3214   */\n      0x00\n        /* \"#utility.yul\":3248:3250   */\n      0x20\n        /* \"#utility.yul\":3237:3246   */\n      dup3\n        /* \"#utility.yul\":3233:3251   */\n      add\n        /* \"#utility.yul\":3225:3251   */\n      swap1\n      pop\n        /* \"#utility.yul\":3261:3326   */\n      tag_209\n        /* \"#utility.yul\":3323:3324   */\n      0x00\n        /* \"#utility.yul\":3312:3321   */\n      dup4\n        /* \"#utility.yul\":3308:3325   */\n      add\n        /* \"#utility.yul\":3299:3305   */\n      dup5\n        /* \"#utility.yul\":3261:3326   */\n      tag_143\n      jump\t// in\n    tag_209:\n        /* \"#utility.yul\":3123:3333   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3339:3457   */\n    tag_144:\n        /* \"#utility.yul\":3426:3450   */\n      tag_211\n        /* \"#utility.yul\":3444:3449   */\n      dup2\n        /* \"#utility.yul\":3426:3450   */\n      tag_139\n      jump\t// in\n    tag_211:\n        /* \"#utility.yul\":3421:3424   */\n      dup3\n        /* \"#utility.yul\":3414:3451   */\n      mstore\n        /* \"#utility.yul\":3339:3457   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3463:3685   */\n    tag_27:\n        /* \"#utility.yul\":3556:3560   */\n      0x00\n        /* \"#utility.yul\":3594:3596   */\n      0x20\n        /* \"#utility.yul\":3583:3592   */\n      dup3\n        /* \"#utility.yul\":3579:3597   */\n      add\n        /* \"#utility.yul\":3571:3597   */\n      swap1\n      pop\n        /* \"#utility.yul\":3607:3678   */\n      tag_213\n        /* \"#utility.yul\":3675:3676   */\n      0x00\n        /* \"#utility.yul\":3664:3673   */\n      dup4\n        /* \"#utility.yul\":3660:3677   */\n      add\n        /* \"#utility.yul\":3651:3657   */\n      dup5\n        /* \"#utility.yul\":3607:3678   */\n      tag_144\n      jump\t// in\n    tag_213:\n        /* \"#utility.yul\":3463:3685   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3691:4310   */\n    tag_30:\n        /* \"#utility.yul\":3768:3774   */\n      0x00\n        /* \"#utility.yul\":3776:3782   */\n      dup1\n        /* \"#utility.yul\":3784:3790   */\n      0x00\n        /* \"#utility.yul\":3833:3835   */\n      0x60\n        /* \"#utility.yul\":3821:3830   */\n      dup5\n        /* \"#utility.yul\":3812:3819   */\n      dup7\n        /* \"#utility.yul\":3808:3831   */\n      sub\n        /* \"#utility.yul\":3804:3836   */\n      slt\n        /* \"#utility.yul\":3801:3920   */\n      iszero\n      tag_215\n      jumpi\n        /* \"#utility.yul\":3839:3918   */\n      tag_216\n      tag_133\n      jump\t// in\n    tag_216:\n        /* \"#utility.yul\":3801:3920   */\n    tag_215:\n        /* \"#utility.yul\":3959:3960   */\n      0x00\n        /* \"#utility.yul\":3984:4037   */\n      tag_217\n        /* \"#utility.yul\":4029:4036   */\n      dup7\n        /* \"#utility.yul\":4020:4026   */\n      dup3\n        /* \"#utility.yul\":4009:4018   */\n      dup8\n        /* \"#utility.yul\":4005:4027   */\n      add\n        /* \"#utility.yul\":3984:4037   */\n      tag_138\n      jump\t// in\n    tag_217:\n        /* \"#utility.yul\":3974:4037   */\n      swap4\n      pop\n        /* \"#utility.yul\":3930:4047   */\n      pop\n        /* \"#utility.yul\":4086:4088   */\n      0x20\n        /* \"#utility.yul\":4112:4165   */\n      tag_218\n        /* \"#utility.yul\":4157:4164   */\n      dup7\n        /* \"#utility.yul\":4148:4154   */\n      dup3\n        /* \"#utility.yul\":4137:4146   */\n      dup8\n        /* \"#utility.yul\":4133:4155   */\n      add\n        /* \"#utility.yul\":4112:4165   */\n      tag_138\n      jump\t// in\n    tag_218:\n        /* \"#utility.yul\":4102:4165   */\n      swap3\n      pop\n        /* \"#utility.yul\":4057:4175   */\n      pop\n        /* \"#utility.yul\":4214:4216   */\n      0x40\n        /* \"#utility.yul\":4240:4293   */\n      tag_219\n        /* \"#utility.yul\":4285:4292   */\n      dup7\n        /* \"#utility.yul\":4276:4282   */\n      dup3\n        /* \"#utility.yul\":4265:4274   */\n      dup8\n        /* \"#utility.yul\":4261:4283   */\n      add\n        /* \"#utility.yul\":4240:4293   */\n      tag_141\n      jump\t// in\n    tag_219:\n        /* \"#utility.yul\":4230:4293   */\n      swap2\n      pop\n        /* \"#utility.yul\":4185:4303   */\n      pop\n        /* \"#utility.yul\":3691:4310   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4316:4433   */\n    tag_145:\n        /* \"#utility.yul\":4425:4426   */\n      0x00\n        /* \"#utility.yul\":4422:4423   */\n      dup1\n        /* \"#utility.yul\":4415:4427   */\n      revert\n        /* \"#utility.yul\":4439:4619   */\n    tag_146:\n        /* \"#utility.yul\":4487:4564   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4484:4485   */\n      0x00\n        /* \"#utility.yul\":4477:4565   */\n      mstore\n        /* \"#utility.yul\":4584:4588   */\n      0x41\n        /* \"#utility.yul\":4581:4582   */\n      0x04\n        /* \"#utility.yul\":4574:4589   */\n      mstore\n        /* \"#utility.yul\":4608:4612   */\n      0x24\n        /* \"#utility.yul\":4605:4606   */\n      0x00\n        /* \"#utility.yul\":4598:4613   */\n      revert\n        /* \"#utility.yul\":4625:4906   */\n    tag_147:\n        /* \"#utility.yul\":4708:4735   */\n      tag_223\n        /* \"#utility.yul\":4730:4734   */\n      dup3\n        /* \"#utility.yul\":4708:4735   */\n      tag_130\n      jump\t// in\n    tag_223:\n        /* \"#utility.yul\":4700:4706   */\n      dup2\n        /* \"#utility.yul\":4696:4736   */\n      add\n        /* \"#utility.yul\":4838:4844   */\n      dup2\n        /* \"#utility.yul\":4826:4836   */\n      dup2\n        /* \"#utility.yul\":4823:4845   */\n      lt\n        /* \"#utility.yul\":4802:4820   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4790:4800   */\n      dup3\n        /* \"#utility.yul\":4787:4821   */\n      gt\n        /* \"#utility.yul\":4784:4846   */\n      or\n        /* \"#utility.yul\":4781:4869   */\n      iszero\n      tag_224\n      jumpi\n        /* \"#utility.yul\":4849:4867   */\n      tag_225\n      tag_146\n      jump\t// in\n    tag_225:\n        /* \"#utility.yul\":4781:4869   */\n    tag_224:\n        /* \"#utility.yul\":4889:4899   */\n      dup1\n        /* \"#utility.yul\":4885:4887   */\n      0x40\n        /* \"#utility.yul\":4878:4900   */\n      mstore\n        /* \"#utility.yul\":4668:4906   */\n      pop\n        /* \"#utility.yul\":4625:4906   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4912:5041   */\n    tag_148:\n        /* \"#utility.yul\":4946:4952   */\n      0x00\n        /* \"#utility.yul\":4973:4993   */\n      tag_227\n      tag_132\n      jump\t// in\n    tag_227:\n        /* \"#utility.yul\":4963:4993   */\n      swap1\n      pop\n        /* \"#utility.yul\":5002:5035   */\n      tag_228\n        /* \"#utility.yul\":5030:5034   */\n      dup3\n        /* \"#utility.yul\":5022:5028   */\n      dup3\n        /* \"#utility.yul\":5002:5035   */\n      tag_147\n      jump\t// in\n    tag_228:\n        /* \"#utility.yul\":4912:5041   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5047:5358   */\n    tag_149:\n        /* \"#utility.yul\":5124:5128   */\n      0x00\n        /* \"#utility.yul\":5214:5232   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5206:5212   */\n      dup3\n        /* \"#utility.yul\":5203:5233   */\n      gt\n        /* \"#utility.yul\":5200:5256   */\n      iszero\n      tag_230\n      jumpi\n        /* \"#utility.yul\":5236:5254   */\n      tag_231\n      tag_146\n      jump\t// in\n    tag_231:\n        /* \"#utility.yul\":5200:5256   */\n    tag_230:\n        /* \"#utility.yul\":5286:5290   */\n      0x20\n        /* \"#utility.yul\":5278:5284   */\n      dup3\n        /* \"#utility.yul\":5274:5291   */\n      mul\n        /* \"#utility.yul\":5266:5291   */\n      swap1\n      pop\n        /* \"#utility.yul\":5346:5350   */\n      0x20\n        /* \"#utility.yul\":5340:5344   */\n      dup2\n        /* \"#utility.yul\":5336:5351   */\n      add\n        /* \"#utility.yul\":5328:5351   */\n      swap1\n      pop\n        /* \"#utility.yul\":5047:5358   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5364:5481   */\n    tag_150:\n        /* \"#utility.yul\":5473:5474   */\n      0x00\n        /* \"#utility.yul\":5470:5471   */\n      dup1\n        /* \"#utility.yul\":5463:5475   */\n      revert\n        /* \"#utility.yul\":5504:6214   */\n    tag_151:\n        /* \"#utility.yul\":5600:5605   */\n      0x00\n        /* \"#utility.yul\":5625:5706   */\n      tag_234\n        /* \"#utility.yul\":5641:5705   */\n      tag_235\n        /* \"#utility.yul\":5698:5704   */\n      dup5\n        /* \"#utility.yul\":5641:5705   */\n      tag_149\n      jump\t// in\n    tag_235:\n        /* \"#utility.yul\":5625:5706   */\n      tag_148\n      jump\t// in\n    tag_234:\n        /* \"#utility.yul\":5616:5706   */\n      swap1\n      pop\n        /* \"#utility.yul\":5726:5731   */\n      dup1\n        /* \"#utility.yul\":5755:5761   */\n      dup4\n        /* \"#utility.yul\":5748:5753   */\n      dup3\n        /* \"#utility.yul\":5741:5762   */\n      mstore\n        /* \"#utility.yul\":5789:5793   */\n      0x20\n        /* \"#utility.yul\":5782:5787   */\n      dup3\n        /* \"#utility.yul\":5778:5794   */\n      add\n        /* \"#utility.yul\":5771:5794   */\n      swap1\n      pop\n        /* \"#utility.yul\":5842:5846   */\n      0x20\n        /* \"#utility.yul\":5834:5840   */\n      dup5\n        /* \"#utility.yul\":5830:5847   */\n      mul\n        /* \"#utility.yul\":5822:5828   */\n      dup4\n        /* \"#utility.yul\":5818:5848   */\n      add\n        /* \"#utility.yul\":5871:5874   */\n      dup6\n        /* \"#utility.yul\":5863:5869   */\n      dup2\n        /* \"#utility.yul\":5860:5875   */\n      gt\n        /* \"#utility.yul\":5857:5979   */\n      iszero\n      tag_236\n      jumpi\n        /* \"#utility.yul\":5890:5969   */\n      tag_237\n      tag_150\n      jump\t// in\n    tag_237:\n        /* \"#utility.yul\":5857:5979   */\n    tag_236:\n        /* \"#utility.yul\":6005:6011   */\n      dup4\n        /* \"#utility.yul\":5988:6208   */\n    tag_238:\n        /* \"#utility.yul\":6022:6028   */\n      dup2\n        /* \"#utility.yul\":6017:6020   */\n      dup2\n        /* \"#utility.yul\":6014:6029   */\n      lt\n        /* \"#utility.yul\":5988:6208   */\n      iszero\n      tag_240\n      jumpi\n        /* \"#utility.yul\":6097:6100   */\n      dup1\n        /* \"#utility.yul\":6126:6163   */\n      tag_241\n        /* \"#utility.yul\":6159:6162   */\n      dup9\n        /* \"#utility.yul\":6147:6157   */\n      dup3\n        /* \"#utility.yul\":6126:6163   */\n      tag_138\n      jump\t// in\n    tag_241:\n        /* \"#utility.yul\":6121:6124   */\n      dup5\n        /* \"#utility.yul\":6114:6164   */\n      mstore\n        /* \"#utility.yul\":6193:6197   */\n      0x20\n        /* \"#utility.yul\":6188:6191   */\n      dup5\n        /* \"#utility.yul\":6184:6198   */\n      add\n        /* \"#utility.yul\":6177:6198   */\n      swap4\n      pop\n        /* \"#utility.yul\":6064:6208   */\n      pop\n        /* \"#utility.yul\":6048:6052   */\n      0x20\n        /* \"#utility.yul\":6043:6046   */\n      dup2\n        /* \"#utility.yul\":6039:6053   */\n      add\n        /* \"#utility.yul\":6032:6053   */\n      swap1\n      pop\n        /* \"#utility.yul\":5988:6208   */\n      jump(tag_238)\n    tag_240:\n        /* \"#utility.yul\":5992:6013   */\n      pop\n        /* \"#utility.yul\":5606:6214   */\n      pop\n      pop\n        /* \"#utility.yul\":5504:6214   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6237:6607   */\n    tag_152:\n        /* \"#utility.yul\":6308:6313   */\n      0x00\n        /* \"#utility.yul\":6357:6360   */\n      dup3\n        /* \"#utility.yul\":6350:6354   */\n      0x1f\n        /* \"#utility.yul\":6342:6348   */\n      dup4\n        /* \"#utility.yul\":6338:6355   */\n      add\n        /* \"#utility.yul\":6334:6361   */\n      slt\n        /* \"#utility.yul\":6324:6446   */\n      tag_243\n      jumpi\n        /* \"#utility.yul\":6365:6444   */\n      tag_244\n      tag_145\n      jump\t// in\n    tag_244:\n        /* \"#utility.yul\":6324:6446   */\n    tag_243:\n        /* \"#utility.yul\":6482:6488   */\n      dup2\n        /* \"#utility.yul\":6469:6489   */\n      calldataload\n        /* \"#utility.yul\":6507:6601   */\n      tag_245\n        /* \"#utility.yul\":6597:6600   */\n      dup5\n        /* \"#utility.yul\":6589:6595   */\n      dup3\n        /* \"#utility.yul\":6582:6586   */\n      0x20\n        /* \"#utility.yul\":6574:6580   */\n      dup7\n        /* \"#utility.yul\":6570:6587   */\n      add\n        /* \"#utility.yul\":6507:6601   */\n      tag_151\n      jump\t// in\n    tag_245:\n        /* \"#utility.yul\":6498:6601   */\n      swap2\n      pop\n        /* \"#utility.yul\":6314:6607   */\n      pop\n        /* \"#utility.yul\":6237:6607   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6613:7297   */\n    tag_35:\n        /* \"#utility.yul\":6706:6712   */\n      0x00\n        /* \"#utility.yul\":6714:6720   */\n      dup1\n        /* \"#utility.yul\":6763:6765   */\n      0x40\n        /* \"#utility.yul\":6751:6760   */\n      dup4\n        /* \"#utility.yul\":6742:6749   */\n      dup6\n        /* \"#utility.yul\":6738:6761   */\n      sub\n        /* \"#utility.yul\":6734:6766   */\n      slt\n        /* \"#utility.yul\":6731:6850   */\n      iszero\n      tag_247\n      jumpi\n        /* \"#utility.yul\":6769:6848   */\n      tag_248\n      tag_133\n      jump\t// in\n    tag_248:\n        /* \"#utility.yul\":6731:6850   */\n    tag_247:\n        /* \"#utility.yul\":6917:6918   */\n      0x00\n        /* \"#utility.yul\":6906:6915   */\n      dup4\n        /* \"#utility.yul\":6902:6919   */\n      add\n        /* \"#utility.yul\":6889:6920   */\n      calldataload\n        /* \"#utility.yul\":6947:6965   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6939:6945   */\n      dup2\n        /* \"#utility.yul\":6936:6966   */\n      gt\n        /* \"#utility.yul\":6933:7050   */\n      iszero\n      tag_249\n      jumpi\n        /* \"#utility.yul\":6969:7048   */\n      tag_250\n      tag_134\n      jump\t// in\n    tag_250:\n        /* \"#utility.yul\":6933:7050   */\n    tag_249:\n        /* \"#utility.yul\":7074:7152   */\n      tag_251\n        /* \"#utility.yul\":7144:7151   */\n      dup6\n        /* \"#utility.yul\":7135:7141   */\n      dup3\n        /* \"#utility.yul\":7124:7133   */\n      dup7\n        /* \"#utility.yul\":7120:7142   */\n      add\n        /* \"#utility.yul\":7074:7152   */\n      tag_152\n      jump\t// in\n    tag_251:\n        /* \"#utility.yul\":7064:7152   */\n      swap3\n      pop\n        /* \"#utility.yul\":6860:7162   */\n      pop\n        /* \"#utility.yul\":7201:7203   */\n      0x20\n        /* \"#utility.yul\":7227:7280   */\n      tag_252\n        /* \"#utility.yul\":7272:7279   */\n      dup6\n        /* \"#utility.yul\":7263:7269   */\n      dup3\n        /* \"#utility.yul\":7252:7261   */\n      dup7\n        /* \"#utility.yul\":7248:7270   */\n      add\n        /* \"#utility.yul\":7227:7280   */\n      tag_141\n      jump\t// in\n    tag_252:\n        /* \"#utility.yul\":7217:7280   */\n      swap2\n      pop\n        /* \"#utility.yul\":7172:7290   */\n      pop\n        /* \"#utility.yul\":6613:7297   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7303:7389   */\n    tag_153:\n        /* \"#utility.yul\":7338:7345   */\n      0x00\n        /* \"#utility.yul\":7378:7382   */\n      0xff\n        /* \"#utility.yul\":7371:7376   */\n      dup3\n        /* \"#utility.yul\":7367:7383   */\n      and\n        /* \"#utility.yul\":7356:7383   */\n      swap1\n      pop\n        /* \"#utility.yul\":7303:7389   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7395:7507   */\n    tag_154:\n        /* \"#utility.yul\":7478:7500   */\n      tag_255\n        /* \"#utility.yul\":7494:7499   */\n      dup2\n        /* \"#utility.yul\":7478:7500   */\n      tag_153\n      jump\t// in\n    tag_255:\n        /* \"#utility.yul\":7473:7476   */\n      dup3\n        /* \"#utility.yul\":7466:7501   */\n      mstore\n        /* \"#utility.yul\":7395:7507   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7513:7727   */\n    tag_40:\n        /* \"#utility.yul\":7602:7606   */\n      0x00\n        /* \"#utility.yul\":7640:7642   */\n      0x20\n        /* \"#utility.yul\":7629:7638   */\n      dup3\n        /* \"#utility.yul\":7625:7643   */\n      add\n        /* \"#utility.yul\":7617:7643   */\n      swap1\n      pop\n        /* \"#utility.yul\":7653:7720   */\n      tag_257\n        /* \"#utility.yul\":7717:7718   */\n      0x00\n        /* \"#utility.yul\":7706:7715   */\n      dup4\n        /* \"#utility.yul\":7702:7719   */\n      add\n        /* \"#utility.yul\":7693:7699   */\n      dup5\n        /* \"#utility.yul\":7653:7720   */\n      tag_154\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":7513:7727   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7733:8062   */\n    tag_43:\n        /* \"#utility.yul\":7792:7798   */\n      0x00\n        /* \"#utility.yul\":7841:7843   */\n      0x20\n        /* \"#utility.yul\":7829:7838   */\n      dup3\n        /* \"#utility.yul\":7820:7827   */\n      dup5\n        /* \"#utility.yul\":7816:7839   */\n      sub\n        /* \"#utility.yul\":7812:7844   */\n      slt\n        /* \"#utility.yul\":7809:7928   */\n      iszero\n      tag_259\n      jumpi\n        /* \"#utility.yul\":7847:7926   */\n      tag_260\n      tag_133\n      jump\t// in\n    tag_260:\n        /* \"#utility.yul\":7809:7928   */\n    tag_259:\n        /* \"#utility.yul\":7967:7968   */\n      0x00\n        /* \"#utility.yul\":7992:8045   */\n      tag_261\n        /* \"#utility.yul\":8037:8044   */\n      dup5\n        /* \"#utility.yul\":8028:8034   */\n      dup3\n        /* \"#utility.yul\":8017:8026   */\n      dup6\n        /* \"#utility.yul\":8013:8035   */\n      add\n        /* \"#utility.yul\":7992:8045   */\n      tag_138\n      jump\t// in\n    tag_261:\n        /* \"#utility.yul\":7982:8045   */\n      swap2\n      pop\n        /* \"#utility.yul\":7938:8055   */\n      pop\n        /* \"#utility.yul\":7733:8062   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8068:8542   */\n    tag_55:\n        /* \"#utility.yul\":8136:8142   */\n      0x00\n        /* \"#utility.yul\":8144:8150   */\n      dup1\n        /* \"#utility.yul\":8193:8195   */\n      0x40\n        /* \"#utility.yul\":8181:8190   */\n      dup4\n        /* \"#utility.yul\":8172:8179   */\n      dup6\n        /* \"#utility.yul\":8168:8191   */\n      sub\n        /* \"#utility.yul\":8164:8196   */\n      slt\n        /* \"#utility.yul\":8161:8280   */\n      iszero\n      tag_263\n      jumpi\n        /* \"#utility.yul\":8199:8278   */\n      tag_264\n      tag_133\n      jump\t// in\n    tag_264:\n        /* \"#utility.yul\":8161:8280   */\n    tag_263:\n        /* \"#utility.yul\":8319:8320   */\n      0x00\n        /* \"#utility.yul\":8344:8397   */\n      tag_265\n        /* \"#utility.yul\":8389:8396   */\n      dup6\n        /* \"#utility.yul\":8380:8386   */\n      dup3\n        /* \"#utility.yul\":8369:8378   */\n      dup7\n        /* \"#utility.yul\":8365:8387   */\n      add\n        /* \"#utility.yul\":8344:8397   */\n      tag_138\n      jump\t// in\n    tag_265:\n        /* \"#utility.yul\":8334:8397   */\n      swap3\n      pop\n        /* \"#utility.yul\":8290:8407   */\n      pop\n        /* \"#utility.yul\":8446:8448   */\n      0x20\n        /* \"#utility.yul\":8472:8525   */\n      tag_266\n        /* \"#utility.yul\":8517:8524   */\n      dup6\n        /* \"#utility.yul\":8508:8514   */\n      dup3\n        /* \"#utility.yul\":8497:8506   */\n      dup7\n        /* \"#utility.yul\":8493:8515   */\n      add\n        /* \"#utility.yul\":8472:8525   */\n      tag_138\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":8462:8525   */\n      swap2\n      pop\n        /* \"#utility.yul\":8417:8535   */\n      pop\n        /* \"#utility.yul\":8068:8542   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8548:8728   */\n    tag_155:\n        /* \"#utility.yul\":8596:8673   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8593:8594   */\n      0x00\n        /* \"#utility.yul\":8586:8674   */\n      mstore\n        /* \"#utility.yul\":8693:8697   */\n      0x22\n        /* \"#utility.yul\":8690:8691   */\n      0x04\n        /* \"#utility.yul\":8683:8698   */\n      mstore\n        /* \"#utility.yul\":8717:8721   */\n      0x24\n        /* \"#utility.yul\":8714:8715   */\n      0x00\n        /* \"#utility.yul\":8707:8722   */\n      revert\n        /* \"#utility.yul\":8734:9054   */\n    tag_60:\n        /* \"#utility.yul\":8778:8784   */\n      0x00\n        /* \"#utility.yul\":8815:8816   */\n      0x02\n        /* \"#utility.yul\":8809:8813   */\n      dup3\n        /* \"#utility.yul\":8805:8817   */\n      div\n        /* \"#utility.yul\":8795:8817   */\n      swap1\n      pop\n        /* \"#utility.yul\":8862:8863   */\n      0x01\n        /* \"#utility.yul\":8856:8860   */\n      dup3\n        /* \"#utility.yul\":8852:8864   */\n      and\n        /* \"#utility.yul\":8883:8901   */\n      dup1\n        /* \"#utility.yul\":8873:8954   */\n      tag_269\n      jumpi\n        /* \"#utility.yul\":8939:8943   */\n      0x7f\n        /* \"#utility.yul\":8931:8937   */\n      dup3\n        /* \"#utility.yul\":8927:8944   */\n      and\n        /* \"#utility.yul\":8917:8944   */\n      swap2\n      pop\n        /* \"#utility.yul\":8873:8954   */\n    tag_269:\n        /* \"#utility.yul\":9001:9003   */\n      0x20\n        /* \"#utility.yul\":8993:8999   */\n      dup3\n        /* \"#utility.yul\":8990:9004   */\n      lt\n        /* \"#utility.yul\":8970:8988   */\n      dup2\n        /* \"#utility.yul\":8967:9005   */\n      sub\n        /* \"#utility.yul\":8964:9048   */\n      tag_270\n      jumpi\n        /* \"#utility.yul\":9020:9038   */\n      tag_271\n      tag_155\n      jump\t// in\n    tag_271:\n        /* \"#utility.yul\":8964:9048   */\n    tag_270:\n        /* \"#utility.yul\":8785:9054   */\n      pop\n        /* \"#utility.yul\":8734:9054   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9060:9240   */\n    tag_81:\n        /* \"#utility.yul\":9108:9185   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9105:9106   */\n      0x00\n        /* \"#utility.yul\":9098:9186   */\n      mstore\n        /* \"#utility.yul\":9205:9209   */\n      0x32\n        /* \"#utility.yul\":9202:9203   */\n      0x04\n        /* \"#utility.yul\":9195:9210   */\n      mstore\n        /* \"#utility.yul\":9229:9233   */\n      0x24\n        /* \"#utility.yul\":9226:9227   */\n      0x00\n        /* \"#utility.yul\":9219:9234   */\n      revert\n        /* \"#utility.yul\":9246:9422   */\n    tag_156:\n        /* \"#utility.yul\":9386:9414   */\n      0x617070726f76652066726f6d2074686520302061646472657373000000000000\n        /* \"#utility.yul\":9382:9383   */\n      0x00\n        /* \"#utility.yul\":9374:9380   */\n      dup3\n        /* \"#utility.yul\":9370:9384   */\n      add\n        /* \"#utility.yul\":9363:9415   */\n      mstore\n        /* \"#utility.yul\":9246:9422   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9428:9794   */\n    tag_157:\n        /* \"#utility.yul\":9570:9573   */\n      0x00\n        /* \"#utility.yul\":9591:9658   */\n      tag_275\n        /* \"#utility.yul\":9655:9657   */\n      0x1a\n        /* \"#utility.yul\":9650:9653   */\n      dup4\n        /* \"#utility.yul\":9591:9658   */\n      tag_128\n      jump\t// in\n    tag_275:\n        /* \"#utility.yul\":9584:9658   */\n      swap2\n      pop\n        /* \"#utility.yul\":9667:9760   */\n      tag_276\n        /* \"#utility.yul\":9756:9759   */\n      dup3\n        /* \"#utility.yul\":9667:9760   */\n      tag_156\n      jump\t// in\n    tag_276:\n        /* \"#utility.yul\":9785:9787   */\n      0x20\n        /* \"#utility.yul\":9780:9783   */\n      dup3\n        /* \"#utility.yul\":9776:9788   */\n      add\n        /* \"#utility.yul\":9769:9788   */\n      swap1\n      pop\n        /* \"#utility.yul\":9428:9794   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9800:10219   */\n    tag_97:\n        /* \"#utility.yul\":9966:9970   */\n      0x00\n        /* \"#utility.yul\":10004:10006   */\n      0x20\n        /* \"#utility.yul\":9993:10002   */\n      dup3\n        /* \"#utility.yul\":9989:10007   */\n      add\n        /* \"#utility.yul\":9981:10007   */\n      swap1\n      pop\n        /* \"#utility.yul\":10053:10062   */\n      dup2\n        /* \"#utility.yul\":10047:10051   */\n      dup2\n        /* \"#utility.yul\":10043:10063   */\n      sub\n        /* \"#utility.yul\":10039:10040   */\n      0x00\n        /* \"#utility.yul\":10028:10037   */\n      dup4\n        /* \"#utility.yul\":10024:10041   */\n      add\n        /* \"#utility.yul\":10017:10064   */\n      mstore\n        /* \"#utility.yul\":10081:10212   */\n      tag_278\n        /* \"#utility.yul\":10207:10211   */\n      dup2\n        /* \"#utility.yul\":10081:10212   */\n      tag_157\n      jump\t// in\n    tag_278:\n        /* \"#utility.yul\":10073:10212   */\n      swap1\n      pop\n        /* \"#utility.yul\":9800:10219   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10225:10399   */\n    tag_158:\n        /* \"#utility.yul\":10365:10391   */\n      0x617070726f766520746f20746865203020616464726573730000000000000000\n        /* \"#utility.yul\":10361:10362   */\n      0x00\n        /* \"#utility.yul\":10353:10359   */\n      dup3\n        /* \"#utility.yul\":10349:10363   */\n      add\n        /* \"#utility.yul\":10342:10392   */\n      mstore\n        /* \"#utility.yul\":10225:10399   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10405:10771   */\n    tag_159:\n        /* \"#utility.yul\":10547:10550   */\n      0x00\n        /* \"#utility.yul\":10568:10635   */\n      tag_281\n        /* \"#utility.yul\":10632:10634   */\n      0x18\n        /* \"#utility.yul\":10627:10630   */\n      dup4\n        /* \"#utility.yul\":10568:10635   */\n      tag_128\n      jump\t// in\n    tag_281:\n        /* \"#utility.yul\":10561:10635   */\n      swap2\n      pop\n        /* \"#utility.yul\":10644:10737   */\n      tag_282\n        /* \"#utility.yul\":10733:10736   */\n      dup3\n        /* \"#utility.yul\":10644:10737   */\n      tag_158\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":10762:10764   */\n      0x20\n        /* \"#utility.yul\":10757:10760   */\n      dup3\n        /* \"#utility.yul\":10753:10765   */\n      add\n        /* \"#utility.yul\":10746:10765   */\n      swap1\n      pop\n        /* \"#utility.yul\":10405:10771   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10777:11196   */\n    tag_100:\n        /* \"#utility.yul\":10943:10947   */\n      0x00\n        /* \"#utility.yul\":10981:10983   */\n      0x20\n        /* \"#utility.yul\":10970:10979   */\n      dup3\n        /* \"#utility.yul\":10966:10984   */\n      add\n        /* \"#utility.yul\":10958:10984   */\n      swap1\n      pop\n        /* \"#utility.yul\":11030:11039   */\n      dup2\n        /* \"#utility.yul\":11024:11028   */\n      dup2\n        /* \"#utility.yul\":11020:11040   */\n      sub\n        /* \"#utility.yul\":11016:11017   */\n      0x00\n        /* \"#utility.yul\":11005:11014   */\n      dup4\n        /* \"#utility.yul\":11001:11018   */\n      add\n        /* \"#utility.yul\":10994:11041   */\n      mstore\n        /* \"#utility.yul\":11058:11189   */\n      tag_284\n        /* \"#utility.yul\":11184:11188   */\n      dup2\n        /* \"#utility.yul\":11058:11189   */\n      tag_159\n      jump\t// in\n    tag_284:\n        /* \"#utility.yul\":11050:11189   */\n      swap1\n      pop\n        /* \"#utility.yul\":10777:11196   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11202:11374   */\n    tag_160:\n        /* \"#utility.yul\":11342:11366   */\n      0x696e73756666696369656e7420616c6c6f77616e636500000000000000000000\n        /* \"#utility.yul\":11338:11339   */\n      0x00\n        /* \"#utility.yul\":11330:11336   */\n      dup3\n        /* \"#utility.yul\":11326:11340   */\n      add\n        /* \"#utility.yul\":11319:11367   */\n      mstore\n        /* \"#utility.yul\":11202:11374   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11380:11746   */\n    tag_161:\n        /* \"#utility.yul\":11522:11525   */\n      0x00\n        /* \"#utility.yul\":11543:11610   */\n      tag_287\n        /* \"#utility.yul\":11607:11609   */\n      0x16\n        /* \"#utility.yul\":11602:11605   */\n      dup4\n        /* \"#utility.yul\":11543:11610   */\n      tag_128\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":11536:11610   */\n      swap2\n      pop\n        /* \"#utility.yul\":11619:11712   */\n      tag_288\n        /* \"#utility.yul\":11708:11711   */\n      dup3\n        /* \"#utility.yul\":11619:11712   */\n      tag_160\n      jump\t// in\n    tag_288:\n        /* \"#utility.yul\":11737:11739   */\n      0x20\n        /* \"#utility.yul\":11732:11735   */\n      dup3\n        /* \"#utility.yul\":11728:11740   */\n      add\n        /* \"#utility.yul\":11721:11740   */\n      swap1\n      pop\n        /* \"#utility.yul\":11380:11746   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11752:12171   */\n    tag_107:\n        /* \"#utility.yul\":11918:11922   */\n      0x00\n        /* \"#utility.yul\":11956:11958   */\n      0x20\n        /* \"#utility.yul\":11945:11954   */\n      dup3\n        /* \"#utility.yul\":11941:11959   */\n      add\n        /* \"#utility.yul\":11933:11959   */\n      swap1\n      pop\n        /* \"#utility.yul\":12005:12014   */\n      dup2\n        /* \"#utility.yul\":11999:12003   */\n      dup2\n        /* \"#utility.yul\":11995:12015   */\n      sub\n        /* \"#utility.yul\":11991:11992   */\n      0x00\n        /* \"#utility.yul\":11980:11989   */\n      dup4\n        /* \"#utility.yul\":11976:11993   */\n      add\n        /* \"#utility.yul\":11969:12016   */\n      mstore\n        /* \"#utility.yul\":12033:12164   */\n      tag_290\n        /* \"#utility.yul\":12159:12163   */\n      dup2\n        /* \"#utility.yul\":12033:12164   */\n      tag_161\n      jump\t// in\n    tag_290:\n        /* \"#utility.yul\":12025:12164   */\n      swap1\n      pop\n        /* \"#utility.yul\":11752:12171   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12177:12350   */\n    tag_162:\n        /* \"#utility.yul\":12317:12342   */\n      0x5472616e736665722066726f6d20616464726573732030000000000000000000\n        /* \"#utility.yul\":12313:12314   */\n      0x00\n        /* \"#utility.yul\":12305:12311   */\n      dup3\n        /* \"#utility.yul\":12301:12315   */\n      add\n        /* \"#utility.yul\":12294:12343   */\n      mstore\n        /* \"#utility.yul\":12177:12350   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12356:12722   */\n    tag_163:\n        /* \"#utility.yul\":12498:12501   */\n      0x00\n        /* \"#utility.yul\":12519:12586   */\n      tag_293\n        /* \"#utility.yul\":12583:12585   */\n      0x17\n        /* \"#utility.yul\":12578:12581   */\n      dup4\n        /* \"#utility.yul\":12519:12586   */\n      tag_128\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":12512:12586   */\n      swap2\n      pop\n        /* \"#utility.yul\":12595:12688   */\n      tag_294\n        /* \"#utility.yul\":12684:12687   */\n      dup3\n        /* \"#utility.yul\":12595:12688   */\n      tag_162\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":12713:12715   */\n      0x20\n        /* \"#utility.yul\":12708:12711   */\n      dup3\n        /* \"#utility.yul\":12704:12716   */\n      add\n        /* \"#utility.yul\":12697:12716   */\n      swap1\n      pop\n        /* \"#utility.yul\":12356:12722   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12728:13147   */\n    tag_112:\n        /* \"#utility.yul\":12894:12898   */\n      0x00\n        /* \"#utility.yul\":12932:12934   */\n      0x20\n        /* \"#utility.yul\":12921:12930   */\n      dup3\n        /* \"#utility.yul\":12917:12935   */\n      add\n        /* \"#utility.yul\":12909:12935   */\n      swap1\n      pop\n        /* \"#utility.yul\":12981:12990   */\n      dup2\n        /* \"#utility.yul\":12975:12979   */\n      dup2\n        /* \"#utility.yul\":12971:12991   */\n      sub\n        /* \"#utility.yul\":12967:12968   */\n      0x00\n        /* \"#utility.yul\":12956:12965   */\n      dup4\n        /* \"#utility.yul\":12952:12969   */\n      add\n        /* \"#utility.yul\":12945:12992   */\n      mstore\n        /* \"#utility.yul\":13009:13140   */\n      tag_296\n        /* \"#utility.yul\":13135:13139   */\n      dup2\n        /* \"#utility.yul\":13009:13140   */\n      tag_163\n      jump\t// in\n    tag_296:\n        /* \"#utility.yul\":13001:13140   */\n      swap1\n      pop\n        /* \"#utility.yul\":12728:13147   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13153:13324   */\n    tag_164:\n        /* \"#utility.yul\":13293:13316   */\n      0x5472616e7366657220746f206164647265737320300000000000000000000000\n        /* \"#utility.yul\":13289:13290   */\n      0x00\n        /* \"#utility.yul\":13281:13287   */\n      dup3\n        /* \"#utility.yul\":13277:13291   */\n      add\n        /* \"#utility.yul\":13270:13317   */\n      mstore\n        /* \"#utility.yul\":13153:13324   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13330:13696   */\n    tag_165:\n        /* \"#utility.yul\":13472:13475   */\n      0x00\n        /* \"#utility.yul\":13493:13560   */\n      tag_299\n        /* \"#utility.yul\":13557:13559   */\n      0x15\n        /* \"#utility.yul\":13552:13555   */\n      dup4\n        /* \"#utility.yul\":13493:13560   */\n      tag_128\n      jump\t// in\n    tag_299:\n        /* \"#utility.yul\":13486:13560   */\n      swap2\n      pop\n        /* \"#utility.yul\":13569:13662   */\n      tag_300\n        /* \"#utility.yul\":13658:13661   */\n      dup3\n        /* \"#utility.yul\":13569:13662   */\n      tag_164\n      jump\t// in\n    tag_300:\n        /* \"#utility.yul\":13687:13689   */\n      0x20\n        /* \"#utility.yul\":13682:13685   */\n      dup3\n        /* \"#utility.yul\":13678:13690   */\n      add\n        /* \"#utility.yul\":13671:13690   */\n      swap1\n      pop\n        /* \"#utility.yul\":13330:13696   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13702:14121   */\n    tag_115:\n        /* \"#utility.yul\":13868:13872   */\n      0x00\n        /* \"#utility.yul\":13906:13908   */\n      0x20\n        /* \"#utility.yul\":13895:13904   */\n      dup3\n        /* \"#utility.yul\":13891:13909   */\n      add\n        /* \"#utility.yul\":13883:13909   */\n      swap1\n      pop\n        /* \"#utility.yul\":13955:13964   */\n      dup2\n        /* \"#utility.yul\":13949:13953   */\n      dup2\n        /* \"#utility.yul\":13945:13965   */\n      sub\n        /* \"#utility.yul\":13941:13942   */\n      0x00\n        /* \"#utility.yul\":13930:13939   */\n      dup4\n        /* \"#utility.yul\":13926:13943   */\n      add\n        /* \"#utility.yul\":13919:13966   */\n      mstore\n        /* \"#utility.yul\":13983:14114   */\n      tag_302\n        /* \"#utility.yul\":14109:14113   */\n      dup2\n        /* \"#utility.yul\":13983:14114   */\n      tag_165\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":13975:14114   */\n      swap1\n      pop\n        /* \"#utility.yul\":13702:14121   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14127:14293   */\n    tag_166:\n        /* \"#utility.yul\":14267:14285   */\n      0x42616c616e636520657863656564656400000000000000000000000000000000\n        /* \"#utility.yul\":14263:14264   */\n      0x00\n        /* \"#utility.yul\":14255:14261   */\n      dup3\n        /* \"#utility.yul\":14251:14265   */\n      add\n        /* \"#utility.yul\":14244:14286   */\n      mstore\n        /* \"#utility.yul\":14127:14293   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14299:14665   */\n    tag_167:\n        /* \"#utility.yul\":14441:14444   */\n      0x00\n        /* \"#utility.yul\":14462:14529   */\n      tag_305\n        /* \"#utility.yul\":14526:14528   */\n      0x10\n        /* \"#utility.yul\":14521:14524   */\n      dup4\n        /* \"#utility.yul\":14462:14529   */\n      tag_128\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":14455:14529   */\n      swap2\n      pop\n        /* \"#utility.yul\":14538:14631   */\n      tag_306\n        /* \"#utility.yul\":14627:14630   */\n      dup3\n        /* \"#utility.yul\":14538:14631   */\n      tag_166\n      jump\t// in\n    tag_306:\n        /* \"#utility.yul\":14656:14658   */\n      0x20\n        /* \"#utility.yul\":14651:14654   */\n      dup3\n        /* \"#utility.yul\":14647:14659   */\n      add\n        /* \"#utility.yul\":14640:14659   */\n      swap1\n      pop\n        /* \"#utility.yul\":14299:14665   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14671:15090   */\n    tag_118:\n        /* \"#utility.yul\":14837:14841   */\n      0x00\n        /* \"#utility.yul\":14875:14877   */\n      0x20\n        /* \"#utility.yul\":14864:14873   */\n      dup3\n        /* \"#utility.yul\":14860:14878   */\n      add\n        /* \"#utility.yul\":14852:14878   */\n      swap1\n      pop\n        /* \"#utility.yul\":14924:14933   */\n      dup2\n        /* \"#utility.yul\":14918:14922   */\n      dup2\n        /* \"#utility.yul\":14914:14934   */\n      sub\n        /* \"#utility.yul\":14910:14911   */\n      0x00\n        /* \"#utility.yul\":14899:14908   */\n      dup4\n        /* \"#utility.yul\":14895:14912   */\n      add\n        /* \"#utility.yul\":14888:14935   */\n      mstore\n        /* \"#utility.yul\":14952:15083   */\n      tag_308\n        /* \"#utility.yul\":15078:15082   */\n      dup2\n        /* \"#utility.yul\":14952:15083   */\n      tag_167\n      jump\t// in\n    tag_308:\n        /* \"#utility.yul\":14944:15083   */\n      swap1\n      pop\n        /* \"#utility.yul\":14671:15090   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15096:15267   */\n    tag_168:\n        /* \"#utility.yul\":15236:15259   */\n      0x6d696e7420746f20746865203020616464726573730000000000000000000000\n        /* \"#utility.yul\":15232:15233   */\n      0x00\n        /* \"#utility.yul\":15224:15230   */\n      dup3\n        /* \"#utility.yul\":15220:15234   */\n      add\n        /* \"#utility.yul\":15213:15260   */\n      mstore\n        /* \"#utility.yul\":15096:15267   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15273:15639   */\n    tag_169:\n        /* \"#utility.yul\":15415:15418   */\n      0x00\n        /* \"#utility.yul\":15436:15503   */\n      tag_311\n        /* \"#utility.yul\":15500:15502   */\n      0x15\n        /* \"#utility.yul\":15495:15498   */\n      dup4\n        /* \"#utility.yul\":15436:15503   */\n      tag_128\n      jump\t// in\n    tag_311:\n        /* \"#utility.yul\":15429:15503   */\n      swap2\n      pop\n        /* \"#utility.yul\":15512:15605   */\n      tag_312\n        /* \"#utility.yul\":15601:15604   */\n      dup3\n        /* \"#utility.yul\":15512:15605   */\n      tag_168\n      jump\t// in\n    tag_312:\n        /* \"#utility.yul\":15630:15632   */\n      0x20\n        /* \"#utility.yul\":15625:15628   */\n      dup3\n        /* \"#utility.yul\":15621:15633   */\n      add\n        /* \"#utility.yul\":15614:15633   */\n      swap1\n      pop\n        /* \"#utility.yul\":15273:15639   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15645:16064   */\n    tag_123:\n        /* \"#utility.yul\":15811:15815   */\n      0x00\n        /* \"#utility.yul\":15849:15851   */\n      0x20\n        /* \"#utility.yul\":15838:15847   */\n      dup3\n        /* \"#utility.yul\":15834:15852   */\n      add\n        /* \"#utility.yul\":15826:15852   */\n      swap1\n      pop\n        /* \"#utility.yul\":15898:15907   */\n      dup2\n        /* \"#utility.yul\":15892:15896   */\n      dup2\n        /* \"#utility.yul\":15888:15908   */\n      sub\n        /* \"#utility.yul\":15884:15885   */\n      0x00\n        /* \"#utility.yul\":15873:15882   */\n      dup4\n        /* \"#utility.yul\":15869:15886   */\n      add\n        /* \"#utility.yul\":15862:15909   */\n      mstore\n        /* \"#utility.yul\":15926:16057   */\n      tag_314\n        /* \"#utility.yul\":16052:16056   */\n      dup2\n        /* \"#utility.yul\":15926:16057   */\n      tag_169\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":15918:16057   */\n      swap1\n      pop\n        /* \"#utility.yul\":15645:16064   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16070:16250   */\n    tag_170:\n        /* \"#utility.yul\":16118:16195   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":16115:16116   */\n      0x00\n        /* \"#utility.yul\":16108:16196   */\n      mstore\n        /* \"#utility.yul\":16215:16219   */\n      0x11\n        /* \"#utility.yul\":16212:16213   */\n      0x04\n        /* \"#utility.yul\":16205:16220   */\n      mstore\n        /* \"#utility.yul\":16239:16243   */\n      0x24\n        /* \"#utility.yul\":16236:16237   */\n      0x00\n        /* \"#utility.yul\":16229:16244   */\n      revert\n        /* \"#utility.yul\":16256:16447   */\n    tag_125:\n        /* \"#utility.yul\":16296:16299   */\n      0x00\n        /* \"#utility.yul\":16315:16335   */\n      tag_317\n        /* \"#utility.yul\":16333:16334   */\n      dup3\n        /* \"#utility.yul\":16315:16335   */\n      tag_139\n      jump\t// in\n    tag_317:\n        /* \"#utility.yul\":16310:16335   */\n      swap2\n      pop\n        /* \"#utility.yul\":16349:16369   */\n      tag_318\n        /* \"#utility.yul\":16367:16368   */\n      dup4\n        /* \"#utility.yul\":16349:16369   */\n      tag_139\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":16344:16369   */\n      swap3\n      pop\n        /* \"#utility.yul\":16392:16393   */\n      dup3\n        /* \"#utility.yul\":16389:16390   */\n      dup3\n        /* \"#utility.yul\":16385:16394   */\n      add\n        /* \"#utility.yul\":16378:16394   */\n      swap1\n      pop\n        /* \"#utility.yul\":16413:16416   */\n      dup1\n        /* \"#utility.yul\":16410:16411   */\n      dup3\n        /* \"#utility.yul\":16407:16417   */\n      gt\n        /* \"#utility.yul\":16404:16440   */\n      iszero\n      tag_319\n      jumpi\n        /* \"#utility.yul\":16420:16438   */\n      tag_320\n      tag_170\n      jump\t// in\n    tag_320:\n        /* \"#utility.yul\":16404:16440   */\n    tag_319:\n        /* \"#utility.yul\":16256:16447   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122057a0b22efca3a3071285b2aeb6d31fca6982271883b7ca508904821d53bb9d6364736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_910": {
									"entryPoint": null,
									"id": 910,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_mint_1196": {
									"entryPoint": 114,
									"id": 1196,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_string_memory_ptr_fromMemory": {
									"entryPoint": 649,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr_fromMemory": {
									"entryPoint": 714,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 759,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_stringliteral_ad685e5f39ea8e4d673810c314cd17a816075806a69a16cb331cf4108f5f47f5_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1665,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 1825,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_stringliteral_ad685e5f39ea8e4d673810c314cd17a816075806a69a16cb331cf4108f5f47f5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1699,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 1840,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 561,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 426,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 587,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 980,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 877,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 1609,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1774,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 1265,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_uint256": {
									"entryPoint": 1106,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 1231,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 1124,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1402,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 635,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 998,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 932,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1375,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 512,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 1115,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1347,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 1729,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 887,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 467,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 1157,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 443,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 447,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 439,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 435,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 451,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 1013,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1335,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 1207,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"store_literal_in_memory_ad685e5f39ea8e4d673810c314cd17a816075806a69a16cb331cf4108f5f47f5": {
									"entryPoint": 1625,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 1025,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 1166,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 1203,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:10351:6",
										"nodeType": "YulBlock",
										"src": "0:10351:6",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:6",
													"nodeType": "YulBlock",
													"src": "47:35:6",
													"statements": [
														{
															"nativeSrc": "57:19:6",
															"nodeType": "YulAssignment",
															"src": "57:19:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:6",
																		"nodeType": "YulLiteral",
																		"src": "73:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:6"
																},
																"nativeSrc": "67:9:6",
																"nodeType": "YulFunctionCall",
																"src": "67:9:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:6"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:6",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:6",
														"nodeType": "YulTypedName",
														"src": "40:6:6",
														"type": ""
													}
												],
												"src": "7:75:6"
											},
											{
												"body": {
													"nativeSrc": "177:28:6",
													"nodeType": "YulBlock",
													"src": "177:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:6",
																		"nodeType": "YulLiteral",
																		"src": "194:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:6",
																		"nodeType": "YulLiteral",
																		"src": "197:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:6"
																},
																"nativeSrc": "187:12:6",
																"nodeType": "YulFunctionCall",
																"src": "187:12:6"
															},
															"nativeSrc": "187:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:6"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:6"
											},
											{
												"body": {
													"nativeSrc": "300:28:6",
													"nodeType": "YulBlock",
													"src": "300:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:6",
																		"nodeType": "YulLiteral",
																		"src": "317:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:6",
																		"nodeType": "YulLiteral",
																		"src": "320:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:6"
																},
																"nativeSrc": "310:12:6",
																"nodeType": "YulFunctionCall",
																"src": "310:12:6"
															},
															"nativeSrc": "310:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:6"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:6"
											},
											{
												"body": {
													"nativeSrc": "423:28:6",
													"nodeType": "YulBlock",
													"src": "423:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "440:1:6",
																		"nodeType": "YulLiteral",
																		"src": "440:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:1:6",
																		"nodeType": "YulLiteral",
																		"src": "443:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "433:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:6"
																},
																"nativeSrc": "433:12:6",
																"nodeType": "YulFunctionCall",
																"src": "433:12:6"
															},
															"nativeSrc": "433:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "433:12:6"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "334:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "334:117:6"
											},
											{
												"body": {
													"nativeSrc": "546:28:6",
													"nodeType": "YulBlock",
													"src": "546:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "563:1:6",
																		"nodeType": "YulLiteral",
																		"src": "563:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "566:1:6",
																		"nodeType": "YulLiteral",
																		"src": "566:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "556:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "556:6:6"
																},
																"nativeSrc": "556:12:6",
																"nodeType": "YulFunctionCall",
																"src": "556:12:6"
															},
															"nativeSrc": "556:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "556:12:6"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "457:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "457:117:6"
											},
											{
												"body": {
													"nativeSrc": "628:54:6",
													"nodeType": "YulBlock",
													"src": "628:54:6",
													"statements": [
														{
															"nativeSrc": "638:38:6",
															"nodeType": "YulAssignment",
															"src": "638:38:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "656:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "656:5:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "663:2:6",
																				"nodeType": "YulLiteral",
																				"src": "663:2:6",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "652:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "652:3:6"
																		},
																		"nativeSrc": "652:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "652:14:6"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "672:2:6",
																				"nodeType": "YulLiteral",
																				"src": "672:2:6",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "668:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "668:3:6"
																		},
																		"nativeSrc": "668:7:6",
																		"nodeType": "YulFunctionCall",
																		"src": "668:7:6"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "648:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "648:3:6"
																},
																"nativeSrc": "648:28:6",
																"nodeType": "YulFunctionCall",
																"src": "648:28:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "638:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "638:6:6"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "580:102:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "611:5:6",
														"nodeType": "YulTypedName",
														"src": "611:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "621:6:6",
														"nodeType": "YulTypedName",
														"src": "621:6:6",
														"type": ""
													}
												],
												"src": "580:102:6"
											},
											{
												"body": {
													"nativeSrc": "716:152:6",
													"nodeType": "YulBlock",
													"src": "716:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "733:1:6",
																		"nodeType": "YulLiteral",
																		"src": "733:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "736:77:6",
																		"nodeType": "YulLiteral",
																		"src": "736:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "726:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "726:6:6"
																},
																"nativeSrc": "726:88:6",
																"nodeType": "YulFunctionCall",
																"src": "726:88:6"
															},
															"nativeSrc": "726:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "726:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "830:1:6",
																		"nodeType": "YulLiteral",
																		"src": "830:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "833:4:6",
																		"nodeType": "YulLiteral",
																		"src": "833:4:6",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "823:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "823:6:6"
																},
																"nativeSrc": "823:15:6",
																"nodeType": "YulFunctionCall",
																"src": "823:15:6"
															},
															"nativeSrc": "823:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "823:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "854:1:6",
																		"nodeType": "YulLiteral",
																		"src": "854:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "857:4:6",
																		"nodeType": "YulLiteral",
																		"src": "857:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "847:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "847:6:6"
																},
																"nativeSrc": "847:15:6",
																"nodeType": "YulFunctionCall",
																"src": "847:15:6"
															},
															"nativeSrc": "847:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "847:15:6"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "688:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "688:180:6"
											},
											{
												"body": {
													"nativeSrc": "917:238:6",
													"nodeType": "YulBlock",
													"src": "917:238:6",
													"statements": [
														{
															"nativeSrc": "927:58:6",
															"nodeType": "YulVariableDeclaration",
															"src": "927:58:6",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "949:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "949:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "979:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "979:4:6"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "957:21:6",
																			"nodeType": "YulIdentifier",
																			"src": "957:21:6"
																		},
																		"nativeSrc": "957:27:6",
																		"nodeType": "YulFunctionCall",
																		"src": "957:27:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "945:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "945:3:6"
																},
																"nativeSrc": "945:40:6",
																"nodeType": "YulFunctionCall",
																"src": "945:40:6"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "931:10:6",
																	"nodeType": "YulTypedName",
																	"src": "931:10:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1096:22:6",
																"nodeType": "YulBlock",
																"src": "1096:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1098:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "1098:16:6"
																			},
																			"nativeSrc": "1098:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1098:18:6"
																		},
																		"nativeSrc": "1098:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1098:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1039:10:6",
																				"nodeType": "YulIdentifier",
																				"src": "1039:10:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1051:18:6",
																				"nodeType": "YulLiteral",
																				"src": "1051:18:6",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "1036:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "1036:2:6"
																		},
																		"nativeSrc": "1036:34:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1036:34:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1075:10:6",
																				"nodeType": "YulIdentifier",
																				"src": "1075:10:6"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "1087:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1087:6:6"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1072:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "1072:2:6"
																		},
																		"nativeSrc": "1072:22:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1072:22:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1033:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "1033:2:6"
																},
																"nativeSrc": "1033:62:6",
																"nodeType": "YulFunctionCall",
																"src": "1033:62:6"
															},
															"nativeSrc": "1030:88:6",
															"nodeType": "YulIf",
															"src": "1030:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1134:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1134:2:6",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "1138:10:6",
																		"nodeType": "YulIdentifier",
																		"src": "1138:10:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1127:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1127:6:6"
																},
																"nativeSrc": "1127:22:6",
																"nodeType": "YulFunctionCall",
																"src": "1127:22:6"
															},
															"nativeSrc": "1127:22:6",
															"nodeType": "YulExpressionStatement",
															"src": "1127:22:6"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "874:281:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "903:6:6",
														"nodeType": "YulTypedName",
														"src": "903:6:6",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "911:4:6",
														"nodeType": "YulTypedName",
														"src": "911:4:6",
														"type": ""
													}
												],
												"src": "874:281:6"
											},
											{
												"body": {
													"nativeSrc": "1202:88:6",
													"nodeType": "YulBlock",
													"src": "1202:88:6",
													"statements": [
														{
															"nativeSrc": "1212:30:6",
															"nodeType": "YulAssignment",
															"src": "1212:30:6",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "1222:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "1222:18:6"
																},
																"nativeSrc": "1222:20:6",
																"nodeType": "YulFunctionCall",
																"src": "1222:20:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1212:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1212:6:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1271:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1271:6:6"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "1279:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "1279:4:6"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "1251:19:6",
																	"nodeType": "YulIdentifier",
																	"src": "1251:19:6"
																},
																"nativeSrc": "1251:33:6",
																"nodeType": "YulFunctionCall",
																"src": "1251:33:6"
															},
															"nativeSrc": "1251:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "1251:33:6"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "1161:129:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "1186:4:6",
														"nodeType": "YulTypedName",
														"src": "1186:4:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1195:6:6",
														"nodeType": "YulTypedName",
														"src": "1195:6:6",
														"type": ""
													}
												],
												"src": "1161:129:6"
											},
											{
												"body": {
													"nativeSrc": "1363:241:6",
													"nodeType": "YulBlock",
													"src": "1363:241:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "1468:22:6",
																"nodeType": "YulBlock",
																"src": "1468:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1470:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "1470:16:6"
																			},
																			"nativeSrc": "1470:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1470:18:6"
																		},
																		"nativeSrc": "1470:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1470:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1440:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1440:6:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1448:18:6",
																		"nodeType": "YulLiteral",
																		"src": "1448:18:6",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1437:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "1437:2:6"
																},
																"nativeSrc": "1437:30:6",
																"nodeType": "YulFunctionCall",
																"src": "1437:30:6"
															},
															"nativeSrc": "1434:56:6",
															"nodeType": "YulIf",
															"src": "1434:56:6"
														},
														{
															"nativeSrc": "1500:37:6",
															"nodeType": "YulAssignment",
															"src": "1500:37:6",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1530:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1530:6:6"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "1508:21:6",
																	"nodeType": "YulIdentifier",
																	"src": "1508:21:6"
																},
																"nativeSrc": "1508:29:6",
																"nodeType": "YulFunctionCall",
																"src": "1508:29:6"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1500:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1500:4:6"
																}
															]
														},
														{
															"nativeSrc": "1574:23:6",
															"nodeType": "YulAssignment",
															"src": "1574:23:6",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "1586:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "1586:4:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1592:4:6",
																		"nodeType": "YulLiteral",
																		"src": "1592:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1582:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1582:3:6"
																},
																"nativeSrc": "1582:15:6",
																"nodeType": "YulFunctionCall",
																"src": "1582:15:6"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1574:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1574:4:6"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nativeSrc": "1296:308:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "1347:6:6",
														"nodeType": "YulTypedName",
														"src": "1347:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "1358:4:6",
														"nodeType": "YulTypedName",
														"src": "1358:4:6",
														"type": ""
													}
												],
												"src": "1296:308:6"
											},
											{
												"body": {
													"nativeSrc": "1672:77:6",
													"nodeType": "YulBlock",
													"src": "1672:77:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "1689:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "1689:3:6"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "1694:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "1694:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1699:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1699:6:6"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "1683:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1683:5:6"
																},
																"nativeSrc": "1683:23:6",
																"nodeType": "YulFunctionCall",
																"src": "1683:23:6"
															},
															"nativeSrc": "1683:23:6",
															"nodeType": "YulExpressionStatement",
															"src": "1683:23:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "1726:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "1726:3:6"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "1731:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1731:6:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1722:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1722:3:6"
																		},
																		"nativeSrc": "1722:16:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1722:16:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1740:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1740:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1715:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1715:6:6"
																},
																"nativeSrc": "1715:27:6",
																"nodeType": "YulFunctionCall",
																"src": "1715:27:6"
															},
															"nativeSrc": "1715:27:6",
															"nodeType": "YulExpressionStatement",
															"src": "1715:27:6"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "1610:139:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1654:3:6",
														"nodeType": "YulTypedName",
														"src": "1654:3:6",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "1659:3:6",
														"nodeType": "YulTypedName",
														"src": "1659:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1664:6:6",
														"nodeType": "YulTypedName",
														"src": "1664:6:6",
														"type": ""
													}
												],
												"src": "1610:139:6"
											},
											{
												"body": {
													"nativeSrc": "1850:339:6",
													"nodeType": "YulBlock",
													"src": "1850:339:6",
													"statements": [
														{
															"nativeSrc": "1860:75:6",
															"nodeType": "YulAssignment",
															"src": "1860:75:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1927:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1927:6:6"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nativeSrc": "1885:41:6",
																			"nodeType": "YulIdentifier",
																			"src": "1885:41:6"
																		},
																		"nativeSrc": "1885:49:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1885:49:6"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "1869:15:6",
																	"nodeType": "YulIdentifier",
																	"src": "1869:15:6"
																},
																"nativeSrc": "1869:66:6",
																"nodeType": "YulFunctionCall",
																"src": "1869:66:6"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "1860:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1860:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "1951:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "1951:5:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1958:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1958:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1944:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1944:6:6"
																},
																"nativeSrc": "1944:21:6",
																"nodeType": "YulFunctionCall",
																"src": "1944:21:6"
															},
															"nativeSrc": "1944:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "1944:21:6"
														},
														{
															"nativeSrc": "1974:27:6",
															"nodeType": "YulVariableDeclaration",
															"src": "1974:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "1989:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "1989:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1996:4:6",
																		"nodeType": "YulLiteral",
																		"src": "1996:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1985:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1985:3:6"
																},
																"nativeSrc": "1985:16:6",
																"nodeType": "YulFunctionCall",
																"src": "1985:16:6"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "1978:3:6",
																	"nodeType": "YulTypedName",
																	"src": "1978:3:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2039:83:6",
																"nodeType": "YulBlock",
																"src": "2039:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "2041:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "2041:77:6"
																			},
																			"nativeSrc": "2041:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2041:79:6"
																		},
																		"nativeSrc": "2041:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2041:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "2020:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "2020:3:6"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2025:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2025:6:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2016:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2016:3:6"
																		},
																		"nativeSrc": "2016:16:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2016:16:6"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2034:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2034:3:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2013:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "2013:2:6"
																},
																"nativeSrc": "2013:25:6",
																"nodeType": "YulFunctionCall",
																"src": "2013:25:6"
															},
															"nativeSrc": "2010:112:6",
															"nodeType": "YulIf",
															"src": "2010:112:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "2166:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2166:3:6"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "2171:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2171:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2176:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2176:6:6"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2131:34:6",
																	"nodeType": "YulIdentifier",
																	"src": "2131:34:6"
																},
																"nativeSrc": "2131:52:6",
																"nodeType": "YulFunctionCall",
																"src": "2131:52:6"
															},
															"nativeSrc": "2131:52:6",
															"nodeType": "YulExpressionStatement",
															"src": "2131:52:6"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
												"nativeSrc": "1755:434:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1823:3:6",
														"nodeType": "YulTypedName",
														"src": "1823:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1828:6:6",
														"nodeType": "YulTypedName",
														"src": "1828:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1836:3:6",
														"nodeType": "YulTypedName",
														"src": "1836:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "1844:5:6",
														"nodeType": "YulTypedName",
														"src": "1844:5:6",
														"type": ""
													}
												],
												"src": "1755:434:6"
											},
											{
												"body": {
													"nativeSrc": "2282:282:6",
													"nodeType": "YulBlock",
													"src": "2282:282:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "2331:83:6",
																"nodeType": "YulBlock",
																"src": "2331:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "2333:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "2333:77:6"
																			},
																			"nativeSrc": "2333:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2333:79:6"
																		},
																		"nativeSrc": "2333:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2333:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "2310:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "2310:6:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2318:4:6",
																						"nodeType": "YulLiteral",
																						"src": "2318:4:6",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2306:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "2306:3:6"
																				},
																				"nativeSrc": "2306:17:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2306:17:6"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "2325:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "2325:3:6"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "2302:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2302:3:6"
																		},
																		"nativeSrc": "2302:27:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2302:27:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2295:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2295:6:6"
																},
																"nativeSrc": "2295:35:6",
																"nodeType": "YulFunctionCall",
																"src": "2295:35:6"
															},
															"nativeSrc": "2292:122:6",
															"nodeType": "YulIf",
															"src": "2292:122:6"
														},
														{
															"nativeSrc": "2423:27:6",
															"nodeType": "YulVariableDeclaration",
															"src": "2423:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2443:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2443:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2437:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "2437:5:6"
																},
																"nativeSrc": "2437:13:6",
																"nodeType": "YulFunctionCall",
																"src": "2437:13:6"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2427:6:6",
																	"nodeType": "YulTypedName",
																	"src": "2427:6:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2459:99:6",
															"nodeType": "YulAssignment",
															"src": "2459:99:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "2531:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2531:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2539:4:6",
																				"nodeType": "YulLiteral",
																				"src": "2539:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2527:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2527:3:6"
																		},
																		"nativeSrc": "2527:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2527:17:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2546:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2546:6:6"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2554:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2554:3:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
																	"nativeSrc": "2468:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "2468:58:6"
																},
																"nativeSrc": "2468:90:6",
																"nodeType": "YulFunctionCall",
																"src": "2468:90:6"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "2459:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "2459:5:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr_fromMemory",
												"nativeSrc": "2209:355:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2260:6:6",
														"nodeType": "YulTypedName",
														"src": "2260:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2268:3:6",
														"nodeType": "YulTypedName",
														"src": "2268:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "2276:5:6",
														"nodeType": "YulTypedName",
														"src": "2276:5:6",
														"type": ""
													}
												],
												"src": "2209:355:6"
											},
											{
												"body": {
													"nativeSrc": "2684:739:6",
													"nodeType": "YulBlock",
													"src": "2684:739:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "2730:83:6",
																"nodeType": "YulBlock",
																"src": "2730:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2732:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "2732:77:6"
																			},
																			"nativeSrc": "2732:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2732:79:6"
																		},
																		"nativeSrc": "2732:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2732:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2705:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "2705:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2714:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2714:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2701:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2701:3:6"
																		},
																		"nativeSrc": "2701:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2701:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2726:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2726:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2697:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2697:3:6"
																},
																"nativeSrc": "2697:32:6",
																"nodeType": "YulFunctionCall",
																"src": "2697:32:6"
															},
															"nativeSrc": "2694:119:6",
															"nodeType": "YulIf",
															"src": "2694:119:6"
														},
														{
															"nativeSrc": "2823:291:6",
															"nodeType": "YulBlock",
															"src": "2823:291:6",
															"statements": [
																{
																	"nativeSrc": "2838:38:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2838:38:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2862:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "2862:9:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2873:1:6",
																						"nodeType": "YulLiteral",
																						"src": "2873:1:6",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2858:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "2858:3:6"
																				},
																				"nativeSrc": "2858:17:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2858:17:6"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "2852:5:6",
																			"nodeType": "YulIdentifier",
																			"src": "2852:5:6"
																		},
																		"nativeSrc": "2852:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2852:24:6"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2842:6:6",
																			"nodeType": "YulTypedName",
																			"src": "2842:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "2923:83:6",
																		"nodeType": "YulBlock",
																		"src": "2923:83:6",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "2925:77:6",
																						"nodeType": "YulIdentifier",
																						"src": "2925:77:6"
																					},
																					"nativeSrc": "2925:79:6",
																					"nodeType": "YulFunctionCall",
																					"src": "2925:79:6"
																				},
																				"nativeSrc": "2925:79:6",
																				"nodeType": "YulExpressionStatement",
																				"src": "2925:79:6"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "2895:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2895:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2903:18:6",
																				"nodeType": "YulLiteral",
																				"src": "2903:18:6",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "2892:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "2892:2:6"
																		},
																		"nativeSrc": "2892:30:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2892:30:6"
																	},
																	"nativeSrc": "2889:117:6",
																	"nodeType": "YulIf",
																	"src": "2889:117:6"
																},
																{
																	"nativeSrc": "3020:84:6",
																	"nodeType": "YulAssignment",
																	"src": "3020:84:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3076:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "3076:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3087:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "3087:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3072:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "3072:3:6"
																				},
																				"nativeSrc": "3072:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3072:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3096:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "3096:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nativeSrc": "3030:41:6",
																			"nodeType": "YulIdentifier",
																			"src": "3030:41:6"
																		},
																		"nativeSrc": "3030:74:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3030:74:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3020:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "3020:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3124:292:6",
															"nodeType": "YulBlock",
															"src": "3124:292:6",
															"statements": [
																{
																	"nativeSrc": "3139:39:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3139:39:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3163:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "3163:9:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3174:2:6",
																						"nodeType": "YulLiteral",
																						"src": "3174:2:6",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3159:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "3159:3:6"
																				},
																				"nativeSrc": "3159:18:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3159:18:6"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "3153:5:6",
																			"nodeType": "YulIdentifier",
																			"src": "3153:5:6"
																		},
																		"nativeSrc": "3153:25:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3153:25:6"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3143:6:6",
																			"nodeType": "YulTypedName",
																			"src": "3143:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "3225:83:6",
																		"nodeType": "YulBlock",
																		"src": "3225:83:6",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "3227:77:6",
																						"nodeType": "YulIdentifier",
																						"src": "3227:77:6"
																					},
																					"nativeSrc": "3227:79:6",
																					"nodeType": "YulFunctionCall",
																					"src": "3227:79:6"
																				},
																				"nativeSrc": "3227:79:6",
																				"nodeType": "YulExpressionStatement",
																				"src": "3227:79:6"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3197:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "3197:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3205:18:6",
																				"nodeType": "YulLiteral",
																				"src": "3205:18:6",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "3194:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "3194:2:6"
																		},
																		"nativeSrc": "3194:30:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3194:30:6"
																	},
																	"nativeSrc": "3191:117:6",
																	"nodeType": "YulIf",
																	"src": "3191:117:6"
																},
																{
																	"nativeSrc": "3322:84:6",
																	"nodeType": "YulAssignment",
																	"src": "3322:84:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3378:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "3378:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3389:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "3389:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3374:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "3374:3:6"
																				},
																				"nativeSrc": "3374:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3374:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3398:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "3398:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nativeSrc": "3332:41:6",
																			"nodeType": "YulIdentifier",
																			"src": "3332:41:6"
																		},
																		"nativeSrc": "3332:74:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3332:74:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3322:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "3322:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nativeSrc": "2570:853:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2646:9:6",
														"nodeType": "YulTypedName",
														"src": "2646:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2657:7:6",
														"nodeType": "YulTypedName",
														"src": "2657:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2669:6:6",
														"nodeType": "YulTypedName",
														"src": "2669:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2677:6:6",
														"nodeType": "YulTypedName",
														"src": "2677:6:6",
														"type": ""
													}
												],
												"src": "2570:853:6"
											},
											{
												"body": {
													"nativeSrc": "3488:40:6",
													"nodeType": "YulBlock",
													"src": "3488:40:6",
													"statements": [
														{
															"nativeSrc": "3499:22:6",
															"nodeType": "YulAssignment",
															"src": "3499:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3515:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "3515:5:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3509:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "3509:5:6"
																},
																"nativeSrc": "3509:12:6",
																"nodeType": "YulFunctionCall",
																"src": "3509:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "3499:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3499:6:6"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "3429:99:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3471:5:6",
														"nodeType": "YulTypedName",
														"src": "3471:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "3481:6:6",
														"nodeType": "YulTypedName",
														"src": "3481:6:6",
														"type": ""
													}
												],
												"src": "3429:99:6"
											},
											{
												"body": {
													"nativeSrc": "3562:152:6",
													"nodeType": "YulBlock",
													"src": "3562:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3579:1:6",
																		"nodeType": "YulLiteral",
																		"src": "3579:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3582:77:6",
																		"nodeType": "YulLiteral",
																		"src": "3582:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3572:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3572:6:6"
																},
																"nativeSrc": "3572:88:6",
																"nodeType": "YulFunctionCall",
																"src": "3572:88:6"
															},
															"nativeSrc": "3572:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "3572:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3676:1:6",
																		"nodeType": "YulLiteral",
																		"src": "3676:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3679:4:6",
																		"nodeType": "YulLiteral",
																		"src": "3679:4:6",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3669:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3669:6:6"
																},
																"nativeSrc": "3669:15:6",
																"nodeType": "YulFunctionCall",
																"src": "3669:15:6"
															},
															"nativeSrc": "3669:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "3669:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3700:1:6",
																		"nodeType": "YulLiteral",
																		"src": "3700:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3703:4:6",
																		"nodeType": "YulLiteral",
																		"src": "3703:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3693:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3693:6:6"
																},
																"nativeSrc": "3693:15:6",
																"nodeType": "YulFunctionCall",
																"src": "3693:15:6"
															},
															"nativeSrc": "3693:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "3693:15:6"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "3534:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "3534:180:6"
											},
											{
												"body": {
													"nativeSrc": "3771:269:6",
													"nodeType": "YulBlock",
													"src": "3771:269:6",
													"statements": [
														{
															"nativeSrc": "3781:22:6",
															"nodeType": "YulAssignment",
															"src": "3781:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3795:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "3795:4:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3801:1:6",
																		"nodeType": "YulLiteral",
																		"src": "3801:1:6",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "3791:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3791:3:6"
																},
																"nativeSrc": "3791:12:6",
																"nodeType": "YulFunctionCall",
																"src": "3791:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "3781:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3781:6:6"
																}
															]
														},
														{
															"nativeSrc": "3812:38:6",
															"nodeType": "YulVariableDeclaration",
															"src": "3812:38:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3842:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "3842:4:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3848:1:6",
																		"nodeType": "YulLiteral",
																		"src": "3848:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3838:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3838:3:6"
																},
																"nativeSrc": "3838:12:6",
																"nodeType": "YulFunctionCall",
																"src": "3838:12:6"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "3816:18:6",
																	"nodeType": "YulTypedName",
																	"src": "3816:18:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3889:51:6",
																"nodeType": "YulBlock",
																"src": "3889:51:6",
																"statements": [
																	{
																		"nativeSrc": "3903:27:6",
																		"nodeType": "YulAssignment",
																		"src": "3903:27:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "3917:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "3917:6:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3925:4:6",
																					"nodeType": "YulLiteral",
																					"src": "3925:4:6",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "3913:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "3913:3:6"
																			},
																			"nativeSrc": "3913:17:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3913:17:6"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "3903:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "3903:6:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "3869:18:6",
																		"nodeType": "YulIdentifier",
																		"src": "3869:18:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3862:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3862:6:6"
																},
																"nativeSrc": "3862:26:6",
																"nodeType": "YulFunctionCall",
																"src": "3862:26:6"
															},
															"nativeSrc": "3859:81:6",
															"nodeType": "YulIf",
															"src": "3859:81:6"
														},
														{
															"body": {
																"nativeSrc": "3992:42:6",
																"nodeType": "YulBlock",
																"src": "3992:42:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "4006:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "4006:16:6"
																			},
																			"nativeSrc": "4006:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4006:18:6"
																		},
																		"nativeSrc": "4006:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "4006:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "3956:18:6",
																		"nodeType": "YulIdentifier",
																		"src": "3956:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "3979:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "3979:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3987:2:6",
																				"nodeType": "YulLiteral",
																				"src": "3987:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "3976:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "3976:2:6"
																		},
																		"nativeSrc": "3976:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3976:14:6"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "3953:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "3953:2:6"
																},
																"nativeSrc": "3953:38:6",
																"nodeType": "YulFunctionCall",
																"src": "3953:38:6"
															},
															"nativeSrc": "3950:84:6",
															"nodeType": "YulIf",
															"src": "3950:84:6"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "3720:320:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3755:4:6",
														"nodeType": "YulTypedName",
														"src": "3755:4:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "3764:6:6",
														"nodeType": "YulTypedName",
														"src": "3764:6:6",
														"type": ""
													}
												],
												"src": "3720:320:6"
											},
											{
												"body": {
													"nativeSrc": "4100:87:6",
													"nodeType": "YulBlock",
													"src": "4100:87:6",
													"statements": [
														{
															"nativeSrc": "4110:11:6",
															"nodeType": "YulAssignment",
															"src": "4110:11:6",
															"value": {
																"name": "ptr",
																"nativeSrc": "4118:3:6",
																"nodeType": "YulIdentifier",
																"src": "4118:3:6"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "4110:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "4110:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4138:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4138:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "4141:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "4141:3:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4131:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4131:6:6"
																},
																"nativeSrc": "4131:14:6",
																"nodeType": "YulFunctionCall",
																"src": "4131:14:6"
															},
															"nativeSrc": "4131:14:6",
															"nodeType": "YulExpressionStatement",
															"src": "4131:14:6"
														},
														{
															"nativeSrc": "4154:26:6",
															"nodeType": "YulAssignment",
															"src": "4154:26:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4172:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4172:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4175:4:6",
																		"nodeType": "YulLiteral",
																		"src": "4175:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "4162:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "4162:9:6"
																},
																"nativeSrc": "4162:18:6",
																"nodeType": "YulFunctionCall",
																"src": "4162:18:6"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "4154:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "4154:4:6"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "4046:141:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "4087:3:6",
														"nodeType": "YulTypedName",
														"src": "4087:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "4095:4:6",
														"nodeType": "YulTypedName",
														"src": "4095:4:6",
														"type": ""
													}
												],
												"src": "4046:141:6"
											},
											{
												"body": {
													"nativeSrc": "4237:49:6",
													"nodeType": "YulBlock",
													"src": "4237:49:6",
													"statements": [
														{
															"nativeSrc": "4247:33:6",
															"nodeType": "YulAssignment",
															"src": "4247:33:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4265:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "4265:5:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4272:2:6",
																				"nodeType": "YulLiteral",
																				"src": "4272:2:6",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4261:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4261:3:6"
																		},
																		"nativeSrc": "4261:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4261:14:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4277:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4277:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "4257:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4257:3:6"
																},
																"nativeSrc": "4257:23:6",
																"nodeType": "YulFunctionCall",
																"src": "4257:23:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "4247:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4247:6:6"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "4193:93:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4220:5:6",
														"nodeType": "YulTypedName",
														"src": "4220:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "4230:6:6",
														"nodeType": "YulTypedName",
														"src": "4230:6:6",
														"type": ""
													}
												],
												"src": "4193:93:6"
											},
											{
												"body": {
													"nativeSrc": "4345:54:6",
													"nodeType": "YulBlock",
													"src": "4345:54:6",
													"statements": [
														{
															"nativeSrc": "4355:37:6",
															"nodeType": "YulAssignment",
															"src": "4355:37:6",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "4380:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "4380:4:6"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "4386:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "4386:5:6"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "4376:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4376:3:6"
																},
																"nativeSrc": "4376:16:6",
																"nodeType": "YulFunctionCall",
																"src": "4376:16:6"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "4355:8:6",
																	"nodeType": "YulIdentifier",
																	"src": "4355:8:6"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "4292:107:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "4320:4:6",
														"nodeType": "YulTypedName",
														"src": "4320:4:6",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "4326:5:6",
														"nodeType": "YulTypedName",
														"src": "4326:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "4336:8:6",
														"nodeType": "YulTypedName",
														"src": "4336:8:6",
														"type": ""
													}
												],
												"src": "4292:107:6"
											},
											{
												"body": {
													"nativeSrc": "4481:317:6",
													"nodeType": "YulBlock",
													"src": "4481:317:6",
													"statements": [
														{
															"nativeSrc": "4491:35:6",
															"nodeType": "YulVariableDeclaration",
															"src": "4491:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "4512:10:6",
																		"nodeType": "YulIdentifier",
																		"src": "4512:10:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4524:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4524:1:6",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "4508:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4508:3:6"
																},
																"nativeSrc": "4508:18:6",
																"nodeType": "YulFunctionCall",
																"src": "4508:18:6"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "4495:9:6",
																	"nodeType": "YulTypedName",
																	"src": "4495:9:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4535:109:6",
															"nodeType": "YulVariableDeclaration",
															"src": "4535:109:6",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "4566:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "4566:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4577:66:6",
																		"nodeType": "YulLiteral",
																		"src": "4577:66:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "4547:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "4547:18:6"
																},
																"nativeSrc": "4547:97:6",
																"nodeType": "YulFunctionCall",
																"src": "4547:97:6"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "4539:4:6",
																	"nodeType": "YulTypedName",
																	"src": "4539:4:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4653:51:6",
															"nodeType": "YulAssignment",
															"src": "4653:51:6",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "4684:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "4684:9:6"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "4695:8:6",
																		"nodeType": "YulIdentifier",
																		"src": "4695:8:6"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "4665:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "4665:18:6"
																},
																"nativeSrc": "4665:39:6",
																"nodeType": "YulFunctionCall",
																"src": "4665:39:6"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "4653:8:6",
																	"nodeType": "YulIdentifier",
																	"src": "4653:8:6"
																}
															]
														},
														{
															"nativeSrc": "4713:30:6",
															"nodeType": "YulAssignment",
															"src": "4713:30:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4726:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "4726:5:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "4737:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "4737:4:6"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "4733:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4733:3:6"
																		},
																		"nativeSrc": "4733:9:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4733:9:6"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4722:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4722:3:6"
																},
																"nativeSrc": "4722:21:6",
																"nodeType": "YulFunctionCall",
																"src": "4722:21:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4713:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "4713:5:6"
																}
															]
														},
														{
															"nativeSrc": "4752:40:6",
															"nodeType": "YulAssignment",
															"src": "4752:40:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4765:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "4765:5:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "4776:8:6",
																				"nodeType": "YulIdentifier",
																				"src": "4776:8:6"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "4786:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "4786:4:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4772:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4772:3:6"
																		},
																		"nativeSrc": "4772:19:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4772:19:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "4762:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "4762:2:6"
																},
																"nativeSrc": "4762:30:6",
																"nodeType": "YulFunctionCall",
																"src": "4762:30:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "4752:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4752:6:6"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "4405:393:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4442:5:6",
														"nodeType": "YulTypedName",
														"src": "4442:5:6",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "4449:10:6",
														"nodeType": "YulTypedName",
														"src": "4449:10:6",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "4461:8:6",
														"nodeType": "YulTypedName",
														"src": "4461:8:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "4474:6:6",
														"nodeType": "YulTypedName",
														"src": "4474:6:6",
														"type": ""
													}
												],
												"src": "4405:393:6"
											},
											{
												"body": {
													"nativeSrc": "4849:32:6",
													"nodeType": "YulBlock",
													"src": "4849:32:6",
													"statements": [
														{
															"nativeSrc": "4859:16:6",
															"nodeType": "YulAssignment",
															"src": "4859:16:6",
															"value": {
																"name": "value",
																"nativeSrc": "4870:5:6",
																"nodeType": "YulIdentifier",
																"src": "4870:5:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4859:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "4859:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "4804:77:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4831:5:6",
														"nodeType": "YulTypedName",
														"src": "4831:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4841:7:6",
														"nodeType": "YulTypedName",
														"src": "4841:7:6",
														"type": ""
													}
												],
												"src": "4804:77:6"
											},
											{
												"body": {
													"nativeSrc": "4919:28:6",
													"nodeType": "YulBlock",
													"src": "4919:28:6",
													"statements": [
														{
															"nativeSrc": "4929:12:6",
															"nodeType": "YulAssignment",
															"src": "4929:12:6",
															"value": {
																"name": "value",
																"nativeSrc": "4936:5:6",
																"nodeType": "YulIdentifier",
																"src": "4936:5:6"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "4929:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4929:3:6"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "4887:60:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4905:5:6",
														"nodeType": "YulTypedName",
														"src": "4905:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "4915:3:6",
														"nodeType": "YulTypedName",
														"src": "4915:3:6",
														"type": ""
													}
												],
												"src": "4887:60:6"
											},
											{
												"body": {
													"nativeSrc": "5013:82:6",
													"nodeType": "YulBlock",
													"src": "5013:82:6",
													"statements": [
														{
															"nativeSrc": "5023:66:6",
															"nodeType": "YulAssignment",
															"src": "5023:66:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5081:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "5081:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "5063:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "5063:17:6"
																				},
																				"nativeSrc": "5063:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "5063:24:6"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "5054:8:6",
																			"nodeType": "YulIdentifier",
																			"src": "5054:8:6"
																		},
																		"nativeSrc": "5054:34:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5054:34:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5036:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "5036:17:6"
																},
																"nativeSrc": "5036:53:6",
																"nodeType": "YulFunctionCall",
																"src": "5036:53:6"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "5023:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "5023:9:6"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "4953:142:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4993:5:6",
														"nodeType": "YulTypedName",
														"src": "4993:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "5003:9:6",
														"nodeType": "YulTypedName",
														"src": "5003:9:6",
														"type": ""
													}
												],
												"src": "4953:142:6"
											},
											{
												"body": {
													"nativeSrc": "5148:28:6",
													"nodeType": "YulBlock",
													"src": "5148:28:6",
													"statements": [
														{
															"nativeSrc": "5158:12:6",
															"nodeType": "YulAssignment",
															"src": "5158:12:6",
															"value": {
																"name": "value",
																"nativeSrc": "5165:5:6",
																"nodeType": "YulIdentifier",
																"src": "5165:5:6"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "5158:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5158:3:6"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "5101:75:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5134:5:6",
														"nodeType": "YulTypedName",
														"src": "5134:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "5144:3:6",
														"nodeType": "YulTypedName",
														"src": "5144:3:6",
														"type": ""
													}
												],
												"src": "5101:75:6"
											},
											{
												"body": {
													"nativeSrc": "5258:193:6",
													"nodeType": "YulBlock",
													"src": "5258:193:6",
													"statements": [
														{
															"nativeSrc": "5268:63:6",
															"nodeType": "YulVariableDeclaration",
															"src": "5268:63:6",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "5323:7:6",
																		"nodeType": "YulIdentifier",
																		"src": "5323:7:6"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "5292:30:6",
																	"nodeType": "YulIdentifier",
																	"src": "5292:30:6"
																},
																"nativeSrc": "5292:39:6",
																"nodeType": "YulFunctionCall",
																"src": "5292:39:6"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "5272:16:6",
																	"nodeType": "YulTypedName",
																	"src": "5272:16:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "5347:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "5347:4:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "5387:4:6",
																						"nodeType": "YulIdentifier",
																						"src": "5387:4:6"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "5381:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "5381:5:6"
																				},
																				"nativeSrc": "5381:11:6",
																				"nodeType": "YulFunctionCall",
																				"src": "5381:11:6"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "5394:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "5394:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "5426:16:6",
																						"nodeType": "YulIdentifier",
																						"src": "5426:16:6"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "5402:23:6",
																					"nodeType": "YulIdentifier",
																					"src": "5402:23:6"
																				},
																				"nativeSrc": "5402:41:6",
																				"nodeType": "YulFunctionCall",
																				"src": "5402:41:6"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "5353:27:6",
																			"nodeType": "YulIdentifier",
																			"src": "5353:27:6"
																		},
																		"nativeSrc": "5353:91:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5353:91:6"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "5340:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5340:6:6"
																},
																"nativeSrc": "5340:105:6",
																"nodeType": "YulFunctionCall",
																"src": "5340:105:6"
															},
															"nativeSrc": "5340:105:6",
															"nodeType": "YulExpressionStatement",
															"src": "5340:105:6"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "5182:269:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "5235:4:6",
														"nodeType": "YulTypedName",
														"src": "5235:4:6",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "5241:6:6",
														"nodeType": "YulTypedName",
														"src": "5241:6:6",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "5249:7:6",
														"nodeType": "YulTypedName",
														"src": "5249:7:6",
														"type": ""
													}
												],
												"src": "5182:269:6"
											},
											{
												"body": {
													"nativeSrc": "5506:24:6",
													"nodeType": "YulBlock",
													"src": "5506:24:6",
													"statements": [
														{
															"nativeSrc": "5516:8:6",
															"nodeType": "YulAssignment",
															"src": "5516:8:6",
															"value": {
																"kind": "number",
																"nativeSrc": "5523:1:6",
																"nodeType": "YulLiteral",
																"src": "5523:1:6",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "5516:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5516:3:6"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "5457:73:6",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "5502:3:6",
														"nodeType": "YulTypedName",
														"src": "5502:3:6",
														"type": ""
													}
												],
												"src": "5457:73:6"
											},
											{
												"body": {
													"nativeSrc": "5589:136:6",
													"nodeType": "YulBlock",
													"src": "5589:136:6",
													"statements": [
														{
															"nativeSrc": "5599:46:6",
															"nodeType": "YulVariableDeclaration",
															"src": "5599:46:6",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "5613:30:6",
																	"nodeType": "YulIdentifier",
																	"src": "5613:30:6"
																},
																"nativeSrc": "5613:32:6",
																"nodeType": "YulFunctionCall",
																"src": "5613:32:6"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "5603:6:6",
																	"nodeType": "YulTypedName",
																	"src": "5603:6:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "5698:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "5698:4:6"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "5704:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "5704:6:6"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "5712:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "5712:6:6"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "5654:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "5654:43:6"
																},
																"nativeSrc": "5654:65:6",
																"nodeType": "YulFunctionCall",
																"src": "5654:65:6"
															},
															"nativeSrc": "5654:65:6",
															"nodeType": "YulExpressionStatement",
															"src": "5654:65:6"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "5536:189:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "5575:4:6",
														"nodeType": "YulTypedName",
														"src": "5575:4:6",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "5581:6:6",
														"nodeType": "YulTypedName",
														"src": "5581:6:6",
														"type": ""
													}
												],
												"src": "5536:189:6"
											},
											{
												"body": {
													"nativeSrc": "5781:136:6",
													"nodeType": "YulBlock",
													"src": "5781:136:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "5848:63:6",
																"nodeType": "YulBlock",
																"src": "5848:63:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "5892:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "5892:5:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5899:1:6",
																					"nodeType": "YulLiteral",
																					"src": "5899:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "5862:29:6",
																				"nodeType": "YulIdentifier",
																				"src": "5862:29:6"
																			},
																			"nativeSrc": "5862:39:6",
																			"nodeType": "YulFunctionCall",
																			"src": "5862:39:6"
																		},
																		"nativeSrc": "5862:39:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "5862:39:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "5801:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "5801:5:6"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "5808:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "5808:3:6"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "5798:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "5798:2:6"
																},
																"nativeSrc": "5798:14:6",
																"nodeType": "YulFunctionCall",
																"src": "5798:14:6"
															},
															"nativeSrc": "5791:120:6",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "5813:26:6",
																"nodeType": "YulBlock",
																"src": "5813:26:6",
																"statements": [
																	{
																		"nativeSrc": "5815:22:6",
																		"nodeType": "YulAssignment",
																		"src": "5815:22:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "5828:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "5828:5:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5835:1:6",
																					"nodeType": "YulLiteral",
																					"src": "5835:1:6",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "5824:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "5824:3:6"
																			},
																			"nativeSrc": "5824:13:6",
																			"nodeType": "YulFunctionCall",
																			"src": "5824:13:6"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "5815:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "5815:5:6"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "5795:2:6",
																"nodeType": "YulBlock",
																"src": "5795:2:6",
																"statements": []
															},
															"src": "5791:120:6"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "5731:186:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "5769:5:6",
														"nodeType": "YulTypedName",
														"src": "5769:5:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "5776:3:6",
														"nodeType": "YulTypedName",
														"src": "5776:3:6",
														"type": ""
													}
												],
												"src": "5731:186:6"
											},
											{
												"body": {
													"nativeSrc": "6002:464:6",
													"nodeType": "YulBlock",
													"src": "6002:464:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "6028:431:6",
																"nodeType": "YulBlock",
																"src": "6028:431:6",
																"statements": [
																	{
																		"nativeSrc": "6042:54:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6042:54:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "6090:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "6090:5:6"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "6058:31:6",
																				"nodeType": "YulIdentifier",
																				"src": "6058:31:6"
																			},
																			"nativeSrc": "6058:38:6",
																			"nodeType": "YulFunctionCall",
																			"src": "6058:38:6"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "6046:8:6",
																				"nodeType": "YulTypedName",
																				"src": "6046:8:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "6109:63:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6109:63:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "6132:8:6",
																					"nodeType": "YulIdentifier",
																					"src": "6132:8:6"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "6160:10:6",
																							"nodeType": "YulIdentifier",
																							"src": "6160:10:6"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "6142:17:6",
																						"nodeType": "YulIdentifier",
																						"src": "6142:17:6"
																					},
																					"nativeSrc": "6142:29:6",
																					"nodeType": "YulFunctionCall",
																					"src": "6142:29:6"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6128:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "6128:3:6"
																			},
																			"nativeSrc": "6128:44:6",
																			"nodeType": "YulFunctionCall",
																			"src": "6128:44:6"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "6113:11:6",
																				"nodeType": "YulTypedName",
																				"src": "6113:11:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "6329:27:6",
																			"nodeType": "YulBlock",
																			"src": "6329:27:6",
																			"statements": [
																				{
																					"nativeSrc": "6331:23:6",
																					"nodeType": "YulAssignment",
																					"src": "6331:23:6",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "6346:8:6",
																						"nodeType": "YulIdentifier",
																						"src": "6346:8:6"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "6331:11:6",
																							"nodeType": "YulIdentifier",
																							"src": "6331:11:6"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "6313:10:6",
																					"nodeType": "YulIdentifier",
																					"src": "6313:10:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6325:2:6",
																					"nodeType": "YulLiteral",
																					"src": "6325:2:6",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "6310:2:6",
																				"nodeType": "YulIdentifier",
																				"src": "6310:2:6"
																			},
																			"nativeSrc": "6310:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "6310:18:6"
																		},
																		"nativeSrc": "6307:49:6",
																		"nodeType": "YulIf",
																		"src": "6307:49:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "6398:11:6",
																					"nodeType": "YulIdentifier",
																					"src": "6398:11:6"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "6415:8:6",
																							"nodeType": "YulIdentifier",
																							"src": "6415:8:6"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "6443:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "6443:3:6"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "6425:17:6",
																								"nodeType": "YulIdentifier",
																								"src": "6425:17:6"
																							},
																							"nativeSrc": "6425:22:6",
																							"nodeType": "YulFunctionCall",
																							"src": "6425:22:6"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "6411:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "6411:3:6"
																					},
																					"nativeSrc": "6411:37:6",
																					"nodeType": "YulFunctionCall",
																					"src": "6411:37:6"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "6369:28:6",
																				"nodeType": "YulIdentifier",
																				"src": "6369:28:6"
																			},
																			"nativeSrc": "6369:80:6",
																			"nodeType": "YulFunctionCall",
																			"src": "6369:80:6"
																		},
																		"nativeSrc": "6369:80:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "6369:80:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "6019:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "6019:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6024:2:6",
																		"nodeType": "YulLiteral",
																		"src": "6024:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6016:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "6016:2:6"
																},
																"nativeSrc": "6016:11:6",
																"nodeType": "YulFunctionCall",
																"src": "6016:11:6"
															},
															"nativeSrc": "6013:446:6",
															"nodeType": "YulIf",
															"src": "6013:446:6"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "5923:543:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "5978:5:6",
														"nodeType": "YulTypedName",
														"src": "5978:5:6",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "5985:3:6",
														"nodeType": "YulTypedName",
														"src": "5985:3:6",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "5990:10:6",
														"nodeType": "YulTypedName",
														"src": "5990:10:6",
														"type": ""
													}
												],
												"src": "5923:543:6"
											},
											{
												"body": {
													"nativeSrc": "6535:54:6",
													"nodeType": "YulBlock",
													"src": "6535:54:6",
													"statements": [
														{
															"nativeSrc": "6545:37:6",
															"nodeType": "YulAssignment",
															"src": "6545:37:6",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "6570:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "6570:4:6"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "6576:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "6576:5:6"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "6566:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6566:3:6"
																},
																"nativeSrc": "6566:16:6",
																"nodeType": "YulFunctionCall",
																"src": "6566:16:6"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "6545:8:6",
																	"nodeType": "YulIdentifier",
																	"src": "6545:8:6"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "6472:117:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "6510:4:6",
														"nodeType": "YulTypedName",
														"src": "6510:4:6",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "6516:5:6",
														"nodeType": "YulTypedName",
														"src": "6516:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "6526:8:6",
														"nodeType": "YulTypedName",
														"src": "6526:8:6",
														"type": ""
													}
												],
												"src": "6472:117:6"
											},
											{
												"body": {
													"nativeSrc": "6646:118:6",
													"nodeType": "YulBlock",
													"src": "6646:118:6",
													"statements": [
														{
															"nativeSrc": "6656:68:6",
															"nodeType": "YulVariableDeclaration",
															"src": "6656:68:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "6705:1:6",
																						"nodeType": "YulLiteral",
																						"src": "6705:1:6",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "6708:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "6708:5:6"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "6701:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "6701:3:6"
																				},
																				"nativeSrc": "6701:13:6",
																				"nodeType": "YulFunctionCall",
																				"src": "6701:13:6"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "6720:1:6",
																						"nodeType": "YulLiteral",
																						"src": "6720:1:6",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "6716:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "6716:3:6"
																				},
																				"nativeSrc": "6716:6:6",
																				"nodeType": "YulFunctionCall",
																				"src": "6716:6:6"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "6672:28:6",
																			"nodeType": "YulIdentifier",
																			"src": "6672:28:6"
																		},
																		"nativeSrc": "6672:51:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6672:51:6"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "6668:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6668:3:6"
																},
																"nativeSrc": "6668:56:6",
																"nodeType": "YulFunctionCall",
																"src": "6668:56:6"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "6660:4:6",
																	"nodeType": "YulTypedName",
																	"src": "6660:4:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6733:25:6",
															"nodeType": "YulAssignment",
															"src": "6733:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6747:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "6747:4:6"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "6753:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "6753:4:6"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6743:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6743:3:6"
																},
																"nativeSrc": "6743:15:6",
																"nodeType": "YulFunctionCall",
																"src": "6743:15:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "6733:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6733:6:6"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "6595:169:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "6623:4:6",
														"nodeType": "YulTypedName",
														"src": "6623:4:6",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "6629:5:6",
														"nodeType": "YulTypedName",
														"src": "6629:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "6639:6:6",
														"nodeType": "YulTypedName",
														"src": "6639:6:6",
														"type": ""
													}
												],
												"src": "6595:169:6"
											},
											{
												"body": {
													"nativeSrc": "6850:214:6",
													"nodeType": "YulBlock",
													"src": "6850:214:6",
													"statements": [
														{
															"nativeSrc": "6983:37:6",
															"nodeType": "YulAssignment",
															"src": "6983:37:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7010:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "7010:4:6"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "7016:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "7016:3:6"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "6991:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "6991:18:6"
																},
																"nativeSrc": "6991:29:6",
																"nodeType": "YulFunctionCall",
																"src": "6991:29:6"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "6983:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "6983:4:6"
																}
															]
														},
														{
															"nativeSrc": "7029:29:6",
															"nodeType": "YulAssignment",
															"src": "7029:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7040:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "7040:4:6"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "7050:1:6",
																				"nodeType": "YulLiteral",
																				"src": "7050:1:6",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "7053:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "7053:3:6"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "7046:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7046:3:6"
																		},
																		"nativeSrc": "7046:11:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7046:11:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "7037:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "7037:2:6"
																},
																"nativeSrc": "7037:21:6",
																"nodeType": "YulFunctionCall",
																"src": "7037:21:6"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "7029:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "7029:4:6"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "6769:295:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "6831:4:6",
														"nodeType": "YulTypedName",
														"src": "6831:4:6",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "6837:3:6",
														"nodeType": "YulTypedName",
														"src": "6837:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "6845:4:6",
														"nodeType": "YulTypedName",
														"src": "6845:4:6",
														"type": ""
													}
												],
												"src": "6769:295:6"
											},
											{
												"body": {
													"nativeSrc": "7161:1303:6",
													"nodeType": "YulBlock",
													"src": "7161:1303:6",
													"statements": [
														{
															"nativeSrc": "7172:51:6",
															"nodeType": "YulVariableDeclaration",
															"src": "7172:51:6",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "7219:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "7219:3:6"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "7186:32:6",
																	"nodeType": "YulIdentifier",
																	"src": "7186:32:6"
																},
																"nativeSrc": "7186:37:6",
																"nodeType": "YulFunctionCall",
																"src": "7186:37:6"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "7176:6:6",
																	"nodeType": "YulTypedName",
																	"src": "7176:6:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7308:22:6",
																"nodeType": "YulBlock",
																"src": "7308:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "7310:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "7310:16:6"
																			},
																			"nativeSrc": "7310:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "7310:18:6"
																		},
																		"nativeSrc": "7310:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "7310:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "7280:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "7280:6:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7288:18:6",
																		"nodeType": "YulLiteral",
																		"src": "7288:18:6",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7277:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "7277:2:6"
																},
																"nativeSrc": "7277:30:6",
																"nodeType": "YulFunctionCall",
																"src": "7277:30:6"
															},
															"nativeSrc": "7274:56:6",
															"nodeType": "YulIf",
															"src": "7274:56:6"
														},
														{
															"nativeSrc": "7340:52:6",
															"nodeType": "YulVariableDeclaration",
															"src": "7340:52:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "7386:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "7386:4:6"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "7380:5:6",
																			"nodeType": "YulIdentifier",
																			"src": "7380:5:6"
																		},
																		"nativeSrc": "7380:11:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7380:11:6"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "7354:25:6",
																	"nodeType": "YulIdentifier",
																	"src": "7354:25:6"
																},
																"nativeSrc": "7354:38:6",
																"nodeType": "YulFunctionCall",
																"src": "7354:38:6"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "7344:6:6",
																	"nodeType": "YulTypedName",
																	"src": "7344:6:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "7485:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "7485:4:6"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "7491:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "7491:6:6"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "7499:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "7499:6:6"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "7439:45:6",
																	"nodeType": "YulIdentifier",
																	"src": "7439:45:6"
																},
																"nativeSrc": "7439:67:6",
																"nodeType": "YulFunctionCall",
																"src": "7439:67:6"
															},
															"nativeSrc": "7439:67:6",
															"nodeType": "YulExpressionStatement",
															"src": "7439:67:6"
														},
														{
															"nativeSrc": "7516:18:6",
															"nodeType": "YulVariableDeclaration",
															"src": "7516:18:6",
															"value": {
																"kind": "number",
																"nativeSrc": "7533:1:6",
																"nodeType": "YulLiteral",
																"src": "7533:1:6",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "7520:9:6",
																	"nodeType": "YulTypedName",
																	"src": "7520:9:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7544:17:6",
															"nodeType": "YulAssignment",
															"src": "7544:17:6",
															"value": {
																"kind": "number",
																"nativeSrc": "7557:4:6",
																"nodeType": "YulLiteral",
																"src": "7557:4:6",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "7544:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "7544:9:6"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "7608:611:6",
																		"nodeType": "YulBlock",
																		"src": "7608:611:6",
																		"statements": [
																			{
																				"nativeSrc": "7622:37:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "7622:37:6",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "7641:6:6",
																							"nodeType": "YulIdentifier",
																							"src": "7641:6:6"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "7653:4:6",
																									"nodeType": "YulLiteral",
																									"src": "7653:4:6",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "7649:3:6",
																								"nodeType": "YulIdentifier",
																								"src": "7649:3:6"
																							},
																							"nativeSrc": "7649:9:6",
																							"nodeType": "YulFunctionCall",
																							"src": "7649:9:6"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "7637:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "7637:3:6"
																					},
																					"nativeSrc": "7637:22:6",
																					"nodeType": "YulFunctionCall",
																					"src": "7637:22:6"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "7626:7:6",
																						"nodeType": "YulTypedName",
																						"src": "7626:7:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "7673:51:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "7673:51:6",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "7719:4:6",
																							"nodeType": "YulIdentifier",
																							"src": "7719:4:6"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "7687:31:6",
																						"nodeType": "YulIdentifier",
																						"src": "7687:31:6"
																					},
																					"nativeSrc": "7687:37:6",
																					"nodeType": "YulFunctionCall",
																					"src": "7687:37:6"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "7677:6:6",
																						"nodeType": "YulTypedName",
																						"src": "7677:6:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "7737:10:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "7737:10:6",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "7746:1:6",
																					"nodeType": "YulLiteral",
																					"src": "7746:1:6",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "7741:1:6",
																						"nodeType": "YulTypedName",
																						"src": "7741:1:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "7805:163:6",
																					"nodeType": "YulBlock",
																					"src": "7805:163:6",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "7830:6:6",
																										"nodeType": "YulIdentifier",
																										"src": "7830:6:6"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "7848:3:6",
																														"nodeType": "YulIdentifier",
																														"src": "7848:3:6"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "7853:9:6",
																														"nodeType": "YulIdentifier",
																														"src": "7853:9:6"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "7844:3:6",
																													"nodeType": "YulIdentifier",
																													"src": "7844:3:6"
																												},
																												"nativeSrc": "7844:19:6",
																												"nodeType": "YulFunctionCall",
																												"src": "7844:19:6"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "7838:5:6",
																											"nodeType": "YulIdentifier",
																											"src": "7838:5:6"
																										},
																										"nativeSrc": "7838:26:6",
																										"nodeType": "YulFunctionCall",
																										"src": "7838:26:6"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "7823:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "7823:6:6"
																								},
																								"nativeSrc": "7823:42:6",
																								"nodeType": "YulFunctionCall",
																								"src": "7823:42:6"
																							},
																							"nativeSrc": "7823:42:6",
																							"nodeType": "YulExpressionStatement",
																							"src": "7823:42:6"
																						},
																						{
																							"nativeSrc": "7882:24:6",
																							"nodeType": "YulAssignment",
																							"src": "7882:24:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "7896:6:6",
																										"nodeType": "YulIdentifier",
																										"src": "7896:6:6"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "7904:1:6",
																										"nodeType": "YulLiteral",
																										"src": "7904:1:6",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "7892:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "7892:3:6"
																								},
																								"nativeSrc": "7892:14:6",
																								"nodeType": "YulFunctionCall",
																								"src": "7892:14:6"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "7882:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "7882:6:6"
																								}
																							]
																						},
																						{
																							"nativeSrc": "7923:31:6",
																							"nodeType": "YulAssignment",
																							"src": "7923:31:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "7940:9:6",
																										"nodeType": "YulIdentifier",
																										"src": "7940:9:6"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "7951:2:6",
																										"nodeType": "YulLiteral",
																										"src": "7951:2:6",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "7936:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "7936:3:6"
																								},
																								"nativeSrc": "7936:18:6",
																								"nodeType": "YulFunctionCall",
																								"src": "7936:18:6"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "7923:9:6",
																									"nodeType": "YulIdentifier",
																									"src": "7923:9:6"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "7771:1:6",
																							"nodeType": "YulIdentifier",
																							"src": "7771:1:6"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "7774:7:6",
																							"nodeType": "YulIdentifier",
																							"src": "7774:7:6"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "7768:2:6",
																						"nodeType": "YulIdentifier",
																						"src": "7768:2:6"
																					},
																					"nativeSrc": "7768:14:6",
																					"nodeType": "YulFunctionCall",
																					"src": "7768:14:6"
																				},
																				"nativeSrc": "7760:208:6",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "7783:21:6",
																					"nodeType": "YulBlock",
																					"src": "7783:21:6",
																					"statements": [
																						{
																							"nativeSrc": "7785:17:6",
																							"nodeType": "YulAssignment",
																							"src": "7785:17:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "7794:1:6",
																										"nodeType": "YulIdentifier",
																										"src": "7794:1:6"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "7797:4:6",
																										"nodeType": "YulLiteral",
																										"src": "7797:4:6",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "7790:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "7790:3:6"
																								},
																								"nativeSrc": "7790:12:6",
																								"nodeType": "YulFunctionCall",
																								"src": "7790:12:6"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "7785:1:6",
																									"nodeType": "YulIdentifier",
																									"src": "7785:1:6"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "7764:3:6",
																					"nodeType": "YulBlock",
																					"src": "7764:3:6",
																					"statements": []
																				},
																				"src": "7760:208:6"
																			},
																			{
																				"body": {
																					"nativeSrc": "8004:156:6",
																					"nodeType": "YulBlock",
																					"src": "8004:156:6",
																					"statements": [
																						{
																							"nativeSrc": "8022:43:6",
																							"nodeType": "YulVariableDeclaration",
																							"src": "8022:43:6",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "8049:3:6",
																												"nodeType": "YulIdentifier",
																												"src": "8049:3:6"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "8054:9:6",
																												"nodeType": "YulIdentifier",
																												"src": "8054:9:6"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "8045:3:6",
																											"nodeType": "YulIdentifier",
																											"src": "8045:3:6"
																										},
																										"nativeSrc": "8045:19:6",
																										"nodeType": "YulFunctionCall",
																										"src": "8045:19:6"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "8039:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "8039:5:6"
																								},
																								"nativeSrc": "8039:26:6",
																								"nodeType": "YulFunctionCall",
																								"src": "8039:26:6"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "8026:9:6",
																									"nodeType": "YulTypedName",
																									"src": "8026:9:6",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "8089:6:6",
																										"nodeType": "YulIdentifier",
																										"src": "8089:6:6"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "8116:9:6",
																												"nodeType": "YulIdentifier",
																												"src": "8116:9:6"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "8131:6:6",
																														"nodeType": "YulIdentifier",
																														"src": "8131:6:6"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "8139:4:6",
																														"nodeType": "YulLiteral",
																														"src": "8139:4:6",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "8127:3:6",
																													"nodeType": "YulIdentifier",
																													"src": "8127:3:6"
																												},
																												"nativeSrc": "8127:17:6",
																												"nodeType": "YulFunctionCall",
																												"src": "8127:17:6"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "8097:18:6",
																											"nodeType": "YulIdentifier",
																											"src": "8097:18:6"
																										},
																										"nativeSrc": "8097:48:6",
																										"nodeType": "YulFunctionCall",
																										"src": "8097:48:6"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "8082:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "8082:6:6"
																								},
																								"nativeSrc": "8082:64:6",
																								"nodeType": "YulFunctionCall",
																								"src": "8082:64:6"
																							},
																							"nativeSrc": "8082:64:6",
																							"nodeType": "YulExpressionStatement",
																							"src": "8082:64:6"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "7987:7:6",
																							"nodeType": "YulIdentifier",
																							"src": "7987:7:6"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "7996:6:6",
																							"nodeType": "YulIdentifier",
																							"src": "7996:6:6"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "7984:2:6",
																						"nodeType": "YulIdentifier",
																						"src": "7984:2:6"
																					},
																					"nativeSrc": "7984:19:6",
																					"nodeType": "YulFunctionCall",
																					"src": "7984:19:6"
																				},
																				"nativeSrc": "7981:179:6",
																				"nodeType": "YulIf",
																				"src": "7981:179:6"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "8180:4:6",
																							"nodeType": "YulIdentifier",
																							"src": "8180:4:6"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "8194:6:6",
																											"nodeType": "YulIdentifier",
																											"src": "8194:6:6"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "8202:1:6",
																											"nodeType": "YulLiteral",
																											"src": "8202:1:6",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "8190:3:6",
																										"nodeType": "YulIdentifier",
																										"src": "8190:3:6"
																									},
																									"nativeSrc": "8190:14:6",
																									"nodeType": "YulFunctionCall",
																									"src": "8190:14:6"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "8206:1:6",
																									"nodeType": "YulLiteral",
																									"src": "8206:1:6",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "8186:3:6",
																								"nodeType": "YulIdentifier",
																								"src": "8186:3:6"
																							},
																							"nativeSrc": "8186:22:6",
																							"nodeType": "YulFunctionCall",
																							"src": "8186:22:6"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "8173:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "8173:6:6"
																					},
																					"nativeSrc": "8173:36:6",
																					"nodeType": "YulFunctionCall",
																					"src": "8173:36:6"
																				},
																				"nativeSrc": "8173:36:6",
																				"nodeType": "YulExpressionStatement",
																				"src": "8173:36:6"
																			}
																		]
																	},
																	"nativeSrc": "7601:618:6",
																	"nodeType": "YulCase",
																	"src": "7601:618:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7606:1:6",
																		"nodeType": "YulLiteral",
																		"src": "7606:1:6",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "8236:222:6",
																		"nodeType": "YulBlock",
																		"src": "8236:222:6",
																		"statements": [
																			{
																				"nativeSrc": "8250:14:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8250:14:6",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "8263:1:6",
																					"nodeType": "YulLiteral",
																					"src": "8263:1:6",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "8254:5:6",
																						"nodeType": "YulTypedName",
																						"src": "8254:5:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "8287:67:6",
																					"nodeType": "YulBlock",
																					"src": "8287:67:6",
																					"statements": [
																						{
																							"nativeSrc": "8305:35:6",
																							"nodeType": "YulAssignment",
																							"src": "8305:35:6",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "8324:3:6",
																												"nodeType": "YulIdentifier",
																												"src": "8324:3:6"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "8329:9:6",
																												"nodeType": "YulIdentifier",
																												"src": "8329:9:6"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "8320:3:6",
																											"nodeType": "YulIdentifier",
																											"src": "8320:3:6"
																										},
																										"nativeSrc": "8320:19:6",
																										"nodeType": "YulFunctionCall",
																										"src": "8320:19:6"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "8314:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "8314:5:6"
																								},
																								"nativeSrc": "8314:26:6",
																								"nodeType": "YulFunctionCall",
																								"src": "8314:26:6"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "8305:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "8305:5:6"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "8280:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "8280:6:6"
																				},
																				"nativeSrc": "8277:77:6",
																				"nodeType": "YulIf",
																				"src": "8277:77:6"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "8374:4:6",
																							"nodeType": "YulIdentifier",
																							"src": "8374:4:6"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "8433:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "8433:5:6"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "8440:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "8440:6:6"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "8380:52:6",
																								"nodeType": "YulIdentifier",
																								"src": "8380:52:6"
																							},
																							"nativeSrc": "8380:67:6",
																							"nodeType": "YulFunctionCall",
																							"src": "8380:67:6"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "8367:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "8367:6:6"
																					},
																					"nativeSrc": "8367:81:6",
																					"nodeType": "YulFunctionCall",
																					"src": "8367:81:6"
																				},
																				"nativeSrc": "8367:81:6",
																				"nodeType": "YulExpressionStatement",
																				"src": "8367:81:6"
																			}
																		]
																	},
																	"nativeSrc": "8228:230:6",
																	"nodeType": "YulCase",
																	"src": "8228:230:6",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "7581:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "7581:6:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7589:2:6",
																		"nodeType": "YulLiteral",
																		"src": "7589:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7578:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "7578:2:6"
																},
																"nativeSrc": "7578:14:6",
																"nodeType": "YulFunctionCall",
																"src": "7578:14:6"
															},
															"nativeSrc": "7571:887:6",
															"nodeType": "YulSwitch",
															"src": "7571:887:6"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "7069:1395:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "7150:4:6",
														"nodeType": "YulTypedName",
														"src": "7150:4:6",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "7156:3:6",
														"nodeType": "YulTypedName",
														"src": "7156:3:6",
														"type": ""
													}
												],
												"src": "7069:1395:6"
											},
											{
												"body": {
													"nativeSrc": "8566:73:6",
													"nodeType": "YulBlock",
													"src": "8566:73:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8583:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "8583:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8588:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "8588:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8576:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8576:6:6"
																},
																"nativeSrc": "8576:19:6",
																"nodeType": "YulFunctionCall",
																"src": "8576:19:6"
															},
															"nativeSrc": "8576:19:6",
															"nodeType": "YulExpressionStatement",
															"src": "8576:19:6"
														},
														{
															"nativeSrc": "8604:29:6",
															"nodeType": "YulAssignment",
															"src": "8604:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8623:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "8623:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8628:4:6",
																		"nodeType": "YulLiteral",
																		"src": "8628:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8619:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "8619:3:6"
																},
																"nativeSrc": "8619:14:6",
																"nodeType": "YulFunctionCall",
																"src": "8619:14:6"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "8604:11:6",
																	"nodeType": "YulIdentifier",
																	"src": "8604:11:6"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "8470:169:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8538:3:6",
														"nodeType": "YulTypedName",
														"src": "8538:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "8543:6:6",
														"nodeType": "YulTypedName",
														"src": "8543:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "8554:11:6",
														"nodeType": "YulTypedName",
														"src": "8554:11:6",
														"type": ""
													}
												],
												"src": "8470:169:6"
											},
											{
												"body": {
													"nativeSrc": "8751:65:6",
													"nodeType": "YulBlock",
													"src": "8751:65:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8773:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "8773:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8781:1:6",
																				"nodeType": "YulLiteral",
																				"src": "8781:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8769:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8769:3:6"
																		},
																		"nativeSrc": "8769:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8769:14:6"
																	},
																	{
																		"hexValue": "6d696e7420746f2074686520302061646472657373",
																		"kind": "string",
																		"nativeSrc": "8785:23:6",
																		"nodeType": "YulLiteral",
																		"src": "8785:23:6",
																		"type": "",
																		"value": "mint to the 0 address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8762:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8762:6:6"
																},
																"nativeSrc": "8762:47:6",
																"nodeType": "YulFunctionCall",
																"src": "8762:47:6"
															},
															"nativeSrc": "8762:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "8762:47:6"
														}
													]
												},
												"name": "store_literal_in_memory_ad685e5f39ea8e4d673810c314cd17a816075806a69a16cb331cf4108f5f47f5",
												"nativeSrc": "8645:171:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "8743:6:6",
														"nodeType": "YulTypedName",
														"src": "8743:6:6",
														"type": ""
													}
												],
												"src": "8645:171:6"
											},
											{
												"body": {
													"nativeSrc": "8968:220:6",
													"nodeType": "YulBlock",
													"src": "8968:220:6",
													"statements": [
														{
															"nativeSrc": "8978:74:6",
															"nodeType": "YulAssignment",
															"src": "8978:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9044:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "9044:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9049:2:6",
																		"nodeType": "YulLiteral",
																		"src": "9049:2:6",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8985:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "8985:58:6"
																},
																"nativeSrc": "8985:67:6",
																"nodeType": "YulFunctionCall",
																"src": "8985:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8978:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "8978:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9150:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "9150:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ad685e5f39ea8e4d673810c314cd17a816075806a69a16cb331cf4108f5f47f5",
																	"nativeSrc": "9061:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "9061:88:6"
																},
																"nativeSrc": "9061:93:6",
																"nodeType": "YulFunctionCall",
																"src": "9061:93:6"
															},
															"nativeSrc": "9061:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "9061:93:6"
														},
														{
															"nativeSrc": "9163:19:6",
															"nodeType": "YulAssignment",
															"src": "9163:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9174:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "9174:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9179:2:6",
																		"nodeType": "YulLiteral",
																		"src": "9179:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9170:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "9170:3:6"
																},
																"nativeSrc": "9170:12:6",
																"nodeType": "YulFunctionCall",
																"src": "9170:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9163:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "9163:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ad685e5f39ea8e4d673810c314cd17a816075806a69a16cb331cf4108f5f47f5_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "8822:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8956:3:6",
														"nodeType": "YulTypedName",
														"src": "8956:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8964:3:6",
														"nodeType": "YulTypedName",
														"src": "8964:3:6",
														"type": ""
													}
												],
												"src": "8822:366:6"
											},
											{
												"body": {
													"nativeSrc": "9365:248:6",
													"nodeType": "YulBlock",
													"src": "9365:248:6",
													"statements": [
														{
															"nativeSrc": "9375:26:6",
															"nodeType": "YulAssignment",
															"src": "9375:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9387:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "9387:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9398:2:6",
																		"nodeType": "YulLiteral",
																		"src": "9398:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9383:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "9383:3:6"
																},
																"nativeSrc": "9383:18:6",
																"nodeType": "YulFunctionCall",
																"src": "9383:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9375:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "9375:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9422:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "9422:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9433:1:6",
																				"nodeType": "YulLiteral",
																				"src": "9433:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9418:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9418:3:6"
																		},
																		"nativeSrc": "9418:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9418:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "9441:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "9441:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9447:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "9447:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9437:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9437:3:6"
																		},
																		"nativeSrc": "9437:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9437:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9411:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "9411:6:6"
																},
																"nativeSrc": "9411:47:6",
																"nodeType": "YulFunctionCall",
																"src": "9411:47:6"
															},
															"nativeSrc": "9411:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "9411:47:6"
														},
														{
															"nativeSrc": "9467:139:6",
															"nodeType": "YulAssignment",
															"src": "9467:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "9601:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "9601:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ad685e5f39ea8e4d673810c314cd17a816075806a69a16cb331cf4108f5f47f5_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9475:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "9475:124:6"
																},
																"nativeSrc": "9475:131:6",
																"nodeType": "YulFunctionCall",
																"src": "9475:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9467:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "9467:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ad685e5f39ea8e4d673810c314cd17a816075806a69a16cb331cf4108f5f47f5__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9194:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9345:9:6",
														"nodeType": "YulTypedName",
														"src": "9345:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9360:4:6",
														"nodeType": "YulTypedName",
														"src": "9360:4:6",
														"type": ""
													}
												],
												"src": "9194:419:6"
											},
											{
												"body": {
													"nativeSrc": "9647:152:6",
													"nodeType": "YulBlock",
													"src": "9647:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9664:1:6",
																		"nodeType": "YulLiteral",
																		"src": "9664:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9667:77:6",
																		"nodeType": "YulLiteral",
																		"src": "9667:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9657:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "9657:6:6"
																},
																"nativeSrc": "9657:88:6",
																"nodeType": "YulFunctionCall",
																"src": "9657:88:6"
															},
															"nativeSrc": "9657:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "9657:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9761:1:6",
																		"nodeType": "YulLiteral",
																		"src": "9761:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9764:4:6",
																		"nodeType": "YulLiteral",
																		"src": "9764:4:6",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9754:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "9754:6:6"
																},
																"nativeSrc": "9754:15:6",
																"nodeType": "YulFunctionCall",
																"src": "9754:15:6"
															},
															"nativeSrc": "9754:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "9754:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9785:1:6",
																		"nodeType": "YulLiteral",
																		"src": "9785:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9788:4:6",
																		"nodeType": "YulLiteral",
																		"src": "9788:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9778:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "9778:6:6"
																},
																"nativeSrc": "9778:15:6",
																"nodeType": "YulFunctionCall",
																"src": "9778:15:6"
															},
															"nativeSrc": "9778:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "9778:15:6"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "9619:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "9619:180:6"
											},
											{
												"body": {
													"nativeSrc": "9849:147:6",
													"nodeType": "YulBlock",
													"src": "9849:147:6",
													"statements": [
														{
															"nativeSrc": "9859:25:6",
															"nodeType": "YulAssignment",
															"src": "9859:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9882:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "9882:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9864:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "9864:17:6"
																},
																"nativeSrc": "9864:20:6",
																"nodeType": "YulFunctionCall",
																"src": "9864:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "9859:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "9859:1:6"
																}
															]
														},
														{
															"nativeSrc": "9893:25:6",
															"nodeType": "YulAssignment",
															"src": "9893:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9916:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "9916:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9898:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "9898:17:6"
																},
																"nativeSrc": "9898:20:6",
																"nodeType": "YulFunctionCall",
																"src": "9898:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "9893:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "9893:1:6"
																}
															]
														},
														{
															"nativeSrc": "9927:16:6",
															"nodeType": "YulAssignment",
															"src": "9927:16:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9938:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "9938:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9941:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "9941:1:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9934:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "9934:3:6"
																},
																"nativeSrc": "9934:9:6",
																"nodeType": "YulFunctionCall",
																"src": "9934:9:6"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "9927:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "9927:3:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9967:22:6",
																"nodeType": "YulBlock",
																"src": "9967:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9969:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "9969:16:6"
																			},
																			"nativeSrc": "9969:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "9969:18:6"
																		},
																		"nativeSrc": "9969:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "9969:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9959:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "9959:1:6"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "9962:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "9962:3:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9956:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "9956:2:6"
																},
																"nativeSrc": "9956:10:6",
																"nodeType": "YulFunctionCall",
																"src": "9956:10:6"
															},
															"nativeSrc": "9953:36:6",
															"nodeType": "YulIf",
															"src": "9953:36:6"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "9805:191:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9836:1:6",
														"nodeType": "YulTypedName",
														"src": "9836:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9839:1:6",
														"nodeType": "YulTypedName",
														"src": "9839:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "9845:3:6",
														"nodeType": "YulTypedName",
														"src": "9845:3:6",
														"type": ""
													}
												],
												"src": "9805:191:6"
											},
											{
												"body": {
													"nativeSrc": "10067:53:6",
													"nodeType": "YulBlock",
													"src": "10067:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10084:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "10084:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "10107:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "10107:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "10089:17:6",
																			"nodeType": "YulIdentifier",
																			"src": "10089:17:6"
																		},
																		"nativeSrc": "10089:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "10089:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10077:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "10077:6:6"
																},
																"nativeSrc": "10077:37:6",
																"nodeType": "YulFunctionCall",
																"src": "10077:37:6"
															},
															"nativeSrc": "10077:37:6",
															"nodeType": "YulExpressionStatement",
															"src": "10077:37:6"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "10002:118:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10055:5:6",
														"nodeType": "YulTypedName",
														"src": "10055:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "10062:3:6",
														"nodeType": "YulTypedName",
														"src": "10062:3:6",
														"type": ""
													}
												],
												"src": "10002:118:6"
											},
											{
												"body": {
													"nativeSrc": "10224:124:6",
													"nodeType": "YulBlock",
													"src": "10224:124:6",
													"statements": [
														{
															"nativeSrc": "10234:26:6",
															"nodeType": "YulAssignment",
															"src": "10234:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10246:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "10246:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10257:2:6",
																		"nodeType": "YulLiteral",
																		"src": "10257:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10242:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "10242:3:6"
																},
																"nativeSrc": "10242:18:6",
																"nodeType": "YulFunctionCall",
																"src": "10242:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10234:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "10234:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10314:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "10314:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10327:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "10327:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10338:1:6",
																				"nodeType": "YulLiteral",
																				"src": "10338:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10323:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "10323:3:6"
																		},
																		"nativeSrc": "10323:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "10323:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10270:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "10270:43:6"
																},
																"nativeSrc": "10270:71:6",
																"nodeType": "YulFunctionCall",
																"src": "10270:71:6"
															},
															"nativeSrc": "10270:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "10270:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "10126:222:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10196:9:6",
														"nodeType": "YulTypedName",
														"src": "10196:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10208:6:6",
														"nodeType": "YulTypedName",
														"src": "10208:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10219:4:6",
														"nodeType": "YulTypedName",
														"src": "10219:4:6",
														"type": ""
													}
												],
												"src": "10126:222:6"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_ad685e5f39ea8e4d673810c314cd17a816075806a69a16cb331cf4108f5f47f5(memPtr) {\n\n        mstore(add(memPtr, 0), \"mint to the 0 address\")\n\n    }\n\n    function abi_encode_t_stringliteral_ad685e5f39ea8e4d673810c314cd17a816075806a69a16cb331cf4108f5f47f5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_ad685e5f39ea8e4d673810c314cd17a816075806a69a16cb331cf4108f5f47f5(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ad685e5f39ea8e4d673810c314cd17a816075806a69a16cb331cf4108f5f47f5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ad685e5f39ea8e4d673810c314cd17a816075806a69a16cb331cf4108f5f47f5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50604051611a32380380611a32833981810160405281019061003191906102f7565b8160039081610040919061057a565b508060049081610050919061057a565b5061006b3369d3c21bcecceda100000061007260201b60201c565b5050610749565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036100e0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100d7906106a3565b60405180910390fd5b8060025f8282546100f191906106ee565b92505081905550805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055508173ffffffffffffffffffffffffffffffffffffffff165f73ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161019e9190610730565b60405180910390a35050565b5f604051905090565b5f80fd5b5f80fd5b5f80fd5b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b610209826101c3565b810181811067ffffffffffffffff82111715610228576102276101d3565b5b80604052505050565b5f61023a6101aa565b90506102468282610200565b919050565b5f67ffffffffffffffff821115610265576102646101d3565b5b61026e826101c3565b9050602081019050919050565b8281835e5f83830152505050565b5f61029b6102968461024b565b610231565b9050828152602081018484840111156102b7576102b66101bf565b5b6102c284828561027b565b509392505050565b5f82601f8301126102de576102dd6101bb565b5b81516102ee848260208601610289565b91505092915050565b5f806040838503121561030d5761030c6101b3565b5b5f83015167ffffffffffffffff81111561032a576103296101b7565b5b610336858286016102ca565b925050602083015167ffffffffffffffff811115610357576103566101b7565b5b610363858286016102ca565b9150509250929050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806103bb57607f821691505b6020821081036103ce576103cd610377565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026104307fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826103f5565b61043a86836103f5565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f61047e61047961047484610452565b61045b565b610452565b9050919050565b5f819050919050565b61049783610464565b6104ab6104a382610485565b848454610401565b825550505050565b5f90565b6104bf6104b3565b6104ca81848461048e565b505050565b5b818110156104ed576104e25f826104b7565b6001810190506104d0565b5050565b601f82111561053257610503816103d4565b61050c846103e6565b8101602085101561051b578190505b61052f610527856103e6565b8301826104cf565b50505b505050565b5f82821c905092915050565b5f6105525f1984600802610537565b1980831691505092915050565b5f61056a8383610543565b9150826002028217905092915050565b6105838261036d565b67ffffffffffffffff81111561059c5761059b6101d3565b5b6105a682546103a4565b6105b18282856104f1565b5f60209050601f8311600181146105e2575f84156105d0578287015190505b6105da858261055f565b865550610641565b601f1984166105f0866103d4565b5f5b82811015610617578489015182556001820191506020850194506020810190506105f2565b868310156106345784890151610630601f891682610543565b8355505b6001600288020188555050505b505050505050565b5f82825260208201905092915050565b7f6d696e7420746f207468652030206164647265737300000000000000000000005f82015250565b5f61068d601583610649565b915061069882610659565b602082019050919050565b5f6020820190508181035f8301526106ba81610681565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6106f882610452565b915061070383610452565b925082820190508082111561071b5761071a6106c1565b5b92915050565b61072a81610452565b82525050565b5f6020820190506107435f830184610721565b92915050565b6112dc806107565f395ff3fe608060405234801561000f575f80fd5b506004361061009c575f3560e01c8063313ce56711610064578063313ce5671461015857806370a082311461017657806395d89b41146101a6578063a9059cbb146101c4578063dd62ed3e146101f45761009c565b806306fdde03146100a0578063095ea7b3146100be57806318160ddd146100ee57806323b872dd1461010c578063256fa2411461013c575b5f80fd5b6100a8610224565b6040516100b59190610b06565b60405180910390f35b6100d860048036038101906100d39190610bc4565b6102b4565b6040516100e59190610c1c565b60405180910390f35b6100f66102cf565b6040516101039190610c44565b60405180910390f35b61012660048036038101906101219190610c5d565b6102d8565b6040516101339190610c1c565b60405180910390f35b61015660048036038101906101519190610ded565b6102ff565b005b610160610340565b60405161016d9190610e62565b60405180910390f35b610190600480360381019061018b9190610e7b565b610348565b60405161019d9190610c44565b60405180910390f35b6101ae61038d565b6040516101bb9190610b06565b60405180910390f35b6101de60048036038101906101d99190610bc4565b61041d565b6040516101eb9190610c1c565b60405180910390f35b61020e60048036038101906102099190610ea6565b610438565b60405161021b9190610c44565b60405180910390f35b60606003805461023390610f11565b80601f016020809104026020016040519081016040528092919081815260200182805461025f90610f11565b80156102aa5780601f10610281576101008083540402835291602001916102aa565b820191905f5260205f20905b81548152906001019060200180831161028d57829003601f168201915b5050505050905090565b5f803390506102c48185856104ba565b600191505092915050565b5f600254905090565b5f803390506102e885828561067d565b6102f3858585610708565b60019150509392505050565b5f5b825181101561033b5761032e8382815181106103205761031f610f41565b5b60200260200101518361095e565b8080600101915050610301565b505050565b5f6012905090565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b60606004805461039c90610f11565b80601f01602080910402602001604051908101604052809291908181526020018280546103c890610f11565b80156104135780601f106103ea57610100808354040283529160200191610413565b820191905f5260205f20905b8154815290600101906020018083116103f657829003601f168201915b5050505050905090565b5f8033905061042d818585610708565b600191505092915050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610528576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161051f90610fb8565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610596576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161058d90611020565b60405180910390fd5b8060015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516106709190610c44565b60405180910390a3505050565b5f6106888484610438565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811461070257818110156106f4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106eb90611088565b60405180910390fd5b61070184848484036104ba565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610776576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161076d906110f0565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036107e4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107db90611158565b60405180910390fd5b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610867576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161085e906111c0565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550815f808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516109509190610c44565b60405180910390a350505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036109cc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109c390611228565b60405180910390fd5b8060025f8282546109dd9190611273565b92505081905550805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055508173ffffffffffffffffffffffffffffffffffffffff165f73ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610a8a9190610c44565b60405180910390a35050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f610ad882610a96565b610ae28185610aa0565b9350610af2818560208601610ab0565b610afb81610abe565b840191505092915050565b5f6020820190508181035f830152610b1e8184610ace565b905092915050565b5f604051905090565b5f80fd5b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610b6082610b37565b9050919050565b610b7081610b56565b8114610b7a575f80fd5b50565b5f81359050610b8b81610b67565b92915050565b5f819050919050565b610ba381610b91565b8114610bad575f80fd5b50565b5f81359050610bbe81610b9a565b92915050565b5f8060408385031215610bda57610bd9610b2f565b5b5f610be785828601610b7d565b9250506020610bf885828601610bb0565b9150509250929050565b5f8115159050919050565b610c1681610c02565b82525050565b5f602082019050610c2f5f830184610c0d565b92915050565b610c3e81610b91565b82525050565b5f602082019050610c575f830184610c35565b92915050565b5f805f60608486031215610c7457610c73610b2f565b5b5f610c8186828701610b7d565b9350506020610c9286828701610b7d565b9250506040610ca386828701610bb0565b9150509250925092565b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b610ce782610abe565b810181811067ffffffffffffffff82111715610d0657610d05610cb1565b5b80604052505050565b5f610d18610b26565b9050610d248282610cde565b919050565b5f67ffffffffffffffff821115610d4357610d42610cb1565b5b602082029050602081019050919050565b5f80fd5b5f610d6a610d6584610d29565b610d0f565b90508083825260208201905060208402830185811115610d8d57610d8c610d54565b5b835b81811015610db65780610da28882610b7d565b845260208401935050602081019050610d8f565b5050509392505050565b5f82601f830112610dd457610dd3610cad565b5b8135610de4848260208601610d58565b91505092915050565b5f8060408385031215610e0357610e02610b2f565b5b5f83013567ffffffffffffffff811115610e2057610e1f610b33565b5b610e2c85828601610dc0565b9250506020610e3d85828601610bb0565b9150509250929050565b5f60ff82169050919050565b610e5c81610e47565b82525050565b5f602082019050610e755f830184610e53565b92915050565b5f60208284031215610e9057610e8f610b2f565b5b5f610e9d84828501610b7d565b91505092915050565b5f8060408385031215610ebc57610ebb610b2f565b5b5f610ec985828601610b7d565b9250506020610eda85828601610b7d565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680610f2857607f821691505b602082108103610f3b57610f3a610ee4565b5b50919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b7f617070726f76652066726f6d20746865203020616464726573730000000000005f82015250565b5f610fa2601a83610aa0565b9150610fad82610f6e565b602082019050919050565b5f6020820190508181035f830152610fcf81610f96565b9050919050565b7f617070726f766520746f207468652030206164647265737300000000000000005f82015250565b5f61100a601883610aa0565b915061101582610fd6565b602082019050919050565b5f6020820190508181035f83015261103781610ffe565b9050919050565b7f696e73756666696369656e7420616c6c6f77616e6365000000000000000000005f82015250565b5f611072601683610aa0565b915061107d8261103e565b602082019050919050565b5f6020820190508181035f83015261109f81611066565b9050919050565b7f5472616e736665722066726f6d206164647265737320300000000000000000005f82015250565b5f6110da601783610aa0565b91506110e5826110a6565b602082019050919050565b5f6020820190508181035f830152611107816110ce565b9050919050565b7f5472616e7366657220746f2061646472657373203000000000000000000000005f82015250565b5f611142601583610aa0565b915061114d8261110e565b602082019050919050565b5f6020820190508181035f83015261116f81611136565b9050919050565b7f42616c616e6365206578636565646564000000000000000000000000000000005f82015250565b5f6111aa601083610aa0565b91506111b582611176565b602082019050919050565b5f6020820190508181035f8301526111d78161119e565b9050919050565b7f6d696e7420746f207468652030206164647265737300000000000000000000005f82015250565b5f611212601583610aa0565b915061121d826111de565b602082019050919050565b5f6020820190508181035f83015261123f81611206565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61127d82610b91565b915061128883610b91565b92508282019050808211156112a05761129f611246565b5b9291505056fea264697066735822122057a0b22efca3a3071285b2aeb6d31fca6982271883b7ca508904821d53bb9d6364736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x1A32 CODESIZE SUB DUP1 PUSH2 0x1A32 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x2F7 JUMP JUMPDEST DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0x40 SWAP2 SWAP1 PUSH2 0x57A JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x57A JUMP JUMPDEST POP PUSH2 0x6B CALLER PUSH10 0xD3C21BCECCEDA1000000 PUSH2 0x72 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP PUSH2 0x749 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD7 SWAP1 PUSH2 0x6A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xF1 SWAP2 SWAP1 PUSH2 0x6EE JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x19E SWAP2 SWAP1 PUSH2 0x730 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x209 DUP3 PUSH2 0x1C3 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x228 JUMPI PUSH2 0x227 PUSH2 0x1D3 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x23A PUSH2 0x1AA JUMP JUMPDEST SWAP1 POP PUSH2 0x246 DUP3 DUP3 PUSH2 0x200 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x265 JUMPI PUSH2 0x264 PUSH2 0x1D3 JUMP JUMPDEST JUMPDEST PUSH2 0x26E DUP3 PUSH2 0x1C3 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x29B PUSH2 0x296 DUP5 PUSH2 0x24B JUMP JUMPDEST PUSH2 0x231 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x2B7 JUMPI PUSH2 0x2B6 PUSH2 0x1BF JUMP JUMPDEST JUMPDEST PUSH2 0x2C2 DUP5 DUP3 DUP6 PUSH2 0x27B JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2DE JUMPI PUSH2 0x2DD PUSH2 0x1BB JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x2EE DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x289 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x30D JUMPI PUSH2 0x30C PUSH2 0x1B3 JUMP JUMPDEST JUMPDEST PUSH0 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x32A JUMPI PUSH2 0x329 PUSH2 0x1B7 JUMP JUMPDEST JUMPDEST PUSH2 0x336 DUP6 DUP3 DUP7 ADD PUSH2 0x2CA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x357 JUMPI PUSH2 0x356 PUSH2 0x1B7 JUMP JUMPDEST JUMPDEST PUSH2 0x363 DUP6 DUP3 DUP7 ADD PUSH2 0x2CA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x3BB JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x3CE JUMPI PUSH2 0x3CD PUSH2 0x377 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x430 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x3F5 JUMP JUMPDEST PUSH2 0x43A DUP7 DUP4 PUSH2 0x3F5 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x47E PUSH2 0x479 PUSH2 0x474 DUP5 PUSH2 0x452 JUMP JUMPDEST PUSH2 0x45B JUMP JUMPDEST PUSH2 0x452 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x497 DUP4 PUSH2 0x464 JUMP JUMPDEST PUSH2 0x4AB PUSH2 0x4A3 DUP3 PUSH2 0x485 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x401 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x4BF PUSH2 0x4B3 JUMP JUMPDEST PUSH2 0x4CA DUP2 DUP5 DUP5 PUSH2 0x48E JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x4ED JUMPI PUSH2 0x4E2 PUSH0 DUP3 PUSH2 0x4B7 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x4D0 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x532 JUMPI PUSH2 0x503 DUP2 PUSH2 0x3D4 JUMP JUMPDEST PUSH2 0x50C DUP5 PUSH2 0x3E6 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x51B JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x52F PUSH2 0x527 DUP6 PUSH2 0x3E6 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x4CF JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x552 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x537 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x56A DUP4 DUP4 PUSH2 0x543 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x583 DUP3 PUSH2 0x36D JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x59C JUMPI PUSH2 0x59B PUSH2 0x1D3 JUMP JUMPDEST JUMPDEST PUSH2 0x5A6 DUP3 SLOAD PUSH2 0x3A4 JUMP JUMPDEST PUSH2 0x5B1 DUP3 DUP3 DUP6 PUSH2 0x4F1 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x5E2 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x5D0 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x5DA DUP6 DUP3 PUSH2 0x55F JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x641 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x5F0 DUP7 PUSH2 0x3D4 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x617 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x5F2 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x634 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x630 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x543 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x6D696E7420746F20746865203020616464726573730000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x68D PUSH1 0x15 DUP4 PUSH2 0x649 JUMP JUMPDEST SWAP2 POP PUSH2 0x698 DUP3 PUSH2 0x659 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x6BA DUP2 PUSH2 0x681 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x6F8 DUP3 PUSH2 0x452 JUMP JUMPDEST SWAP2 POP PUSH2 0x703 DUP4 PUSH2 0x452 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x71B JUMPI PUSH2 0x71A PUSH2 0x6C1 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x72A DUP2 PUSH2 0x452 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x743 PUSH0 DUP4 ADD DUP5 PUSH2 0x721 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x12DC DUP1 PUSH2 0x756 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9C JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x313CE567 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x158 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x176 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1A6 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1C4 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x1F4 JUMPI PUSH2 0x9C JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xA0 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xBE JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEE JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x10C JUMPI DUP1 PUSH4 0x256FA241 EQ PUSH2 0x13C JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xA8 PUSH2 0x224 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB5 SWAP2 SWAP1 PUSH2 0xB06 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD3 SWAP2 SWAP1 PUSH2 0xBC4 JUMP JUMPDEST PUSH2 0x2B4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE5 SWAP2 SWAP1 PUSH2 0xC1C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF6 PUSH2 0x2CF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x103 SWAP2 SWAP1 PUSH2 0xC44 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x126 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x121 SWAP2 SWAP1 PUSH2 0xC5D JUMP JUMPDEST PUSH2 0x2D8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x133 SWAP2 SWAP1 PUSH2 0xC1C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x156 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x151 SWAP2 SWAP1 PUSH2 0xDED JUMP JUMPDEST PUSH2 0x2FF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x160 PUSH2 0x340 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16D SWAP2 SWAP1 PUSH2 0xE62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x190 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18B SWAP2 SWAP1 PUSH2 0xE7B JUMP JUMPDEST PUSH2 0x348 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19D SWAP2 SWAP1 PUSH2 0xC44 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AE PUSH2 0x38D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BB SWAP2 SWAP1 PUSH2 0xB06 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1DE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D9 SWAP2 SWAP1 PUSH2 0xBC4 JUMP JUMPDEST PUSH2 0x41D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EB SWAP2 SWAP1 PUSH2 0xC1C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x209 SWAP2 SWAP1 PUSH2 0xEA6 JUMP JUMPDEST PUSH2 0x438 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21B SWAP2 SWAP1 PUSH2 0xC44 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x233 SWAP1 PUSH2 0xF11 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x25F SWAP1 PUSH2 0xF11 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2AA JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x281 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2AA JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x28D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 CALLER SWAP1 POP PUSH2 0x2C4 DUP2 DUP6 DUP6 PUSH2 0x4BA JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 CALLER SWAP1 POP PUSH2 0x2E8 DUP6 DUP3 DUP6 PUSH2 0x67D JUMP JUMPDEST PUSH2 0x2F3 DUP6 DUP6 DUP6 PUSH2 0x708 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x33B JUMPI PUSH2 0x32E DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x320 JUMPI PUSH2 0x31F PUSH2 0xF41 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP4 PUSH2 0x95E JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x301 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x39C SWAP1 PUSH2 0xF11 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3C8 SWAP1 PUSH2 0xF11 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x413 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3EA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x413 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3F6 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 CALLER SWAP1 POP PUSH2 0x42D DUP2 DUP6 DUP6 PUSH2 0x708 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x528 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x51F SWAP1 PUSH2 0xFB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x596 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x58D SWAP1 PUSH2 0x1020 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0x670 SWAP2 SWAP1 PUSH2 0xC44 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x688 DUP5 DUP5 PUSH2 0x438 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x702 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x6F4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6EB SWAP1 PUSH2 0x1088 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x701 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x4BA JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x776 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x76D SWAP1 PUSH2 0x10F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x7E4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7DB SWAP1 PUSH2 0x1158 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x867 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x85E SWAP1 PUSH2 0x11C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x950 SWAP2 SWAP1 PUSH2 0xC44 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9CC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9C3 SWAP1 PUSH2 0x1228 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x9DD SWAP2 SWAP1 PUSH2 0x1273 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xA8A SWAP2 SWAP1 PUSH2 0xC44 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xAD8 DUP3 PUSH2 0xA96 JUMP JUMPDEST PUSH2 0xAE2 DUP2 DUP6 PUSH2 0xAA0 JUMP JUMPDEST SWAP4 POP PUSH2 0xAF2 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xAB0 JUMP JUMPDEST PUSH2 0xAFB DUP2 PUSH2 0xABE JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xB1E DUP2 DUP5 PUSH2 0xACE JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xB60 DUP3 PUSH2 0xB37 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB70 DUP2 PUSH2 0xB56 JUMP JUMPDEST DUP2 EQ PUSH2 0xB7A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB8B DUP2 PUSH2 0xB67 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBA3 DUP2 PUSH2 0xB91 JUMP JUMPDEST DUP2 EQ PUSH2 0xBAD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBBE DUP2 PUSH2 0xB9A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBDA JUMPI PUSH2 0xBD9 PUSH2 0xB2F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xBE7 DUP6 DUP3 DUP7 ADD PUSH2 0xB7D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xBF8 DUP6 DUP3 DUP7 ADD PUSH2 0xBB0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC16 DUP2 PUSH2 0xC02 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC2F PUSH0 DUP4 ADD DUP5 PUSH2 0xC0D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC3E DUP2 PUSH2 0xB91 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC57 PUSH0 DUP4 ADD DUP5 PUSH2 0xC35 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xC74 JUMPI PUSH2 0xC73 PUSH2 0xB2F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xC81 DUP7 DUP3 DUP8 ADD PUSH2 0xB7D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xC92 DUP7 DUP3 DUP8 ADD PUSH2 0xB7D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xCA3 DUP7 DUP3 DUP8 ADD PUSH2 0xBB0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0xCE7 DUP3 PUSH2 0xABE JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0xD06 JUMPI PUSH2 0xD05 PUSH2 0xCB1 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xD18 PUSH2 0xB26 JUMP JUMPDEST SWAP1 POP PUSH2 0xD24 DUP3 DUP3 PUSH2 0xCDE JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xD43 JUMPI PUSH2 0xD42 PUSH2 0xCB1 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH2 0xD6A PUSH2 0xD65 DUP5 PUSH2 0xD29 JUMP JUMPDEST PUSH2 0xD0F JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0xD8D JUMPI PUSH2 0xD8C PUSH2 0xD54 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xDB6 JUMPI DUP1 PUSH2 0xDA2 DUP9 DUP3 PUSH2 0xB7D JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xD8F JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xDD4 JUMPI PUSH2 0xDD3 PUSH2 0xCAD JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0xDE4 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0xD58 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE03 JUMPI PUSH2 0xE02 PUSH2 0xB2F JUMP JUMPDEST JUMPDEST PUSH0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xE20 JUMPI PUSH2 0xE1F PUSH2 0xB33 JUMP JUMPDEST JUMPDEST PUSH2 0xE2C DUP6 DUP3 DUP7 ADD PUSH2 0xDC0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xE3D DUP6 DUP3 DUP7 ADD PUSH2 0xBB0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE5C DUP2 PUSH2 0xE47 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE75 PUSH0 DUP4 ADD DUP5 PUSH2 0xE53 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE90 JUMPI PUSH2 0xE8F PUSH2 0xB2F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xE9D DUP5 DUP3 DUP6 ADD PUSH2 0xB7D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xEBC JUMPI PUSH2 0xEBB PUSH2 0xB2F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xEC9 DUP6 DUP3 DUP7 ADD PUSH2 0xB7D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xEDA DUP6 DUP3 DUP7 ADD PUSH2 0xB7D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xF28 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xF3B JUMPI PUSH2 0xF3A PUSH2 0xEE4 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x617070726F76652066726F6D2074686520302061646472657373000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xFA2 PUSH1 0x1A DUP4 PUSH2 0xAA0 JUMP JUMPDEST SWAP2 POP PUSH2 0xFAD DUP3 PUSH2 0xF6E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xFCF DUP2 PUSH2 0xF96 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x617070726F766520746F20746865203020616464726573730000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x100A PUSH1 0x18 DUP4 PUSH2 0xAA0 JUMP JUMPDEST SWAP2 POP PUSH2 0x1015 DUP3 PUSH2 0xFD6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1037 DUP2 PUSH2 0xFFE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x696E73756666696369656E7420616C6C6F77616E636500000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1072 PUSH1 0x16 DUP4 PUSH2 0xAA0 JUMP JUMPDEST SWAP2 POP PUSH2 0x107D DUP3 PUSH2 0x103E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x109F DUP2 PUSH2 0x1066 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5472616E736665722066726F6D20616464726573732030000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x10DA PUSH1 0x17 DUP4 PUSH2 0xAA0 JUMP JUMPDEST SWAP2 POP PUSH2 0x10E5 DUP3 PUSH2 0x10A6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1107 DUP2 PUSH2 0x10CE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5472616E7366657220746F206164647265737320300000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1142 PUSH1 0x15 DUP4 PUSH2 0xAA0 JUMP JUMPDEST SWAP2 POP PUSH2 0x114D DUP3 PUSH2 0x110E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x116F DUP2 PUSH2 0x1136 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x42616C616E636520657863656564656400000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x11AA PUSH1 0x10 DUP4 PUSH2 0xAA0 JUMP JUMPDEST SWAP2 POP PUSH2 0x11B5 DUP3 PUSH2 0x1176 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x11D7 DUP2 PUSH2 0x119E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x6D696E7420746F20746865203020616464726573730000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1212 PUSH1 0x15 DUP4 PUSH2 0xAA0 JUMP JUMPDEST SWAP2 POP PUSH2 0x121D DUP3 PUSH2 0x11DE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x123F DUP2 PUSH2 0x1206 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x127D DUP3 PUSH2 0xB91 JUMP JUMPDEST SWAP2 POP PUSH2 0x1288 DUP4 PUSH2 0xB91 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x12A0 JUMPI PUSH2 0x129F PUSH2 0x1246 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMPI LOG0 0xB2 0x2E 0xFC LOG3 LOG3 SMOD SLT DUP6 0xB2 0xAE 0xB6 0xD3 0x1F 0xCA PUSH10 0x82271883B7CA50890482 SAR MSTORE8 0xBB SWAP14 PUSH4 0x64736F6C PUSH4 0x4300081A STOP CALLER ",
							"sourceMap": "2379:7170:5:-:0;;;2777:148;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2848:5;2840;:13;;;;;;:::i;:::-;;2870:7;2860;:17;;;;;;:::i;:::-;;2884:37;2890:10;2902:18;2884:5;;;:37;;:::i;:::-;2777:148;;2379:7170;;7810:415;7913:1;7894:21;;:7;:21;;;7886:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;7970:6;7954:12;;:22;;;;;;;:::i;:::-;;;;;;;;8147:6;8125:9;:18;8135:7;8125:18;;;;;;;;;;;;;;;;:28;;;;;;;;;;;8201:7;8180:37;;8197:1;8180:37;;;8210:6;8180:37;;;;;;:::i;:::-;;;;;;;;7810:415;;:::o;7:75:6:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:139::-;1699:6;1694:3;1689;1683:23;1740:1;1731:6;1726:3;1722:16;1715:27;1610:139;;;:::o;1755:434::-;1844:5;1869:66;1885:49;1927:6;1885:49;:::i;:::-;1869:66;:::i;:::-;1860:75;;1958:6;1951:5;1944:21;1996:4;1989:5;1985:16;2034:3;2025:6;2020:3;2016:16;2013:25;2010:112;;;2041:79;;:::i;:::-;2010:112;2131:52;2176:6;2171:3;2166;2131:52;:::i;:::-;1850:339;1755:434;;;;;:::o;2209:355::-;2276:5;2325:3;2318:4;2310:6;2306:17;2302:27;2292:122;;2333:79;;:::i;:::-;2292:122;2443:6;2437:13;2468:90;2554:3;2546:6;2539:4;2531:6;2527:17;2468:90;:::i;:::-;2459:99;;2282:282;2209:355;;;;:::o;2570:853::-;2669:6;2677;2726:2;2714:9;2705:7;2701:23;2697:32;2694:119;;;2732:79;;:::i;:::-;2694:119;2873:1;2862:9;2858:17;2852:24;2903:18;2895:6;2892:30;2889:117;;;2925:79;;:::i;:::-;2889:117;3030:74;3096:7;3087:6;3076:9;3072:22;3030:74;:::i;:::-;3020:84;;2823:291;3174:2;3163:9;3159:18;3153:25;3205:18;3197:6;3194:30;3191:117;;;3227:79;;:::i;:::-;3191:117;3332:74;3398:7;3389:6;3378:9;3374:22;3332:74;:::i;:::-;3322:84;;3124:292;2570:853;;;;;:::o;3429:99::-;3481:6;3515:5;3509:12;3499:22;;3429:99;;;:::o;3534:180::-;3582:77;3579:1;3572:88;3679:4;3676:1;3669:15;3703:4;3700:1;3693:15;3720:320;3764:6;3801:1;3795:4;3791:12;3781:22;;3848:1;3842:4;3838:12;3869:18;3859:81;;3925:4;3917:6;3913:17;3903:27;;3859:81;3987:2;3979:6;3976:14;3956:18;3953:38;3950:84;;4006:18;;:::i;:::-;3950:84;3771:269;3720:320;;;:::o;4046:141::-;4095:4;4118:3;4110:11;;4141:3;4138:1;4131:14;4175:4;4172:1;4162:18;4154:26;;4046:141;;;:::o;4193:93::-;4230:6;4277:2;4272;4265:5;4261:14;4257:23;4247:33;;4193:93;;;:::o;4292:107::-;4336:8;4386:5;4380:4;4376:16;4355:37;;4292:107;;;;:::o;4405:393::-;4474:6;4524:1;4512:10;4508:18;4547:97;4577:66;4566:9;4547:97;:::i;:::-;4665:39;4695:8;4684:9;4665:39;:::i;:::-;4653:51;;4737:4;4733:9;4726:5;4722:21;4713:30;;4786:4;4776:8;4772:19;4765:5;4762:30;4752:40;;4481:317;;4405:393;;;;;:::o;4804:77::-;4841:7;4870:5;4859:16;;4804:77;;;:::o;4887:60::-;4915:3;4936:5;4929:12;;4887:60;;;:::o;4953:142::-;5003:9;5036:53;5054:34;5063:24;5081:5;5063:24;:::i;:::-;5054:34;:::i;:::-;5036:53;:::i;:::-;5023:66;;4953:142;;;:::o;5101:75::-;5144:3;5165:5;5158:12;;5101:75;;;:::o;5182:269::-;5292:39;5323:7;5292:39;:::i;:::-;5353:91;5402:41;5426:16;5402:41;:::i;:::-;5394:6;5387:4;5381:11;5353:91;:::i;:::-;5347:4;5340:105;5258:193;5182:269;;;:::o;5457:73::-;5502:3;5457:73;:::o;5536:189::-;5613:32;;:::i;:::-;5654:65;5712:6;5704;5698:4;5654:65;:::i;:::-;5589:136;5536:189;;:::o;5731:186::-;5791:120;5808:3;5801:5;5798:14;5791:120;;;5862:39;5899:1;5892:5;5862:39;:::i;:::-;5835:1;5828:5;5824:13;5815:22;;5791:120;;;5731:186;;:::o;5923:543::-;6024:2;6019:3;6016:11;6013:446;;;6058:38;6090:5;6058:38;:::i;:::-;6142:29;6160:10;6142:29;:::i;:::-;6132:8;6128:44;6325:2;6313:10;6310:18;6307:49;;;6346:8;6331:23;;6307:49;6369:80;6425:22;6443:3;6425:22;:::i;:::-;6415:8;6411:37;6398:11;6369:80;:::i;:::-;6028:431;;6013:446;5923:543;;;:::o;6472:117::-;6526:8;6576:5;6570:4;6566:16;6545:37;;6472:117;;;;:::o;6595:169::-;6639:6;6672:51;6720:1;6716:6;6708:5;6705:1;6701:13;6672:51;:::i;:::-;6668:56;6753:4;6747;6743:15;6733:25;;6646:118;6595:169;;;;:::o;6769:295::-;6845:4;6991:29;7016:3;7010:4;6991:29;:::i;:::-;6983:37;;7053:3;7050:1;7046:11;7040:4;7037:21;7029:29;;6769:295;;;;:::o;7069:1395::-;7186:37;7219:3;7186:37;:::i;:::-;7288:18;7280:6;7277:30;7274:56;;;7310:18;;:::i;:::-;7274:56;7354:38;7386:4;7380:11;7354:38;:::i;:::-;7439:67;7499:6;7491;7485:4;7439:67;:::i;:::-;7533:1;7557:4;7544:17;;7589:2;7581:6;7578:14;7606:1;7601:618;;;;8263:1;8280:6;8277:77;;;8329:9;8324:3;8320:19;8314:26;8305:35;;8277:77;8380:67;8440:6;8433:5;8380:67;:::i;:::-;8374:4;8367:81;8236:222;7571:887;;7601:618;7653:4;7649:9;7641:6;7637:22;7687:37;7719:4;7687:37;:::i;:::-;7746:1;7760:208;7774:7;7771:1;7768:14;7760:208;;;7853:9;7848:3;7844:19;7838:26;7830:6;7823:42;7904:1;7896:6;7892:14;7882:24;;7951:2;7940:9;7936:18;7923:31;;7797:4;7794:1;7790:12;7785:17;;7760:208;;;7996:6;7987:7;7984:19;7981:179;;;8054:9;8049:3;8045:19;8039:26;8097:48;8139:4;8131:6;8127:17;8116:9;8097:48;:::i;:::-;8089:6;8082:64;8004:156;7981:179;8206:1;8202;8194:6;8190:14;8186:22;8180:4;8173:36;7608:611;;;7571:887;;7161:1303;;;7069:1395;;:::o;8470:169::-;8554:11;8588:6;8583:3;8576:19;8628:4;8623:3;8619:14;8604:29;;8470:169;;;;:::o;8645:171::-;8785:23;8781:1;8773:6;8769:14;8762:47;8645:171;:::o;8822:366::-;8964:3;8985:67;9049:2;9044:3;8985:67;:::i;:::-;8978:74;;9061:93;9150:3;9061:93;:::i;:::-;9179:2;9174:3;9170:12;9163:19;;8822:366;;;:::o;9194:419::-;9360:4;9398:2;9387:9;9383:18;9375:26;;9447:9;9441:4;9437:20;9433:1;9422:9;9418:17;9411:47;9475:131;9601:4;9475:131;:::i;:::-;9467:139;;9194:419;;;:::o;9619:180::-;9667:77;9664:1;9657:88;9764:4;9761:1;9754:15;9788:4;9785:1;9778:15;9805:191;9845:3;9864:20;9882:1;9864:20;:::i;:::-;9859:25;;9898:20;9916:1;9898:20;:::i;:::-;9893:25;;9941:1;9938;9934:9;9927:16;;9962:3;9959:1;9956:10;9953:36;;;9969:18;;:::i;:::-;9953:36;9805:191;;;;:::o;10002:118::-;10089:24;10107:5;10089:24;:::i;:::-;10084:3;10077:37;10002:118;;:::o;10126:222::-;10219:4;10257:2;10246:9;10242:18;10234:26;;10270:71;10338:1;10327:9;10323:17;10314:6;10270:71;:::i;:::-;10126:222;;;;:::o;2379:7170:5:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_1241": {
									"entryPoint": 1210,
									"id": 1241,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_mint_1196": {
									"entryPoint": 2398,
									"id": 1196,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_spendAllowance_1284": {
									"entryPoint": 1661,
									"id": 1284,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_1127": {
									"entryPoint": 1800,
									"id": 1127,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_1004": {
									"entryPoint": 1080,
									"id": 1004,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_1029": {
									"entryPoint": 692,
									"id": 1029,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_961": {
									"entryPoint": 840,
									"id": 961,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_937": {
									"entryPoint": 832,
									"id": 937,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@distributeTokens_1157": {
									"entryPoint": 767,
									"id": 1157,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@name_919": {
									"entryPoint": 548,
									"id": 919,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@symbol_928": {
									"entryPoint": 909,
									"id": 928,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_947": {
									"entryPoint": 719,
									"id": 947,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_1062": {
									"entryPoint": 728,
									"id": 1062,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_986": {
									"entryPoint": 1053,
									"id": 986,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 3416,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 2941,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 3520,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 2992,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3707,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 3750,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 3165,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 3012,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_uint256": {
									"entryPoint": 3565,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 3085,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2766,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_20dbb1b88f187125d7e634b087bca125fe84cb7576ed5ae599f7ade955801583_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4198,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_5a98b1b7aea43f8d2c5e7374d83247c617d61e309a25e04b2d187396e80e2f33_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4406,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_60ddc17bfa12607ae34d7f3e2c1a5e5e76d3df1dbd138648938348e49dfcdb83_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4094,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_651eb56b4057abdaf2e587df909bfa283fd53bb02e7bec01c656b90461b28a33_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4510,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_7a78c16e238661bc87912c98a6b9c315e675fa3ce0eae8ab62006fa6a2501672_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3990,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_7d79078ae789ab4c477aa2fd5708f247777d35469b9b56847e43bb56bb8a9596_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4302,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ad685e5f39ea8e4d673810c314cd17a816075806a69a16cb331cf4108f5f47f5_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4614,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3125,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 3667,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 3100,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2822,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_20dbb1b88f187125d7e634b087bca125fe84cb7576ed5ae599f7ade955801583__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4232,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5a98b1b7aea43f8d2c5e7374d83247c617d61e309a25e04b2d187396e80e2f33__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4440,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_60ddc17bfa12607ae34d7f3e2c1a5e5e76d3df1dbd138648938348e49dfcdb83__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4128,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_651eb56b4057abdaf2e587df909bfa283fd53bb02e7bec01c656b90461b28a33__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4544,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7a78c16e238661bc87912c98a6b9c315e675fa3ce0eae8ab62006fa6a2501672__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4024,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7d79078ae789ab4c477aa2fd5708f247777d35469b9b56847e43bb56bb8a9596__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4336,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ad685e5f39ea8e4d673810c314cd17a816075806a69a16cb331cf4108f5f47f5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4648,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3140,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 3682,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 3343,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 2854,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 3369,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 2710,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2720,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4723,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 2902,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 3074,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2871,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2961,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 3655,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 2736,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 3857,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 3294,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"panic_error_0x11": {
									"entryPoint": 4678,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 3812,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 3905,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 3249,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 3245,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 3412,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 2867,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 2863,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 2750,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_20dbb1b88f187125d7e634b087bca125fe84cb7576ed5ae599f7ade955801583": {
									"entryPoint": 4158,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_5a98b1b7aea43f8d2c5e7374d83247c617d61e309a25e04b2d187396e80e2f33": {
									"entryPoint": 4366,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_60ddc17bfa12607ae34d7f3e2c1a5e5e76d3df1dbd138648938348e49dfcdb83": {
									"entryPoint": 4054,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_651eb56b4057abdaf2e587df909bfa283fd53bb02e7bec01c656b90461b28a33": {
									"entryPoint": 4470,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_7a78c16e238661bc87912c98a6b9c315e675fa3ce0eae8ab62006fa6a2501672": {
									"entryPoint": 3950,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_7d79078ae789ab4c477aa2fd5708f247777d35469b9b56847e43bb56bb8a9596": {
									"entryPoint": 4262,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ad685e5f39ea8e4d673810c314cd17a816075806a69a16cb331cf4108f5f47f5": {
									"entryPoint": 4574,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 2919,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 2970,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:16450:6",
										"nodeType": "YulBlock",
										"src": "0:16450:6",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:6",
													"nodeType": "YulBlock",
													"src": "66:40:6",
													"statements": [
														{
															"nativeSrc": "77:22:6",
															"nodeType": "YulAssignment",
															"src": "77:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:6"
																},
																"nativeSrc": "87:12:6",
																"nodeType": "YulFunctionCall",
																"src": "87:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:6"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:6",
														"nodeType": "YulTypedName",
														"src": "49:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:6",
														"nodeType": "YulTypedName",
														"src": "59:6:6",
														"type": ""
													}
												],
												"src": "7:99:6"
											},
											{
												"body": {
													"nativeSrc": "208:73:6",
													"nodeType": "YulBlock",
													"src": "208:73:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "225:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "230:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "218:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:6"
																},
																"nativeSrc": "218:19:6",
																"nodeType": "YulFunctionCall",
																"src": "218:19:6"
															},
															"nativeSrc": "218:19:6",
															"nodeType": "YulExpressionStatement",
															"src": "218:19:6"
														},
														{
															"nativeSrc": "246:29:6",
															"nodeType": "YulAssignment",
															"src": "246:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "265:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "270:4:6",
																		"nodeType": "YulLiteral",
																		"src": "270:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "261:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:6"
																},
																"nativeSrc": "261:14:6",
																"nodeType": "YulFunctionCall",
																"src": "261:14:6"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "246:11:6",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:6"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "112:169:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "180:3:6",
														"nodeType": "YulTypedName",
														"src": "180:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "185:6:6",
														"nodeType": "YulTypedName",
														"src": "185:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "196:11:6",
														"nodeType": "YulTypedName",
														"src": "196:11:6",
														"type": ""
													}
												],
												"src": "112:169:6"
											},
											{
												"body": {
													"nativeSrc": "349:77:6",
													"nodeType": "YulBlock",
													"src": "349:77:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "366:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "366:3:6"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "371:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "371:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "376:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "376:6:6"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "360:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "360:5:6"
																},
																"nativeSrc": "360:23:6",
																"nodeType": "YulFunctionCall",
																"src": "360:23:6"
															},
															"nativeSrc": "360:23:6",
															"nodeType": "YulExpressionStatement",
															"src": "360:23:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "403:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "403:3:6"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "408:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "408:6:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "399:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "399:3:6"
																		},
																		"nativeSrc": "399:16:6",
																		"nodeType": "YulFunctionCall",
																		"src": "399:16:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "417:1:6",
																		"nodeType": "YulLiteral",
																		"src": "417:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "392:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "392:6:6"
																},
																"nativeSrc": "392:27:6",
																"nodeType": "YulFunctionCall",
																"src": "392:27:6"
															},
															"nativeSrc": "392:27:6",
															"nodeType": "YulExpressionStatement",
															"src": "392:27:6"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "287:139:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "331:3:6",
														"nodeType": "YulTypedName",
														"src": "331:3:6",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "336:3:6",
														"nodeType": "YulTypedName",
														"src": "336:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "341:6:6",
														"nodeType": "YulTypedName",
														"src": "341:6:6",
														"type": ""
													}
												],
												"src": "287:139:6"
											},
											{
												"body": {
													"nativeSrc": "480:54:6",
													"nodeType": "YulBlock",
													"src": "480:54:6",
													"statements": [
														{
															"nativeSrc": "490:38:6",
															"nodeType": "YulAssignment",
															"src": "490:38:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "508:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "508:5:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "515:2:6",
																				"nodeType": "YulLiteral",
																				"src": "515:2:6",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "504:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "504:3:6"
																		},
																		"nativeSrc": "504:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "504:14:6"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "524:2:6",
																				"nodeType": "YulLiteral",
																				"src": "524:2:6",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "520:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "520:3:6"
																		},
																		"nativeSrc": "520:7:6",
																		"nodeType": "YulFunctionCall",
																		"src": "520:7:6"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "500:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "500:3:6"
																},
																"nativeSrc": "500:28:6",
																"nodeType": "YulFunctionCall",
																"src": "500:28:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "490:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "490:6:6"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "432:102:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "463:5:6",
														"nodeType": "YulTypedName",
														"src": "463:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "473:6:6",
														"nodeType": "YulTypedName",
														"src": "473:6:6",
														"type": ""
													}
												],
												"src": "432:102:6"
											},
											{
												"body": {
													"nativeSrc": "632:285:6",
													"nodeType": "YulBlock",
													"src": "632:285:6",
													"statements": [
														{
															"nativeSrc": "642:53:6",
															"nodeType": "YulVariableDeclaration",
															"src": "642:53:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "689:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "689:5:6"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "656:32:6",
																	"nodeType": "YulIdentifier",
																	"src": "656:32:6"
																},
																"nativeSrc": "656:39:6",
																"nodeType": "YulFunctionCall",
																"src": "656:39:6"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "646:6:6",
																	"nodeType": "YulTypedName",
																	"src": "646:6:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "704:78:6",
															"nodeType": "YulAssignment",
															"src": "704:78:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "770:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "770:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "775:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "775:6:6"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "711:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "711:58:6"
																},
																"nativeSrc": "711:71:6",
																"nodeType": "YulFunctionCall",
																"src": "711:71:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "704:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "704:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "830:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "830:5:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "837:4:6",
																				"nodeType": "YulLiteral",
																				"src": "837:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "826:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "826:3:6"
																		},
																		"nativeSrc": "826:16:6",
																		"nodeType": "YulFunctionCall",
																		"src": "826:16:6"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "844:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "844:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "849:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "849:6:6"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "791:34:6",
																	"nodeType": "YulIdentifier",
																	"src": "791:34:6"
																},
																"nativeSrc": "791:65:6",
																"nodeType": "YulFunctionCall",
																"src": "791:65:6"
															},
															"nativeSrc": "791:65:6",
															"nodeType": "YulExpressionStatement",
															"src": "791:65:6"
														},
														{
															"nativeSrc": "865:46:6",
															"nodeType": "YulAssignment",
															"src": "865:46:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "876:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "876:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "903:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "903:6:6"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "881:21:6",
																			"nodeType": "YulIdentifier",
																			"src": "881:21:6"
																		},
																		"nativeSrc": "881:29:6",
																		"nodeType": "YulFunctionCall",
																		"src": "881:29:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "872:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "872:3:6"
																},
																"nativeSrc": "872:39:6",
																"nodeType": "YulFunctionCall",
																"src": "872:39:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "865:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "865:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "540:377:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "613:5:6",
														"nodeType": "YulTypedName",
														"src": "613:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "620:3:6",
														"nodeType": "YulTypedName",
														"src": "620:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "628:3:6",
														"nodeType": "YulTypedName",
														"src": "628:3:6",
														"type": ""
													}
												],
												"src": "540:377:6"
											},
											{
												"body": {
													"nativeSrc": "1041:195:6",
													"nodeType": "YulBlock",
													"src": "1041:195:6",
													"statements": [
														{
															"nativeSrc": "1051:26:6",
															"nodeType": "YulAssignment",
															"src": "1051:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1063:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1063:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1074:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1074:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1059:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1059:3:6"
																},
																"nativeSrc": "1059:18:6",
																"nodeType": "YulFunctionCall",
																"src": "1059:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1051:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1051:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1098:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1098:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1109:1:6",
																				"nodeType": "YulLiteral",
																				"src": "1109:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1094:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1094:3:6"
																		},
																		"nativeSrc": "1094:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1094:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1117:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "1117:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1123:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1123:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1113:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1113:3:6"
																		},
																		"nativeSrc": "1113:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1113:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1087:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1087:6:6"
																},
																"nativeSrc": "1087:47:6",
																"nodeType": "YulFunctionCall",
																"src": "1087:47:6"
															},
															"nativeSrc": "1087:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "1087:47:6"
														},
														{
															"nativeSrc": "1143:86:6",
															"nodeType": "YulAssignment",
															"src": "1143:86:6",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1215:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1215:6:6"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "1224:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "1224:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1151:63:6",
																	"nodeType": "YulIdentifier",
																	"src": "1151:63:6"
																},
																"nativeSrc": "1151:78:6",
																"nodeType": "YulFunctionCall",
																"src": "1151:78:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1143:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1143:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "923:313:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1013:9:6",
														"nodeType": "YulTypedName",
														"src": "1013:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1025:6:6",
														"nodeType": "YulTypedName",
														"src": "1025:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1036:4:6",
														"nodeType": "YulTypedName",
														"src": "1036:4:6",
														"type": ""
													}
												],
												"src": "923:313:6"
											},
											{
												"body": {
													"nativeSrc": "1282:35:6",
													"nodeType": "YulBlock",
													"src": "1282:35:6",
													"statements": [
														{
															"nativeSrc": "1292:19:6",
															"nodeType": "YulAssignment",
															"src": "1292:19:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1308:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1308:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1302:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1302:5:6"
																},
																"nativeSrc": "1302:9:6",
																"nodeType": "YulFunctionCall",
																"src": "1302:9:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1292:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1292:6:6"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1242:75:6",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1275:6:6",
														"nodeType": "YulTypedName",
														"src": "1275:6:6",
														"type": ""
													}
												],
												"src": "1242:75:6"
											},
											{
												"body": {
													"nativeSrc": "1412:28:6",
													"nodeType": "YulBlock",
													"src": "1412:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1429:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1429:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1432:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1432:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1422:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1422:6:6"
																},
																"nativeSrc": "1422:12:6",
																"nodeType": "YulFunctionCall",
																"src": "1422:12:6"
															},
															"nativeSrc": "1422:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "1422:12:6"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1323:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "1323:117:6"
											},
											{
												"body": {
													"nativeSrc": "1535:28:6",
													"nodeType": "YulBlock",
													"src": "1535:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1552:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1552:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1555:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1555:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1545:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1545:6:6"
																},
																"nativeSrc": "1545:12:6",
																"nodeType": "YulFunctionCall",
																"src": "1545:12:6"
															},
															"nativeSrc": "1545:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "1545:12:6"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1446:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "1446:117:6"
											},
											{
												"body": {
													"nativeSrc": "1614:81:6",
													"nodeType": "YulBlock",
													"src": "1614:81:6",
													"statements": [
														{
															"nativeSrc": "1624:65:6",
															"nodeType": "YulAssignment",
															"src": "1624:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1639:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "1639:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1646:42:6",
																		"nodeType": "YulLiteral",
																		"src": "1646:42:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1635:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1635:3:6"
																},
																"nativeSrc": "1635:54:6",
																"nodeType": "YulFunctionCall",
																"src": "1635:54:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1624:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "1624:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1569:126:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1596:5:6",
														"nodeType": "YulTypedName",
														"src": "1596:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1606:7:6",
														"nodeType": "YulTypedName",
														"src": "1606:7:6",
														"type": ""
													}
												],
												"src": "1569:126:6"
											},
											{
												"body": {
													"nativeSrc": "1746:51:6",
													"nodeType": "YulBlock",
													"src": "1746:51:6",
													"statements": [
														{
															"nativeSrc": "1756:35:6",
															"nodeType": "YulAssignment",
															"src": "1756:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1785:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "1785:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1767:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "1767:17:6"
																},
																"nativeSrc": "1767:24:6",
																"nodeType": "YulFunctionCall",
																"src": "1767:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1756:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "1756:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1701:96:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1728:5:6",
														"nodeType": "YulTypedName",
														"src": "1728:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1738:7:6",
														"nodeType": "YulTypedName",
														"src": "1738:7:6",
														"type": ""
													}
												],
												"src": "1701:96:6"
											},
											{
												"body": {
													"nativeSrc": "1846:79:6",
													"nodeType": "YulBlock",
													"src": "1846:79:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "1903:16:6",
																"nodeType": "YulBlock",
																"src": "1903:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1912:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1912:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1915:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1915:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1905:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1905:6:6"
																			},
																			"nativeSrc": "1905:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1905:12:6"
																		},
																		"nativeSrc": "1905:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1905:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1869:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "1869:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1894:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "1894:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1876:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "1876:17:6"
																				},
																				"nativeSrc": "1876:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1876:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1866:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "1866:2:6"
																		},
																		"nativeSrc": "1866:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1866:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1859:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1859:6:6"
																},
																"nativeSrc": "1859:43:6",
																"nodeType": "YulFunctionCall",
																"src": "1859:43:6"
															},
															"nativeSrc": "1856:63:6",
															"nodeType": "YulIf",
															"src": "1856:63:6"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1803:122:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1839:5:6",
														"nodeType": "YulTypedName",
														"src": "1839:5:6",
														"type": ""
													}
												],
												"src": "1803:122:6"
											},
											{
												"body": {
													"nativeSrc": "1983:87:6",
													"nodeType": "YulBlock",
													"src": "1983:87:6",
													"statements": [
														{
															"nativeSrc": "1993:29:6",
															"nodeType": "YulAssignment",
															"src": "1993:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2015:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2015:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2002:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "2002:12:6"
																},
																"nativeSrc": "2002:20:6",
																"nodeType": "YulFunctionCall",
																"src": "2002:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1993:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1993:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2058:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "2058:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2031:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "2031:26:6"
																},
																"nativeSrc": "2031:33:6",
																"nodeType": "YulFunctionCall",
																"src": "2031:33:6"
															},
															"nativeSrc": "2031:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "2031:33:6"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1931:139:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1961:6:6",
														"nodeType": "YulTypedName",
														"src": "1961:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1969:3:6",
														"nodeType": "YulTypedName",
														"src": "1969:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1977:5:6",
														"nodeType": "YulTypedName",
														"src": "1977:5:6",
														"type": ""
													}
												],
												"src": "1931:139:6"
											},
											{
												"body": {
													"nativeSrc": "2121:32:6",
													"nodeType": "YulBlock",
													"src": "2121:32:6",
													"statements": [
														{
															"nativeSrc": "2131:16:6",
															"nodeType": "YulAssignment",
															"src": "2131:16:6",
															"value": {
																"name": "value",
																"nativeSrc": "2142:5:6",
																"nodeType": "YulIdentifier",
																"src": "2142:5:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2131:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "2131:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2076:77:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2103:5:6",
														"nodeType": "YulTypedName",
														"src": "2103:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2113:7:6",
														"nodeType": "YulTypedName",
														"src": "2113:7:6",
														"type": ""
													}
												],
												"src": "2076:77:6"
											},
											{
												"body": {
													"nativeSrc": "2202:79:6",
													"nodeType": "YulBlock",
													"src": "2202:79:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "2259:16:6",
																"nodeType": "YulBlock",
																"src": "2259:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2268:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2268:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2271:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2271:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2261:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2261:6:6"
																			},
																			"nativeSrc": "2261:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2261:12:6"
																		},
																		"nativeSrc": "2261:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2261:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2225:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "2225:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2250:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "2250:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2232:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "2232:17:6"
																				},
																				"nativeSrc": "2232:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2232:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2222:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "2222:2:6"
																		},
																		"nativeSrc": "2222:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2222:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2215:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2215:6:6"
																},
																"nativeSrc": "2215:43:6",
																"nodeType": "YulFunctionCall",
																"src": "2215:43:6"
															},
															"nativeSrc": "2212:63:6",
															"nodeType": "YulIf",
															"src": "2212:63:6"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2159:122:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2195:5:6",
														"nodeType": "YulTypedName",
														"src": "2195:5:6",
														"type": ""
													}
												],
												"src": "2159:122:6"
											},
											{
												"body": {
													"nativeSrc": "2339:87:6",
													"nodeType": "YulBlock",
													"src": "2339:87:6",
													"statements": [
														{
															"nativeSrc": "2349:29:6",
															"nodeType": "YulAssignment",
															"src": "2349:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2371:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2371:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2358:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "2358:12:6"
																},
																"nativeSrc": "2358:20:6",
																"nodeType": "YulFunctionCall",
																"src": "2358:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2349:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "2349:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2414:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "2414:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2387:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "2387:26:6"
																},
																"nativeSrc": "2387:33:6",
																"nodeType": "YulFunctionCall",
																"src": "2387:33:6"
															},
															"nativeSrc": "2387:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "2387:33:6"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2287:139:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2317:6:6",
														"nodeType": "YulTypedName",
														"src": "2317:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2325:3:6",
														"nodeType": "YulTypedName",
														"src": "2325:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2333:5:6",
														"nodeType": "YulTypedName",
														"src": "2333:5:6",
														"type": ""
													}
												],
												"src": "2287:139:6"
											},
											{
												"body": {
													"nativeSrc": "2515:391:6",
													"nodeType": "YulBlock",
													"src": "2515:391:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "2561:83:6",
																"nodeType": "YulBlock",
																"src": "2561:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2563:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "2563:77:6"
																			},
																			"nativeSrc": "2563:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2563:79:6"
																		},
																		"nativeSrc": "2563:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2563:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2536:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "2536:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2545:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2545:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2532:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2532:3:6"
																		},
																		"nativeSrc": "2532:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2532:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2557:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2557:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2528:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2528:3:6"
																},
																"nativeSrc": "2528:32:6",
																"nodeType": "YulFunctionCall",
																"src": "2528:32:6"
															},
															"nativeSrc": "2525:119:6",
															"nodeType": "YulIf",
															"src": "2525:119:6"
														},
														{
															"nativeSrc": "2654:117:6",
															"nodeType": "YulBlock",
															"src": "2654:117:6",
															"statements": [
																{
																	"nativeSrc": "2669:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2669:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2683:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2683:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2673:6:6",
																			"nodeType": "YulTypedName",
																			"src": "2673:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2698:63:6",
																	"nodeType": "YulAssignment",
																	"src": "2698:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2733:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "2733:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2744:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "2744:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2729:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "2729:3:6"
																				},
																				"nativeSrc": "2729:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2729:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2753:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "2753:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2708:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "2708:20:6"
																		},
																		"nativeSrc": "2708:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2708:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2698:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "2698:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2781:118:6",
															"nodeType": "YulBlock",
															"src": "2781:118:6",
															"statements": [
																{
																	"nativeSrc": "2796:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2796:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2810:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2810:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2800:6:6",
																			"nodeType": "YulTypedName",
																			"src": "2800:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2826:63:6",
																	"nodeType": "YulAssignment",
																	"src": "2826:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2861:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "2861:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2872:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "2872:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2857:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "2857:3:6"
																				},
																				"nativeSrc": "2857:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2857:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2881:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "2881:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2836:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "2836:20:6"
																		},
																		"nativeSrc": "2836:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2836:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2826:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "2826:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2432:474:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2477:9:6",
														"nodeType": "YulTypedName",
														"src": "2477:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2488:7:6",
														"nodeType": "YulTypedName",
														"src": "2488:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2500:6:6",
														"nodeType": "YulTypedName",
														"src": "2500:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2508:6:6",
														"nodeType": "YulTypedName",
														"src": "2508:6:6",
														"type": ""
													}
												],
												"src": "2432:474:6"
											},
											{
												"body": {
													"nativeSrc": "2954:48:6",
													"nodeType": "YulBlock",
													"src": "2954:48:6",
													"statements": [
														{
															"nativeSrc": "2964:32:6",
															"nodeType": "YulAssignment",
															"src": "2964:32:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2989:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "2989:5:6"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "2982:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "2982:6:6"
																		},
																		"nativeSrc": "2982:13:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2982:13:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2975:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2975:6:6"
																},
																"nativeSrc": "2975:21:6",
																"nodeType": "YulFunctionCall",
																"src": "2975:21:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2964:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "2964:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "2912:90:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2936:5:6",
														"nodeType": "YulTypedName",
														"src": "2936:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2946:7:6",
														"nodeType": "YulTypedName",
														"src": "2946:7:6",
														"type": ""
													}
												],
												"src": "2912:90:6"
											},
											{
												"body": {
													"nativeSrc": "3067:50:6",
													"nodeType": "YulBlock",
													"src": "3067:50:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3084:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "3084:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3104:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "3104:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3089:14:6",
																			"nodeType": "YulIdentifier",
																			"src": "3089:14:6"
																		},
																		"nativeSrc": "3089:21:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3089:21:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3077:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3077:6:6"
																},
																"nativeSrc": "3077:34:6",
																"nodeType": "YulFunctionCall",
																"src": "3077:34:6"
															},
															"nativeSrc": "3077:34:6",
															"nodeType": "YulExpressionStatement",
															"src": "3077:34:6"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3008:109:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3055:5:6",
														"nodeType": "YulTypedName",
														"src": "3055:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3062:3:6",
														"nodeType": "YulTypedName",
														"src": "3062:3:6",
														"type": ""
													}
												],
												"src": "3008:109:6"
											},
											{
												"body": {
													"nativeSrc": "3215:118:6",
													"nodeType": "YulBlock",
													"src": "3215:118:6",
													"statements": [
														{
															"nativeSrc": "3225:26:6",
															"nodeType": "YulAssignment",
															"src": "3225:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3237:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "3237:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3248:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3248:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3233:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3233:3:6"
																},
																"nativeSrc": "3233:18:6",
																"nodeType": "YulFunctionCall",
																"src": "3233:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3225:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "3225:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3299:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "3299:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3312:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3312:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3323:1:6",
																				"nodeType": "YulLiteral",
																				"src": "3323:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3308:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3308:3:6"
																		},
																		"nativeSrc": "3308:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3308:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3261:37:6",
																	"nodeType": "YulIdentifier",
																	"src": "3261:37:6"
																},
																"nativeSrc": "3261:65:6",
																"nodeType": "YulFunctionCall",
																"src": "3261:65:6"
															},
															"nativeSrc": "3261:65:6",
															"nodeType": "YulExpressionStatement",
															"src": "3261:65:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3123:210:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3187:9:6",
														"nodeType": "YulTypedName",
														"src": "3187:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3199:6:6",
														"nodeType": "YulTypedName",
														"src": "3199:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3210:4:6",
														"nodeType": "YulTypedName",
														"src": "3210:4:6",
														"type": ""
													}
												],
												"src": "3123:210:6"
											},
											{
												"body": {
													"nativeSrc": "3404:53:6",
													"nodeType": "YulBlock",
													"src": "3404:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3421:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "3421:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3444:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "3444:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "3426:17:6",
																			"nodeType": "YulIdentifier",
																			"src": "3426:17:6"
																		},
																		"nativeSrc": "3426:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3426:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3414:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3414:6:6"
																},
																"nativeSrc": "3414:37:6",
																"nodeType": "YulFunctionCall",
																"src": "3414:37:6"
															},
															"nativeSrc": "3414:37:6",
															"nodeType": "YulExpressionStatement",
															"src": "3414:37:6"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "3339:118:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3392:5:6",
														"nodeType": "YulTypedName",
														"src": "3392:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3399:3:6",
														"nodeType": "YulTypedName",
														"src": "3399:3:6",
														"type": ""
													}
												],
												"src": "3339:118:6"
											},
											{
												"body": {
													"nativeSrc": "3561:124:6",
													"nodeType": "YulBlock",
													"src": "3561:124:6",
													"statements": [
														{
															"nativeSrc": "3571:26:6",
															"nodeType": "YulAssignment",
															"src": "3571:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3583:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "3583:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3594:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3594:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3579:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3579:3:6"
																},
																"nativeSrc": "3579:18:6",
																"nodeType": "YulFunctionCall",
																"src": "3579:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3571:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "3571:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3651:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "3651:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3664:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3664:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3675:1:6",
																				"nodeType": "YulLiteral",
																				"src": "3675:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3660:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3660:3:6"
																		},
																		"nativeSrc": "3660:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3660:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3607:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "3607:43:6"
																},
																"nativeSrc": "3607:71:6",
																"nodeType": "YulFunctionCall",
																"src": "3607:71:6"
															},
															"nativeSrc": "3607:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "3607:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3463:222:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3533:9:6",
														"nodeType": "YulTypedName",
														"src": "3533:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3545:6:6",
														"nodeType": "YulTypedName",
														"src": "3545:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3556:4:6",
														"nodeType": "YulTypedName",
														"src": "3556:4:6",
														"type": ""
													}
												],
												"src": "3463:222:6"
											},
											{
												"body": {
													"nativeSrc": "3791:519:6",
													"nodeType": "YulBlock",
													"src": "3791:519:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "3837:83:6",
																"nodeType": "YulBlock",
																"src": "3837:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3839:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "3839:77:6"
																			},
																			"nativeSrc": "3839:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3839:79:6"
																		},
																		"nativeSrc": "3839:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3839:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3812:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "3812:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3821:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3821:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3808:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3808:3:6"
																		},
																		"nativeSrc": "3808:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3808:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3833:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3833:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3804:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3804:3:6"
																},
																"nativeSrc": "3804:32:6",
																"nodeType": "YulFunctionCall",
																"src": "3804:32:6"
															},
															"nativeSrc": "3801:119:6",
															"nodeType": "YulIf",
															"src": "3801:119:6"
														},
														{
															"nativeSrc": "3930:117:6",
															"nodeType": "YulBlock",
															"src": "3930:117:6",
															"statements": [
																{
																	"nativeSrc": "3945:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3945:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3959:1:6",
																		"nodeType": "YulLiteral",
																		"src": "3959:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3949:6:6",
																			"nodeType": "YulTypedName",
																			"src": "3949:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3974:63:6",
																	"nodeType": "YulAssignment",
																	"src": "3974:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4009:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "4009:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4020:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "4020:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4005:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4005:3:6"
																				},
																				"nativeSrc": "4005:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4005:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4029:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "4029:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3984:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "3984:20:6"
																		},
																		"nativeSrc": "3984:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3984:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3974:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "3974:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4057:118:6",
															"nodeType": "YulBlock",
															"src": "4057:118:6",
															"statements": [
																{
																	"nativeSrc": "4072:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4072:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4086:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4086:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4076:6:6",
																			"nodeType": "YulTypedName",
																			"src": "4076:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4102:63:6",
																	"nodeType": "YulAssignment",
																	"src": "4102:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4137:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "4137:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4148:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "4148:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4133:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4133:3:6"
																				},
																				"nativeSrc": "4133:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4133:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4157:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "4157:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4112:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "4112:20:6"
																		},
																		"nativeSrc": "4112:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4112:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4102:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "4102:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4185:118:6",
															"nodeType": "YulBlock",
															"src": "4185:118:6",
															"statements": [
																{
																	"nativeSrc": "4200:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4200:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4214:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4214:2:6",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4204:6:6",
																			"nodeType": "YulTypedName",
																			"src": "4204:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4230:63:6",
																	"nodeType": "YulAssignment",
																	"src": "4230:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4265:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "4265:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4276:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "4276:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4261:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4261:3:6"
																				},
																				"nativeSrc": "4261:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4261:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4285:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "4285:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4240:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "4240:20:6"
																		},
																		"nativeSrc": "4240:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4240:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4230:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "4230:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "3691:619:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3745:9:6",
														"nodeType": "YulTypedName",
														"src": "3745:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3756:7:6",
														"nodeType": "YulTypedName",
														"src": "3756:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3768:6:6",
														"nodeType": "YulTypedName",
														"src": "3768:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3776:6:6",
														"nodeType": "YulTypedName",
														"src": "3776:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3784:6:6",
														"nodeType": "YulTypedName",
														"src": "3784:6:6",
														"type": ""
													}
												],
												"src": "3691:619:6"
											},
											{
												"body": {
													"nativeSrc": "4405:28:6",
													"nodeType": "YulBlock",
													"src": "4405:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4422:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4422:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4425:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4425:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4415:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4415:6:6"
																},
																"nativeSrc": "4415:12:6",
																"nodeType": "YulFunctionCall",
																"src": "4415:12:6"
															},
															"nativeSrc": "4415:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "4415:12:6"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "4316:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "4316:117:6"
											},
											{
												"body": {
													"nativeSrc": "4467:152:6",
													"nodeType": "YulBlock",
													"src": "4467:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4484:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4484:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4487:77:6",
																		"nodeType": "YulLiteral",
																		"src": "4487:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4477:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4477:6:6"
																},
																"nativeSrc": "4477:88:6",
																"nodeType": "YulFunctionCall",
																"src": "4477:88:6"
															},
															"nativeSrc": "4477:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "4477:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4581:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4581:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4584:4:6",
																		"nodeType": "YulLiteral",
																		"src": "4584:4:6",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4574:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4574:6:6"
																},
																"nativeSrc": "4574:15:6",
																"nodeType": "YulFunctionCall",
																"src": "4574:15:6"
															},
															"nativeSrc": "4574:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "4574:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4605:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4605:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4608:4:6",
																		"nodeType": "YulLiteral",
																		"src": "4608:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4598:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4598:6:6"
																},
																"nativeSrc": "4598:15:6",
																"nodeType": "YulFunctionCall",
																"src": "4598:15:6"
															},
															"nativeSrc": "4598:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "4598:15:6"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "4439:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "4439:180:6"
											},
											{
												"body": {
													"nativeSrc": "4668:238:6",
													"nodeType": "YulBlock",
													"src": "4668:238:6",
													"statements": [
														{
															"nativeSrc": "4678:58:6",
															"nodeType": "YulVariableDeclaration",
															"src": "4678:58:6",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "4700:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "4700:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "4730:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "4730:4:6"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "4708:21:6",
																			"nodeType": "YulIdentifier",
																			"src": "4708:21:6"
																		},
																		"nativeSrc": "4708:27:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4708:27:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4696:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4696:3:6"
																},
																"nativeSrc": "4696:40:6",
																"nodeType": "YulFunctionCall",
																"src": "4696:40:6"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "4682:10:6",
																	"nodeType": "YulTypedName",
																	"src": "4682:10:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4847:22:6",
																"nodeType": "YulBlock",
																"src": "4847:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "4849:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "4849:16:6"
																			},
																			"nativeSrc": "4849:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4849:18:6"
																		},
																		"nativeSrc": "4849:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "4849:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "4790:10:6",
																				"nodeType": "YulIdentifier",
																				"src": "4790:10:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4802:18:6",
																				"nodeType": "YulLiteral",
																				"src": "4802:18:6",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "4787:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "4787:2:6"
																		},
																		"nativeSrc": "4787:34:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4787:34:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "4826:10:6",
																				"nodeType": "YulIdentifier",
																				"src": "4826:10:6"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "4838:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "4838:6:6"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "4823:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "4823:2:6"
																		},
																		"nativeSrc": "4823:22:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4823:22:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "4784:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "4784:2:6"
																},
																"nativeSrc": "4784:62:6",
																"nodeType": "YulFunctionCall",
																"src": "4784:62:6"
															},
															"nativeSrc": "4781:88:6",
															"nodeType": "YulIf",
															"src": "4781:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4885:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4885:2:6",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "4889:10:6",
																		"nodeType": "YulIdentifier",
																		"src": "4889:10:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4878:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4878:6:6"
																},
																"nativeSrc": "4878:22:6",
																"nodeType": "YulFunctionCall",
																"src": "4878:22:6"
															},
															"nativeSrc": "4878:22:6",
															"nodeType": "YulExpressionStatement",
															"src": "4878:22:6"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "4625:281:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "4654:6:6",
														"nodeType": "YulTypedName",
														"src": "4654:6:6",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "4662:4:6",
														"nodeType": "YulTypedName",
														"src": "4662:4:6",
														"type": ""
													}
												],
												"src": "4625:281:6"
											},
											{
												"body": {
													"nativeSrc": "4953:88:6",
													"nodeType": "YulBlock",
													"src": "4953:88:6",
													"statements": [
														{
															"nativeSrc": "4963:30:6",
															"nodeType": "YulAssignment",
															"src": "4963:30:6",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "4973:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "4973:18:6"
																},
																"nativeSrc": "4973:20:6",
																"nodeType": "YulFunctionCall",
																"src": "4973:20:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "4963:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4963:6:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "5022:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "5022:6:6"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "5030:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "5030:4:6"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "5002:19:6",
																	"nodeType": "YulIdentifier",
																	"src": "5002:19:6"
																},
																"nativeSrc": "5002:33:6",
																"nodeType": "YulFunctionCall",
																"src": "5002:33:6"
															},
															"nativeSrc": "5002:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "5002:33:6"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "4912:129:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "4937:4:6",
														"nodeType": "YulTypedName",
														"src": "4937:4:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "4946:6:6",
														"nodeType": "YulTypedName",
														"src": "4946:6:6",
														"type": ""
													}
												],
												"src": "4912:129:6"
											},
											{
												"body": {
													"nativeSrc": "5129:229:6",
													"nodeType": "YulBlock",
													"src": "5129:229:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "5234:22:6",
																"nodeType": "YulBlock",
																"src": "5234:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "5236:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "5236:16:6"
																			},
																			"nativeSrc": "5236:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "5236:18:6"
																		},
																		"nativeSrc": "5236:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "5236:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "5206:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "5206:6:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5214:18:6",
																		"nodeType": "YulLiteral",
																		"src": "5214:18:6",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5203:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "5203:2:6"
																},
																"nativeSrc": "5203:30:6",
																"nodeType": "YulFunctionCall",
																"src": "5203:30:6"
															},
															"nativeSrc": "5200:56:6",
															"nodeType": "YulIf",
															"src": "5200:56:6"
														},
														{
															"nativeSrc": "5266:25:6",
															"nodeType": "YulAssignment",
															"src": "5266:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "5278:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "5278:6:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5286:4:6",
																		"nodeType": "YulLiteral",
																		"src": "5286:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "5274:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5274:3:6"
																},
																"nativeSrc": "5274:17:6",
																"nodeType": "YulFunctionCall",
																"src": "5274:17:6"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "5266:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "5266:4:6"
																}
															]
														},
														{
															"nativeSrc": "5328:23:6",
															"nodeType": "YulAssignment",
															"src": "5328:23:6",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "5340:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "5340:4:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5346:4:6",
																		"nodeType": "YulLiteral",
																		"src": "5346:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5336:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5336:3:6"
																},
																"nativeSrc": "5336:15:6",
																"nodeType": "YulFunctionCall",
																"src": "5336:15:6"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "5328:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "5328:4:6"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_address_$dyn_memory_ptr",
												"nativeSrc": "5047:311:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "5113:6:6",
														"nodeType": "YulTypedName",
														"src": "5113:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "5124:4:6",
														"nodeType": "YulTypedName",
														"src": "5124:4:6",
														"type": ""
													}
												],
												"src": "5047:311:6"
											},
											{
												"body": {
													"nativeSrc": "5453:28:6",
													"nodeType": "YulBlock",
													"src": "5453:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5470:1:6",
																		"nodeType": "YulLiteral",
																		"src": "5470:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5473:1:6",
																		"nodeType": "YulLiteral",
																		"src": "5473:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5463:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5463:6:6"
																},
																"nativeSrc": "5463:12:6",
																"nodeType": "YulFunctionCall",
																"src": "5463:12:6"
															},
															"nativeSrc": "5463:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "5463:12:6"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nativeSrc": "5364:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "5364:117:6"
											},
											{
												"body": {
													"nativeSrc": "5606:608:6",
													"nodeType": "YulBlock",
													"src": "5606:608:6",
													"statements": [
														{
															"nativeSrc": "5616:90:6",
															"nodeType": "YulAssignment",
															"src": "5616:90:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "5698:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "5698:6:6"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_address_$dyn_memory_ptr",
																			"nativeSrc": "5641:56:6",
																			"nodeType": "YulIdentifier",
																			"src": "5641:56:6"
																		},
																		"nativeSrc": "5641:64:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5641:64:6"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "5625:15:6",
																	"nodeType": "YulIdentifier",
																	"src": "5625:15:6"
																},
																"nativeSrc": "5625:81:6",
																"nodeType": "YulFunctionCall",
																"src": "5625:81:6"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "5616:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "5616:5:6"
																}
															]
														},
														{
															"nativeSrc": "5715:16:6",
															"nodeType": "YulVariableDeclaration",
															"src": "5715:16:6",
															"value": {
																"name": "array",
																"nativeSrc": "5726:5:6",
																"nodeType": "YulIdentifier",
																"src": "5726:5:6"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "5719:3:6",
																	"nodeType": "YulTypedName",
																	"src": "5719:3:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "5748:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "5748:5:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5755:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "5755:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5741:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5741:6:6"
																},
																"nativeSrc": "5741:21:6",
																"nodeType": "YulFunctionCall",
																"src": "5741:21:6"
															},
															"nativeSrc": "5741:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "5741:21:6"
														},
														{
															"nativeSrc": "5771:23:6",
															"nodeType": "YulAssignment",
															"src": "5771:23:6",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "5782:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "5782:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5789:4:6",
																		"nodeType": "YulLiteral",
																		"src": "5789:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5778:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5778:3:6"
																},
																"nativeSrc": "5778:16:6",
																"nodeType": "YulFunctionCall",
																"src": "5778:16:6"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nativeSrc": "5771:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5771:3:6"
																}
															]
														},
														{
															"nativeSrc": "5804:44:6",
															"nodeType": "YulVariableDeclaration",
															"src": "5804:44:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "5822:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "5822:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "5834:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "5834:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5842:4:6",
																				"nodeType": "YulLiteral",
																				"src": "5842:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "5830:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5830:3:6"
																		},
																		"nativeSrc": "5830:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5830:17:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5818:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5818:3:6"
																},
																"nativeSrc": "5818:30:6",
																"nodeType": "YulFunctionCall",
																"src": "5818:30:6"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nativeSrc": "5808:6:6",
																	"nodeType": "YulTypedName",
																	"src": "5808:6:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5876:103:6",
																"nodeType": "YulBlock",
																"src": "5876:103:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nativeSrc": "5890:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "5890:77:6"
																			},
																			"nativeSrc": "5890:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "5890:79:6"
																		},
																		"nativeSrc": "5890:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "5890:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nativeSrc": "5863:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "5863:6:6"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "5871:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "5871:3:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5860:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "5860:2:6"
																},
																"nativeSrc": "5860:15:6",
																"nodeType": "YulFunctionCall",
																"src": "5860:15:6"
															},
															"nativeSrc": "5857:122:6",
															"nodeType": "YulIf",
															"src": "5857:122:6"
														},
														{
															"body": {
																"nativeSrc": "6064:144:6",
																"nodeType": "YulBlock",
																"src": "6064:144:6",
																"statements": [
																	{
																		"nativeSrc": "6079:21:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6079:21:6",
																		"value": {
																			"name": "src",
																			"nativeSrc": "6097:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6097:3:6"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nativeSrc": "6083:10:6",
																				"nodeType": "YulTypedName",
																				"src": "6083:10:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "6121:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "6121:3:6"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nativeSrc": "6147:10:6",
																							"nodeType": "YulIdentifier",
																							"src": "6147:10:6"
																						},
																						{
																							"name": "end",
																							"nativeSrc": "6159:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "6159:3:6"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_address",
																						"nativeSrc": "6126:20:6",
																						"nodeType": "YulIdentifier",
																						"src": "6126:20:6"
																					},
																					"nativeSrc": "6126:37:6",
																					"nodeType": "YulFunctionCall",
																					"src": "6126:37:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "6114:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "6114:6:6"
																			},
																			"nativeSrc": "6114:50:6",
																			"nodeType": "YulFunctionCall",
																			"src": "6114:50:6"
																		},
																		"nativeSrc": "6114:50:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "6114:50:6"
																	},
																	{
																		"nativeSrc": "6177:21:6",
																		"nodeType": "YulAssignment",
																		"src": "6177:21:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "6188:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "6188:3:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6193:4:6",
																					"nodeType": "YulLiteral",
																					"src": "6193:4:6",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6184:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "6184:3:6"
																			},
																			"nativeSrc": "6184:14:6",
																			"nodeType": "YulFunctionCall",
																			"src": "6184:14:6"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nativeSrc": "6177:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "6177:3:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "6017:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "6017:3:6"
																	},
																	{
																		"name": "srcEnd",
																		"nativeSrc": "6022:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "6022:6:6"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "6014:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "6014:2:6"
																},
																"nativeSrc": "6014:15:6",
																"nodeType": "YulFunctionCall",
																"src": "6014:15:6"
															},
															"nativeSrc": "5988:220:6",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "6030:25:6",
																"nodeType": "YulBlock",
																"src": "6030:25:6",
																"statements": [
																	{
																		"nativeSrc": "6032:21:6",
																		"nodeType": "YulAssignment",
																		"src": "6032:21:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nativeSrc": "6043:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "6043:3:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6048:4:6",
																					"nodeType": "YulLiteral",
																					"src": "6048:4:6",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6039:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "6039:3:6"
																			},
																			"nativeSrc": "6039:14:6",
																			"nodeType": "YulFunctionCall",
																			"src": "6039:14:6"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nativeSrc": "6032:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "6032:3:6"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "5992:21:6",
																"nodeType": "YulBlock",
																"src": "5992:21:6",
																"statements": [
																	{
																		"nativeSrc": "5994:17:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "5994:17:6",
																		"value": {
																			"name": "offset",
																			"nativeSrc": "6005:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "6005:6:6"
																		},
																		"variables": [
																			{
																				"name": "src",
																				"nativeSrc": "5998:3:6",
																				"nodeType": "YulTypedName",
																				"src": "5998:3:6",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "5988:220:6"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr",
												"nativeSrc": "5504:710:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "5576:6:6",
														"nodeType": "YulTypedName",
														"src": "5576:6:6",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "5584:6:6",
														"nodeType": "YulTypedName",
														"src": "5584:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "5592:3:6",
														"nodeType": "YulTypedName",
														"src": "5592:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "5600:5:6",
														"nodeType": "YulTypedName",
														"src": "5600:5:6",
														"type": ""
													}
												],
												"src": "5504:710:6"
											},
											{
												"body": {
													"nativeSrc": "6314:293:6",
													"nodeType": "YulBlock",
													"src": "6314:293:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "6363:83:6",
																"nodeType": "YulBlock",
																"src": "6363:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "6365:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "6365:77:6"
																			},
																			"nativeSrc": "6365:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "6365:79:6"
																		},
																		"nativeSrc": "6365:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "6365:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "6342:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "6342:6:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6350:4:6",
																						"nodeType": "YulLiteral",
																						"src": "6350:4:6",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6338:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "6338:3:6"
																				},
																				"nativeSrc": "6338:17:6",
																				"nodeType": "YulFunctionCall",
																				"src": "6338:17:6"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "6357:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "6357:3:6"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "6334:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6334:3:6"
																		},
																		"nativeSrc": "6334:27:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6334:27:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6327:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6327:6:6"
																},
																"nativeSrc": "6327:35:6",
																"nodeType": "YulFunctionCall",
																"src": "6327:35:6"
															},
															"nativeSrc": "6324:122:6",
															"nodeType": "YulIf",
															"src": "6324:122:6"
														},
														{
															"nativeSrc": "6455:34:6",
															"nodeType": "YulVariableDeclaration",
															"src": "6455:34:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "6482:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "6482:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "6469:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "6469:12:6"
																},
																"nativeSrc": "6469:20:6",
																"nodeType": "YulFunctionCall",
																"src": "6469:20:6"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "6459:6:6",
																	"nodeType": "YulTypedName",
																	"src": "6459:6:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6498:103:6",
															"nodeType": "YulAssignment",
															"src": "6498:103:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "6574:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "6574:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6582:4:6",
																				"nodeType": "YulLiteral",
																				"src": "6582:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6570:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6570:3:6"
																		},
																		"nativeSrc": "6570:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6570:17:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6589:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "6589:6:6"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "6597:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "6597:3:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr",
																	"nativeSrc": "6507:62:6",
																	"nodeType": "YulIdentifier",
																	"src": "6507:62:6"
																},
																"nativeSrc": "6507:94:6",
																"nodeType": "YulFunctionCall",
																"src": "6507:94:6"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "6498:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "6498:5:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_address_$dyn_memory_ptr",
												"nativeSrc": "6237:370:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "6292:6:6",
														"nodeType": "YulTypedName",
														"src": "6292:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6300:3:6",
														"nodeType": "YulTypedName",
														"src": "6300:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "6308:5:6",
														"nodeType": "YulTypedName",
														"src": "6308:5:6",
														"type": ""
													}
												],
												"src": "6237:370:6"
											},
											{
												"body": {
													"nativeSrc": "6721:576:6",
													"nodeType": "YulBlock",
													"src": "6721:576:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "6767:83:6",
																"nodeType": "YulBlock",
																"src": "6767:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6769:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "6769:77:6"
																			},
																			"nativeSrc": "6769:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "6769:79:6"
																		},
																		"nativeSrc": "6769:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "6769:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6742:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "6742:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6751:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "6751:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6738:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6738:3:6"
																		},
																		"nativeSrc": "6738:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6738:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6763:2:6",
																		"nodeType": "YulLiteral",
																		"src": "6763:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6734:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6734:3:6"
																},
																"nativeSrc": "6734:32:6",
																"nodeType": "YulFunctionCall",
																"src": "6734:32:6"
															},
															"nativeSrc": "6731:119:6",
															"nodeType": "YulIf",
															"src": "6731:119:6"
														},
														{
															"nativeSrc": "6860:302:6",
															"nodeType": "YulBlock",
															"src": "6860:302:6",
															"statements": [
																{
																	"nativeSrc": "6875:45:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6875:45:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6906:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "6906:9:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6917:1:6",
																						"nodeType": "YulLiteral",
																						"src": "6917:1:6",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6902:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "6902:3:6"
																				},
																				"nativeSrc": "6902:17:6",
																				"nodeType": "YulFunctionCall",
																				"src": "6902:17:6"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "6889:12:6",
																			"nodeType": "YulIdentifier",
																			"src": "6889:12:6"
																		},
																		"nativeSrc": "6889:31:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6889:31:6"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6879:6:6",
																			"nodeType": "YulTypedName",
																			"src": "6879:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "6967:83:6",
																		"nodeType": "YulBlock",
																		"src": "6967:83:6",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "6969:77:6",
																						"nodeType": "YulIdentifier",
																						"src": "6969:77:6"
																					},
																					"nativeSrc": "6969:79:6",
																					"nodeType": "YulFunctionCall",
																					"src": "6969:79:6"
																				},
																				"nativeSrc": "6969:79:6",
																				"nodeType": "YulExpressionStatement",
																				"src": "6969:79:6"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "6939:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "6939:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6947:18:6",
																				"nodeType": "YulLiteral",
																				"src": "6947:18:6",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "6936:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "6936:2:6"
																		},
																		"nativeSrc": "6936:30:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6936:30:6"
																	},
																	"nativeSrc": "6933:117:6",
																	"nodeType": "YulIf",
																	"src": "6933:117:6"
																},
																{
																	"nativeSrc": "7064:88:6",
																	"nodeType": "YulAssignment",
																	"src": "7064:88:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7124:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "7124:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7135:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "7135:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7120:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "7120:3:6"
																				},
																				"nativeSrc": "7120:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "7120:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7144:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "7144:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_address_$dyn_memory_ptr",
																			"nativeSrc": "7074:45:6",
																			"nodeType": "YulIdentifier",
																			"src": "7074:45:6"
																		},
																		"nativeSrc": "7074:78:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7074:78:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7064:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "7064:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7172:118:6",
															"nodeType": "YulBlock",
															"src": "7172:118:6",
															"statements": [
																{
																	"nativeSrc": "7187:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7187:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7201:2:6",
																		"nodeType": "YulLiteral",
																		"src": "7201:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7191:6:6",
																			"nodeType": "YulTypedName",
																			"src": "7191:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7217:63:6",
																	"nodeType": "YulAssignment",
																	"src": "7217:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7252:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "7252:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7263:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "7263:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7248:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "7248:3:6"
																				},
																				"nativeSrc": "7248:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "7248:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7272:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "7272:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "7227:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "7227:20:6"
																		},
																		"nativeSrc": "7227:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7227:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "7217:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "7217:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_uint256",
												"nativeSrc": "6613:684:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6683:9:6",
														"nodeType": "YulTypedName",
														"src": "6683:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6694:7:6",
														"nodeType": "YulTypedName",
														"src": "6694:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6706:6:6",
														"nodeType": "YulTypedName",
														"src": "6706:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6714:6:6",
														"nodeType": "YulTypedName",
														"src": "6714:6:6",
														"type": ""
													}
												],
												"src": "6613:684:6"
											},
											{
												"body": {
													"nativeSrc": "7346:43:6",
													"nodeType": "YulBlock",
													"src": "7346:43:6",
													"statements": [
														{
															"nativeSrc": "7356:27:6",
															"nodeType": "YulAssignment",
															"src": "7356:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7371:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "7371:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7378:4:6",
																		"nodeType": "YulLiteral",
																		"src": "7378:4:6",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "7367:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7367:3:6"
																},
																"nativeSrc": "7367:16:6",
																"nodeType": "YulFunctionCall",
																"src": "7367:16:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "7356:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "7356:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "7303:86:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7328:5:6",
														"nodeType": "YulTypedName",
														"src": "7328:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "7338:7:6",
														"nodeType": "YulTypedName",
														"src": "7338:7:6",
														"type": ""
													}
												],
												"src": "7303:86:6"
											},
											{
												"body": {
													"nativeSrc": "7456:51:6",
													"nodeType": "YulBlock",
													"src": "7456:51:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7473:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "7473:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7494:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "7494:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "7478:15:6",
																			"nodeType": "YulIdentifier",
																			"src": "7478:15:6"
																		},
																		"nativeSrc": "7478:22:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7478:22:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7466:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7466:6:6"
																},
																"nativeSrc": "7466:35:6",
																"nodeType": "YulFunctionCall",
																"src": "7466:35:6"
															},
															"nativeSrc": "7466:35:6",
															"nodeType": "YulExpressionStatement",
															"src": "7466:35:6"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "7395:112:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7444:5:6",
														"nodeType": "YulTypedName",
														"src": "7444:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7451:3:6",
														"nodeType": "YulTypedName",
														"src": "7451:3:6",
														"type": ""
													}
												],
												"src": "7395:112:6"
											},
											{
												"body": {
													"nativeSrc": "7607:120:6",
													"nodeType": "YulBlock",
													"src": "7607:120:6",
													"statements": [
														{
															"nativeSrc": "7617:26:6",
															"nodeType": "YulAssignment",
															"src": "7617:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7629:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "7629:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7640:2:6",
																		"nodeType": "YulLiteral",
																		"src": "7640:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7625:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7625:3:6"
																},
																"nativeSrc": "7625:18:6",
																"nodeType": "YulFunctionCall",
																"src": "7625:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7617:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "7617:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7693:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "7693:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7706:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "7706:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7717:1:6",
																				"nodeType": "YulLiteral",
																				"src": "7717:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7702:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7702:3:6"
																		},
																		"nativeSrc": "7702:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7702:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "7653:39:6",
																	"nodeType": "YulIdentifier",
																	"src": "7653:39:6"
																},
																"nativeSrc": "7653:67:6",
																"nodeType": "YulFunctionCall",
																"src": "7653:67:6"
															},
															"nativeSrc": "7653:67:6",
															"nodeType": "YulExpressionStatement",
															"src": "7653:67:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "7513:214:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7579:9:6",
														"nodeType": "YulTypedName",
														"src": "7579:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7591:6:6",
														"nodeType": "YulTypedName",
														"src": "7591:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7602:4:6",
														"nodeType": "YulTypedName",
														"src": "7602:4:6",
														"type": ""
													}
												],
												"src": "7513:214:6"
											},
											{
												"body": {
													"nativeSrc": "7799:263:6",
													"nodeType": "YulBlock",
													"src": "7799:263:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "7845:83:6",
																"nodeType": "YulBlock",
																"src": "7845:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7847:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "7847:77:6"
																			},
																			"nativeSrc": "7847:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "7847:79:6"
																		},
																		"nativeSrc": "7847:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "7847:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7820:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "7820:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7829:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "7829:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7816:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7816:3:6"
																		},
																		"nativeSrc": "7816:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7816:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7841:2:6",
																		"nodeType": "YulLiteral",
																		"src": "7841:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7812:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7812:3:6"
																},
																"nativeSrc": "7812:32:6",
																"nodeType": "YulFunctionCall",
																"src": "7812:32:6"
															},
															"nativeSrc": "7809:119:6",
															"nodeType": "YulIf",
															"src": "7809:119:6"
														},
														{
															"nativeSrc": "7938:117:6",
															"nodeType": "YulBlock",
															"src": "7938:117:6",
															"statements": [
																{
																	"nativeSrc": "7953:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7953:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7967:1:6",
																		"nodeType": "YulLiteral",
																		"src": "7967:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7957:6:6",
																			"nodeType": "YulTypedName",
																			"src": "7957:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7982:63:6",
																	"nodeType": "YulAssignment",
																	"src": "7982:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8017:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "8017:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8028:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "8028:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8013:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "8013:3:6"
																				},
																				"nativeSrc": "8013:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "8013:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8037:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "8037:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "7992:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "7992:20:6"
																		},
																		"nativeSrc": "7992:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7992:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7982:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "7982:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "7733:329:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7769:9:6",
														"nodeType": "YulTypedName",
														"src": "7769:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7780:7:6",
														"nodeType": "YulTypedName",
														"src": "7780:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7792:6:6",
														"nodeType": "YulTypedName",
														"src": "7792:6:6",
														"type": ""
													}
												],
												"src": "7733:329:6"
											},
											{
												"body": {
													"nativeSrc": "8151:391:6",
													"nodeType": "YulBlock",
													"src": "8151:391:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "8197:83:6",
																"nodeType": "YulBlock",
																"src": "8197:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "8199:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "8199:77:6"
																			},
																			"nativeSrc": "8199:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "8199:79:6"
																		},
																		"nativeSrc": "8199:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "8199:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8172:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "8172:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8181:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "8181:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8168:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8168:3:6"
																		},
																		"nativeSrc": "8168:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8168:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8193:2:6",
																		"nodeType": "YulLiteral",
																		"src": "8193:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8164:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "8164:3:6"
																},
																"nativeSrc": "8164:32:6",
																"nodeType": "YulFunctionCall",
																"src": "8164:32:6"
															},
															"nativeSrc": "8161:119:6",
															"nodeType": "YulIf",
															"src": "8161:119:6"
														},
														{
															"nativeSrc": "8290:117:6",
															"nodeType": "YulBlock",
															"src": "8290:117:6",
															"statements": [
																{
																	"nativeSrc": "8305:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8305:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8319:1:6",
																		"nodeType": "YulLiteral",
																		"src": "8319:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8309:6:6",
																			"nodeType": "YulTypedName",
																			"src": "8309:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8334:63:6",
																	"nodeType": "YulAssignment",
																	"src": "8334:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8369:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "8369:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8380:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "8380:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8365:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "8365:3:6"
																				},
																				"nativeSrc": "8365:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "8365:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8389:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "8389:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "8344:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "8344:20:6"
																		},
																		"nativeSrc": "8344:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8344:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "8334:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "8334:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "8417:118:6",
															"nodeType": "YulBlock",
															"src": "8417:118:6",
															"statements": [
																{
																	"nativeSrc": "8432:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8432:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8446:2:6",
																		"nodeType": "YulLiteral",
																		"src": "8446:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8436:6:6",
																			"nodeType": "YulTypedName",
																			"src": "8436:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8462:63:6",
																	"nodeType": "YulAssignment",
																	"src": "8462:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8497:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "8497:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8508:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "8508:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8493:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "8493:3:6"
																				},
																				"nativeSrc": "8493:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "8493:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8517:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "8517:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "8472:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "8472:20:6"
																		},
																		"nativeSrc": "8472:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8472:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "8462:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "8462:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "8068:474:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8113:9:6",
														"nodeType": "YulTypedName",
														"src": "8113:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8124:7:6",
														"nodeType": "YulTypedName",
														"src": "8124:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8136:6:6",
														"nodeType": "YulTypedName",
														"src": "8136:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8144:6:6",
														"nodeType": "YulTypedName",
														"src": "8144:6:6",
														"type": ""
													}
												],
												"src": "8068:474:6"
											},
											{
												"body": {
													"nativeSrc": "8576:152:6",
													"nodeType": "YulBlock",
													"src": "8576:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8593:1:6",
																		"nodeType": "YulLiteral",
																		"src": "8593:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8596:77:6",
																		"nodeType": "YulLiteral",
																		"src": "8596:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8586:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8586:6:6"
																},
																"nativeSrc": "8586:88:6",
																"nodeType": "YulFunctionCall",
																"src": "8586:88:6"
															},
															"nativeSrc": "8586:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "8586:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8690:1:6",
																		"nodeType": "YulLiteral",
																		"src": "8690:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8693:4:6",
																		"nodeType": "YulLiteral",
																		"src": "8693:4:6",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8683:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8683:6:6"
																},
																"nativeSrc": "8683:15:6",
																"nodeType": "YulFunctionCall",
																"src": "8683:15:6"
															},
															"nativeSrc": "8683:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "8683:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8714:1:6",
																		"nodeType": "YulLiteral",
																		"src": "8714:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8717:4:6",
																		"nodeType": "YulLiteral",
																		"src": "8717:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8707:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8707:6:6"
																},
																"nativeSrc": "8707:15:6",
																"nodeType": "YulFunctionCall",
																"src": "8707:15:6"
															},
															"nativeSrc": "8707:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "8707:15:6"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "8548:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "8548:180:6"
											},
											{
												"body": {
													"nativeSrc": "8785:269:6",
													"nodeType": "YulBlock",
													"src": "8785:269:6",
													"statements": [
														{
															"nativeSrc": "8795:22:6",
															"nodeType": "YulAssignment",
															"src": "8795:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "8809:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "8809:4:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8815:1:6",
																		"nodeType": "YulLiteral",
																		"src": "8815:1:6",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "8805:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "8805:3:6"
																},
																"nativeSrc": "8805:12:6",
																"nodeType": "YulFunctionCall",
																"src": "8805:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "8795:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8795:6:6"
																}
															]
														},
														{
															"nativeSrc": "8826:38:6",
															"nodeType": "YulVariableDeclaration",
															"src": "8826:38:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "8856:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "8856:4:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8862:1:6",
																		"nodeType": "YulLiteral",
																		"src": "8862:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "8852:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "8852:3:6"
																},
																"nativeSrc": "8852:12:6",
																"nodeType": "YulFunctionCall",
																"src": "8852:12:6"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "8830:18:6",
																	"nodeType": "YulTypedName",
																	"src": "8830:18:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8903:51:6",
																"nodeType": "YulBlock",
																"src": "8903:51:6",
																"statements": [
																	{
																		"nativeSrc": "8917:27:6",
																		"nodeType": "YulAssignment",
																		"src": "8917:27:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "8931:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "8931:6:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8939:4:6",
																					"nodeType": "YulLiteral",
																					"src": "8939:4:6",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "8927:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "8927:3:6"
																			},
																			"nativeSrc": "8927:17:6",
																			"nodeType": "YulFunctionCall",
																			"src": "8927:17:6"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "8917:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "8917:6:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "8883:18:6",
																		"nodeType": "YulIdentifier",
																		"src": "8883:18:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8876:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8876:6:6"
																},
																"nativeSrc": "8876:26:6",
																"nodeType": "YulFunctionCall",
																"src": "8876:26:6"
															},
															"nativeSrc": "8873:81:6",
															"nodeType": "YulIf",
															"src": "8873:81:6"
														},
														{
															"body": {
																"nativeSrc": "9006:42:6",
																"nodeType": "YulBlock",
																"src": "9006:42:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "9020:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "9020:16:6"
																			},
																			"nativeSrc": "9020:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "9020:18:6"
																		},
																		"nativeSrc": "9020:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "9020:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "8970:18:6",
																		"nodeType": "YulIdentifier",
																		"src": "8970:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "8993:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "8993:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9001:2:6",
																				"nodeType": "YulLiteral",
																				"src": "9001:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "8990:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "8990:2:6"
																		},
																		"nativeSrc": "8990:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8990:14:6"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "8967:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "8967:2:6"
																},
																"nativeSrc": "8967:38:6",
																"nodeType": "YulFunctionCall",
																"src": "8967:38:6"
															},
															"nativeSrc": "8964:84:6",
															"nodeType": "YulIf",
															"src": "8964:84:6"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "8734:320:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "8769:4:6",
														"nodeType": "YulTypedName",
														"src": "8769:4:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "8778:6:6",
														"nodeType": "YulTypedName",
														"src": "8778:6:6",
														"type": ""
													}
												],
												"src": "8734:320:6"
											},
											{
												"body": {
													"nativeSrc": "9088:152:6",
													"nodeType": "YulBlock",
													"src": "9088:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9105:1:6",
																		"nodeType": "YulLiteral",
																		"src": "9105:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9108:77:6",
																		"nodeType": "YulLiteral",
																		"src": "9108:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9098:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "9098:6:6"
																},
																"nativeSrc": "9098:88:6",
																"nodeType": "YulFunctionCall",
																"src": "9098:88:6"
															},
															"nativeSrc": "9098:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "9098:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9202:1:6",
																		"nodeType": "YulLiteral",
																		"src": "9202:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9205:4:6",
																		"nodeType": "YulLiteral",
																		"src": "9205:4:6",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9195:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "9195:6:6"
																},
																"nativeSrc": "9195:15:6",
																"nodeType": "YulFunctionCall",
																"src": "9195:15:6"
															},
															"nativeSrc": "9195:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "9195:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9226:1:6",
																		"nodeType": "YulLiteral",
																		"src": "9226:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9229:4:6",
																		"nodeType": "YulLiteral",
																		"src": "9229:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9219:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "9219:6:6"
																},
																"nativeSrc": "9219:15:6",
																"nodeType": "YulFunctionCall",
																"src": "9219:15:6"
															},
															"nativeSrc": "9219:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "9219:15:6"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "9060:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "9060:180:6"
											},
											{
												"body": {
													"nativeSrc": "9352:70:6",
													"nodeType": "YulBlock",
													"src": "9352:70:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9374:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "9374:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9382:1:6",
																				"nodeType": "YulLiteral",
																				"src": "9382:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9370:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9370:3:6"
																		},
																		"nativeSrc": "9370:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9370:14:6"
																	},
																	{
																		"hexValue": "617070726f76652066726f6d2074686520302061646472657373",
																		"kind": "string",
																		"nativeSrc": "9386:28:6",
																		"nodeType": "YulLiteral",
																		"src": "9386:28:6",
																		"type": "",
																		"value": "approve from the 0 address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9363:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "9363:6:6"
																},
																"nativeSrc": "9363:52:6",
																"nodeType": "YulFunctionCall",
																"src": "9363:52:6"
															},
															"nativeSrc": "9363:52:6",
															"nodeType": "YulExpressionStatement",
															"src": "9363:52:6"
														}
													]
												},
												"name": "store_literal_in_memory_7a78c16e238661bc87912c98a6b9c315e675fa3ce0eae8ab62006fa6a2501672",
												"nativeSrc": "9246:176:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9344:6:6",
														"nodeType": "YulTypedName",
														"src": "9344:6:6",
														"type": ""
													}
												],
												"src": "9246:176:6"
											},
											{
												"body": {
													"nativeSrc": "9574:220:6",
													"nodeType": "YulBlock",
													"src": "9574:220:6",
													"statements": [
														{
															"nativeSrc": "9584:74:6",
															"nodeType": "YulAssignment",
															"src": "9584:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9650:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "9650:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9655:2:6",
																		"nodeType": "YulLiteral",
																		"src": "9655:2:6",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9591:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "9591:58:6"
																},
																"nativeSrc": "9591:67:6",
																"nodeType": "YulFunctionCall",
																"src": "9591:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9584:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "9584:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9756:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "9756:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_7a78c16e238661bc87912c98a6b9c315e675fa3ce0eae8ab62006fa6a2501672",
																	"nativeSrc": "9667:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "9667:88:6"
																},
																"nativeSrc": "9667:93:6",
																"nodeType": "YulFunctionCall",
																"src": "9667:93:6"
															},
															"nativeSrc": "9667:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "9667:93:6"
														},
														{
															"nativeSrc": "9769:19:6",
															"nodeType": "YulAssignment",
															"src": "9769:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9780:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "9780:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9785:2:6",
																		"nodeType": "YulLiteral",
																		"src": "9785:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9776:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "9776:3:6"
																},
																"nativeSrc": "9776:12:6",
																"nodeType": "YulFunctionCall",
																"src": "9776:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9769:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "9769:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_7a78c16e238661bc87912c98a6b9c315e675fa3ce0eae8ab62006fa6a2501672_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "9428:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9562:3:6",
														"nodeType": "YulTypedName",
														"src": "9562:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9570:3:6",
														"nodeType": "YulTypedName",
														"src": "9570:3:6",
														"type": ""
													}
												],
												"src": "9428:366:6"
											},
											{
												"body": {
													"nativeSrc": "9971:248:6",
													"nodeType": "YulBlock",
													"src": "9971:248:6",
													"statements": [
														{
															"nativeSrc": "9981:26:6",
															"nodeType": "YulAssignment",
															"src": "9981:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9993:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "9993:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10004:2:6",
																		"nodeType": "YulLiteral",
																		"src": "10004:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9989:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "9989:3:6"
																},
																"nativeSrc": "9989:18:6",
																"nodeType": "YulFunctionCall",
																"src": "9989:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9981:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "9981:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10028:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "10028:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10039:1:6",
																				"nodeType": "YulLiteral",
																				"src": "10039:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10024:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "10024:3:6"
																		},
																		"nativeSrc": "10024:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "10024:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10047:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "10047:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10053:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "10053:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10043:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "10043:3:6"
																		},
																		"nativeSrc": "10043:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "10043:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10017:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "10017:6:6"
																},
																"nativeSrc": "10017:47:6",
																"nodeType": "YulFunctionCall",
																"src": "10017:47:6"
															},
															"nativeSrc": "10017:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "10017:47:6"
														},
														{
															"nativeSrc": "10073:139:6",
															"nodeType": "YulAssignment",
															"src": "10073:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "10207:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "10207:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_7a78c16e238661bc87912c98a6b9c315e675fa3ce0eae8ab62006fa6a2501672_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10081:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "10081:124:6"
																},
																"nativeSrc": "10081:131:6",
																"nodeType": "YulFunctionCall",
																"src": "10081:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10073:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "10073:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7a78c16e238661bc87912c98a6b9c315e675fa3ce0eae8ab62006fa6a2501672__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9800:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9951:9:6",
														"nodeType": "YulTypedName",
														"src": "9951:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9966:4:6",
														"nodeType": "YulTypedName",
														"src": "9966:4:6",
														"type": ""
													}
												],
												"src": "9800:419:6"
											},
											{
												"body": {
													"nativeSrc": "10331:68:6",
													"nodeType": "YulBlock",
													"src": "10331:68:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10353:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "10353:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10361:1:6",
																				"nodeType": "YulLiteral",
																				"src": "10361:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10349:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "10349:3:6"
																		},
																		"nativeSrc": "10349:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "10349:14:6"
																	},
																	{
																		"hexValue": "617070726f766520746f2074686520302061646472657373",
																		"kind": "string",
																		"nativeSrc": "10365:26:6",
																		"nodeType": "YulLiteral",
																		"src": "10365:26:6",
																		"type": "",
																		"value": "approve to the 0 address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10342:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "10342:6:6"
																},
																"nativeSrc": "10342:50:6",
																"nodeType": "YulFunctionCall",
																"src": "10342:50:6"
															},
															"nativeSrc": "10342:50:6",
															"nodeType": "YulExpressionStatement",
															"src": "10342:50:6"
														}
													]
												},
												"name": "store_literal_in_memory_60ddc17bfa12607ae34d7f3e2c1a5e5e76d3df1dbd138648938348e49dfcdb83",
												"nativeSrc": "10225:174:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "10323:6:6",
														"nodeType": "YulTypedName",
														"src": "10323:6:6",
														"type": ""
													}
												],
												"src": "10225:174:6"
											},
											{
												"body": {
													"nativeSrc": "10551:220:6",
													"nodeType": "YulBlock",
													"src": "10551:220:6",
													"statements": [
														{
															"nativeSrc": "10561:74:6",
															"nodeType": "YulAssignment",
															"src": "10561:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10627:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "10627:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10632:2:6",
																		"nodeType": "YulLiteral",
																		"src": "10632:2:6",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10568:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "10568:58:6"
																},
																"nativeSrc": "10568:67:6",
																"nodeType": "YulFunctionCall",
																"src": "10568:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10561:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "10561:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10733:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "10733:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_60ddc17bfa12607ae34d7f3e2c1a5e5e76d3df1dbd138648938348e49dfcdb83",
																	"nativeSrc": "10644:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "10644:88:6"
																},
																"nativeSrc": "10644:93:6",
																"nodeType": "YulFunctionCall",
																"src": "10644:93:6"
															},
															"nativeSrc": "10644:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "10644:93:6"
														},
														{
															"nativeSrc": "10746:19:6",
															"nodeType": "YulAssignment",
															"src": "10746:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10757:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "10757:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10762:2:6",
																		"nodeType": "YulLiteral",
																		"src": "10762:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10753:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "10753:3:6"
																},
																"nativeSrc": "10753:12:6",
																"nodeType": "YulFunctionCall",
																"src": "10753:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10746:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "10746:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_60ddc17bfa12607ae34d7f3e2c1a5e5e76d3df1dbd138648938348e49dfcdb83_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "10405:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10539:3:6",
														"nodeType": "YulTypedName",
														"src": "10539:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10547:3:6",
														"nodeType": "YulTypedName",
														"src": "10547:3:6",
														"type": ""
													}
												],
												"src": "10405:366:6"
											},
											{
												"body": {
													"nativeSrc": "10948:248:6",
													"nodeType": "YulBlock",
													"src": "10948:248:6",
													"statements": [
														{
															"nativeSrc": "10958:26:6",
															"nodeType": "YulAssignment",
															"src": "10958:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10970:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "10970:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10981:2:6",
																		"nodeType": "YulLiteral",
																		"src": "10981:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10966:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "10966:3:6"
																},
																"nativeSrc": "10966:18:6",
																"nodeType": "YulFunctionCall",
																"src": "10966:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10958:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "10958:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11005:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "11005:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11016:1:6",
																				"nodeType": "YulLiteral",
																				"src": "11016:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11001:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "11001:3:6"
																		},
																		"nativeSrc": "11001:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "11001:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11024:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "11024:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11030:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "11030:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11020:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "11020:3:6"
																		},
																		"nativeSrc": "11020:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "11020:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10994:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "10994:6:6"
																},
																"nativeSrc": "10994:47:6",
																"nodeType": "YulFunctionCall",
																"src": "10994:47:6"
															},
															"nativeSrc": "10994:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "10994:47:6"
														},
														{
															"nativeSrc": "11050:139:6",
															"nodeType": "YulAssignment",
															"src": "11050:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "11184:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "11184:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_60ddc17bfa12607ae34d7f3e2c1a5e5e76d3df1dbd138648938348e49dfcdb83_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11058:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "11058:124:6"
																},
																"nativeSrc": "11058:131:6",
																"nodeType": "YulFunctionCall",
																"src": "11058:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11050:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "11050:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_60ddc17bfa12607ae34d7f3e2c1a5e5e76d3df1dbd138648938348e49dfcdb83__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10777:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10928:9:6",
														"nodeType": "YulTypedName",
														"src": "10928:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10943:4:6",
														"nodeType": "YulTypedName",
														"src": "10943:4:6",
														"type": ""
													}
												],
												"src": "10777:419:6"
											},
											{
												"body": {
													"nativeSrc": "11308:66:6",
													"nodeType": "YulBlock",
													"src": "11308:66:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11330:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "11330:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11338:1:6",
																				"nodeType": "YulLiteral",
																				"src": "11338:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11326:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "11326:3:6"
																		},
																		"nativeSrc": "11326:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "11326:14:6"
																	},
																	{
																		"hexValue": "696e73756666696369656e7420616c6c6f77616e6365",
																		"kind": "string",
																		"nativeSrc": "11342:24:6",
																		"nodeType": "YulLiteral",
																		"src": "11342:24:6",
																		"type": "",
																		"value": "insufficient allowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11319:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "11319:6:6"
																},
																"nativeSrc": "11319:48:6",
																"nodeType": "YulFunctionCall",
																"src": "11319:48:6"
															},
															"nativeSrc": "11319:48:6",
															"nodeType": "YulExpressionStatement",
															"src": "11319:48:6"
														}
													]
												},
												"name": "store_literal_in_memory_20dbb1b88f187125d7e634b087bca125fe84cb7576ed5ae599f7ade955801583",
												"nativeSrc": "11202:172:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "11300:6:6",
														"nodeType": "YulTypedName",
														"src": "11300:6:6",
														"type": ""
													}
												],
												"src": "11202:172:6"
											},
											{
												"body": {
													"nativeSrc": "11526:220:6",
													"nodeType": "YulBlock",
													"src": "11526:220:6",
													"statements": [
														{
															"nativeSrc": "11536:74:6",
															"nodeType": "YulAssignment",
															"src": "11536:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11602:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "11602:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11607:2:6",
																		"nodeType": "YulLiteral",
																		"src": "11607:2:6",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11543:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "11543:58:6"
																},
																"nativeSrc": "11543:67:6",
																"nodeType": "YulFunctionCall",
																"src": "11543:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11536:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "11536:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11708:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "11708:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_20dbb1b88f187125d7e634b087bca125fe84cb7576ed5ae599f7ade955801583",
																	"nativeSrc": "11619:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "11619:88:6"
																},
																"nativeSrc": "11619:93:6",
																"nodeType": "YulFunctionCall",
																"src": "11619:93:6"
															},
															"nativeSrc": "11619:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "11619:93:6"
														},
														{
															"nativeSrc": "11721:19:6",
															"nodeType": "YulAssignment",
															"src": "11721:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11732:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "11732:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11737:2:6",
																		"nodeType": "YulLiteral",
																		"src": "11737:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11728:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "11728:3:6"
																},
																"nativeSrc": "11728:12:6",
																"nodeType": "YulFunctionCall",
																"src": "11728:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11721:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "11721:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_20dbb1b88f187125d7e634b087bca125fe84cb7576ed5ae599f7ade955801583_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "11380:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11514:3:6",
														"nodeType": "YulTypedName",
														"src": "11514:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11522:3:6",
														"nodeType": "YulTypedName",
														"src": "11522:3:6",
														"type": ""
													}
												],
												"src": "11380:366:6"
											},
											{
												"body": {
													"nativeSrc": "11923:248:6",
													"nodeType": "YulBlock",
													"src": "11923:248:6",
													"statements": [
														{
															"nativeSrc": "11933:26:6",
															"nodeType": "YulAssignment",
															"src": "11933:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11945:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "11945:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11956:2:6",
																		"nodeType": "YulLiteral",
																		"src": "11956:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11941:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "11941:3:6"
																},
																"nativeSrc": "11941:18:6",
																"nodeType": "YulFunctionCall",
																"src": "11941:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11933:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "11933:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11980:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "11980:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11991:1:6",
																				"nodeType": "YulLiteral",
																				"src": "11991:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11976:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "11976:3:6"
																		},
																		"nativeSrc": "11976:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "11976:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11999:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "11999:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12005:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "12005:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11995:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "11995:3:6"
																		},
																		"nativeSrc": "11995:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "11995:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11969:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "11969:6:6"
																},
																"nativeSrc": "11969:47:6",
																"nodeType": "YulFunctionCall",
																"src": "11969:47:6"
															},
															"nativeSrc": "11969:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "11969:47:6"
														},
														{
															"nativeSrc": "12025:139:6",
															"nodeType": "YulAssignment",
															"src": "12025:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "12159:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "12159:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_20dbb1b88f187125d7e634b087bca125fe84cb7576ed5ae599f7ade955801583_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12033:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "12033:124:6"
																},
																"nativeSrc": "12033:131:6",
																"nodeType": "YulFunctionCall",
																"src": "12033:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12025:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "12025:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_20dbb1b88f187125d7e634b087bca125fe84cb7576ed5ae599f7ade955801583__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11752:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11903:9:6",
														"nodeType": "YulTypedName",
														"src": "11903:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11918:4:6",
														"nodeType": "YulTypedName",
														"src": "11918:4:6",
														"type": ""
													}
												],
												"src": "11752:419:6"
											},
											{
												"body": {
													"nativeSrc": "12283:67:6",
													"nodeType": "YulBlock",
													"src": "12283:67:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12305:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "12305:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12313:1:6",
																				"nodeType": "YulLiteral",
																				"src": "12313:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12301:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "12301:3:6"
																		},
																		"nativeSrc": "12301:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "12301:14:6"
																	},
																	{
																		"hexValue": "5472616e736665722066726f6d20616464726573732030",
																		"kind": "string",
																		"nativeSrc": "12317:25:6",
																		"nodeType": "YulLiteral",
																		"src": "12317:25:6",
																		"type": "",
																		"value": "Transfer from address 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12294:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "12294:6:6"
																},
																"nativeSrc": "12294:49:6",
																"nodeType": "YulFunctionCall",
																"src": "12294:49:6"
															},
															"nativeSrc": "12294:49:6",
															"nodeType": "YulExpressionStatement",
															"src": "12294:49:6"
														}
													]
												},
												"name": "store_literal_in_memory_7d79078ae789ab4c477aa2fd5708f247777d35469b9b56847e43bb56bb8a9596",
												"nativeSrc": "12177:173:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "12275:6:6",
														"nodeType": "YulTypedName",
														"src": "12275:6:6",
														"type": ""
													}
												],
												"src": "12177:173:6"
											},
											{
												"body": {
													"nativeSrc": "12502:220:6",
													"nodeType": "YulBlock",
													"src": "12502:220:6",
													"statements": [
														{
															"nativeSrc": "12512:74:6",
															"nodeType": "YulAssignment",
															"src": "12512:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12578:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "12578:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12583:2:6",
																		"nodeType": "YulLiteral",
																		"src": "12583:2:6",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12519:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "12519:58:6"
																},
																"nativeSrc": "12519:67:6",
																"nodeType": "YulFunctionCall",
																"src": "12519:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12512:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "12512:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12684:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "12684:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_7d79078ae789ab4c477aa2fd5708f247777d35469b9b56847e43bb56bb8a9596",
																	"nativeSrc": "12595:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "12595:88:6"
																},
																"nativeSrc": "12595:93:6",
																"nodeType": "YulFunctionCall",
																"src": "12595:93:6"
															},
															"nativeSrc": "12595:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "12595:93:6"
														},
														{
															"nativeSrc": "12697:19:6",
															"nodeType": "YulAssignment",
															"src": "12697:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12708:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "12708:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12713:2:6",
																		"nodeType": "YulLiteral",
																		"src": "12713:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12704:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "12704:3:6"
																},
																"nativeSrc": "12704:12:6",
																"nodeType": "YulFunctionCall",
																"src": "12704:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12697:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "12697:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_7d79078ae789ab4c477aa2fd5708f247777d35469b9b56847e43bb56bb8a9596_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "12356:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12490:3:6",
														"nodeType": "YulTypedName",
														"src": "12490:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12498:3:6",
														"nodeType": "YulTypedName",
														"src": "12498:3:6",
														"type": ""
													}
												],
												"src": "12356:366:6"
											},
											{
												"body": {
													"nativeSrc": "12899:248:6",
													"nodeType": "YulBlock",
													"src": "12899:248:6",
													"statements": [
														{
															"nativeSrc": "12909:26:6",
															"nodeType": "YulAssignment",
															"src": "12909:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12921:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "12921:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12932:2:6",
																		"nodeType": "YulLiteral",
																		"src": "12932:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12917:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "12917:3:6"
																},
																"nativeSrc": "12917:18:6",
																"nodeType": "YulFunctionCall",
																"src": "12917:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12909:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "12909:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12956:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "12956:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12967:1:6",
																				"nodeType": "YulLiteral",
																				"src": "12967:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12952:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "12952:3:6"
																		},
																		"nativeSrc": "12952:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "12952:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "12975:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "12975:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12981:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "12981:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12971:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "12971:3:6"
																		},
																		"nativeSrc": "12971:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "12971:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12945:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "12945:6:6"
																},
																"nativeSrc": "12945:47:6",
																"nodeType": "YulFunctionCall",
																"src": "12945:47:6"
															},
															"nativeSrc": "12945:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "12945:47:6"
														},
														{
															"nativeSrc": "13001:139:6",
															"nodeType": "YulAssignment",
															"src": "13001:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "13135:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "13135:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_7d79078ae789ab4c477aa2fd5708f247777d35469b9b56847e43bb56bb8a9596_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13009:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "13009:124:6"
																},
																"nativeSrc": "13009:131:6",
																"nodeType": "YulFunctionCall",
																"src": "13009:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13001:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "13001:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7d79078ae789ab4c477aa2fd5708f247777d35469b9b56847e43bb56bb8a9596__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12728:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12879:9:6",
														"nodeType": "YulTypedName",
														"src": "12879:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12894:4:6",
														"nodeType": "YulTypedName",
														"src": "12894:4:6",
														"type": ""
													}
												],
												"src": "12728:419:6"
											},
											{
												"body": {
													"nativeSrc": "13259:65:6",
													"nodeType": "YulBlock",
													"src": "13259:65:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "13281:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "13281:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13289:1:6",
																				"nodeType": "YulLiteral",
																				"src": "13289:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13277:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "13277:3:6"
																		},
																		"nativeSrc": "13277:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "13277:14:6"
																	},
																	{
																		"hexValue": "5472616e7366657220746f20616464726573732030",
																		"kind": "string",
																		"nativeSrc": "13293:23:6",
																		"nodeType": "YulLiteral",
																		"src": "13293:23:6",
																		"type": "",
																		"value": "Transfer to address 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13270:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "13270:6:6"
																},
																"nativeSrc": "13270:47:6",
																"nodeType": "YulFunctionCall",
																"src": "13270:47:6"
															},
															"nativeSrc": "13270:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "13270:47:6"
														}
													]
												},
												"name": "store_literal_in_memory_5a98b1b7aea43f8d2c5e7374d83247c617d61e309a25e04b2d187396e80e2f33",
												"nativeSrc": "13153:171:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "13251:6:6",
														"nodeType": "YulTypedName",
														"src": "13251:6:6",
														"type": ""
													}
												],
												"src": "13153:171:6"
											},
											{
												"body": {
													"nativeSrc": "13476:220:6",
													"nodeType": "YulBlock",
													"src": "13476:220:6",
													"statements": [
														{
															"nativeSrc": "13486:74:6",
															"nodeType": "YulAssignment",
															"src": "13486:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13552:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "13552:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13557:2:6",
																		"nodeType": "YulLiteral",
																		"src": "13557:2:6",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13493:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "13493:58:6"
																},
																"nativeSrc": "13493:67:6",
																"nodeType": "YulFunctionCall",
																"src": "13493:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13486:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "13486:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13658:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "13658:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_5a98b1b7aea43f8d2c5e7374d83247c617d61e309a25e04b2d187396e80e2f33",
																	"nativeSrc": "13569:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "13569:88:6"
																},
																"nativeSrc": "13569:93:6",
																"nodeType": "YulFunctionCall",
																"src": "13569:93:6"
															},
															"nativeSrc": "13569:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "13569:93:6"
														},
														{
															"nativeSrc": "13671:19:6",
															"nodeType": "YulAssignment",
															"src": "13671:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13682:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "13682:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13687:2:6",
																		"nodeType": "YulLiteral",
																		"src": "13687:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13678:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "13678:3:6"
																},
																"nativeSrc": "13678:12:6",
																"nodeType": "YulFunctionCall",
																"src": "13678:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13671:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "13671:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_5a98b1b7aea43f8d2c5e7374d83247c617d61e309a25e04b2d187396e80e2f33_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "13330:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13464:3:6",
														"nodeType": "YulTypedName",
														"src": "13464:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13472:3:6",
														"nodeType": "YulTypedName",
														"src": "13472:3:6",
														"type": ""
													}
												],
												"src": "13330:366:6"
											},
											{
												"body": {
													"nativeSrc": "13873:248:6",
													"nodeType": "YulBlock",
													"src": "13873:248:6",
													"statements": [
														{
															"nativeSrc": "13883:26:6",
															"nodeType": "YulAssignment",
															"src": "13883:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13895:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "13895:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13906:2:6",
																		"nodeType": "YulLiteral",
																		"src": "13906:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13891:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "13891:3:6"
																},
																"nativeSrc": "13891:18:6",
																"nodeType": "YulFunctionCall",
																"src": "13891:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13883:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "13883:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13930:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "13930:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13941:1:6",
																				"nodeType": "YulLiteral",
																				"src": "13941:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13926:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "13926:3:6"
																		},
																		"nativeSrc": "13926:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "13926:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "13949:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "13949:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13955:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "13955:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13945:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "13945:3:6"
																		},
																		"nativeSrc": "13945:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "13945:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13919:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "13919:6:6"
																},
																"nativeSrc": "13919:47:6",
																"nodeType": "YulFunctionCall",
																"src": "13919:47:6"
															},
															"nativeSrc": "13919:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "13919:47:6"
														},
														{
															"nativeSrc": "13975:139:6",
															"nodeType": "YulAssignment",
															"src": "13975:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "14109:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "14109:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_5a98b1b7aea43f8d2c5e7374d83247c617d61e309a25e04b2d187396e80e2f33_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13983:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "13983:124:6"
																},
																"nativeSrc": "13983:131:6",
																"nodeType": "YulFunctionCall",
																"src": "13983:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13975:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "13975:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5a98b1b7aea43f8d2c5e7374d83247c617d61e309a25e04b2d187396e80e2f33__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13702:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13853:9:6",
														"nodeType": "YulTypedName",
														"src": "13853:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13868:4:6",
														"nodeType": "YulTypedName",
														"src": "13868:4:6",
														"type": ""
													}
												],
												"src": "13702:419:6"
											},
											{
												"body": {
													"nativeSrc": "14233:60:6",
													"nodeType": "YulBlock",
													"src": "14233:60:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "14255:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "14255:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14263:1:6",
																				"nodeType": "YulLiteral",
																				"src": "14263:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14251:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "14251:3:6"
																		},
																		"nativeSrc": "14251:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "14251:14:6"
																	},
																	{
																		"hexValue": "42616c616e6365206578636565646564",
																		"kind": "string",
																		"nativeSrc": "14267:18:6",
																		"nodeType": "YulLiteral",
																		"src": "14267:18:6",
																		"type": "",
																		"value": "Balance exceeded"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14244:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "14244:6:6"
																},
																"nativeSrc": "14244:42:6",
																"nodeType": "YulFunctionCall",
																"src": "14244:42:6"
															},
															"nativeSrc": "14244:42:6",
															"nodeType": "YulExpressionStatement",
															"src": "14244:42:6"
														}
													]
												},
												"name": "store_literal_in_memory_651eb56b4057abdaf2e587df909bfa283fd53bb02e7bec01c656b90461b28a33",
												"nativeSrc": "14127:166:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "14225:6:6",
														"nodeType": "YulTypedName",
														"src": "14225:6:6",
														"type": ""
													}
												],
												"src": "14127:166:6"
											},
											{
												"body": {
													"nativeSrc": "14445:220:6",
													"nodeType": "YulBlock",
													"src": "14445:220:6",
													"statements": [
														{
															"nativeSrc": "14455:74:6",
															"nodeType": "YulAssignment",
															"src": "14455:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14521:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "14521:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14526:2:6",
																		"nodeType": "YulLiteral",
																		"src": "14526:2:6",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14462:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "14462:58:6"
																},
																"nativeSrc": "14462:67:6",
																"nodeType": "YulFunctionCall",
																"src": "14462:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14455:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "14455:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14627:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "14627:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_651eb56b4057abdaf2e587df909bfa283fd53bb02e7bec01c656b90461b28a33",
																	"nativeSrc": "14538:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "14538:88:6"
																},
																"nativeSrc": "14538:93:6",
																"nodeType": "YulFunctionCall",
																"src": "14538:93:6"
															},
															"nativeSrc": "14538:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "14538:93:6"
														},
														{
															"nativeSrc": "14640:19:6",
															"nodeType": "YulAssignment",
															"src": "14640:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14651:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "14651:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14656:2:6",
																		"nodeType": "YulLiteral",
																		"src": "14656:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14647:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "14647:3:6"
																},
																"nativeSrc": "14647:12:6",
																"nodeType": "YulFunctionCall",
																"src": "14647:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14640:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "14640:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_651eb56b4057abdaf2e587df909bfa283fd53bb02e7bec01c656b90461b28a33_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "14299:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "14433:3:6",
														"nodeType": "YulTypedName",
														"src": "14433:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "14441:3:6",
														"nodeType": "YulTypedName",
														"src": "14441:3:6",
														"type": ""
													}
												],
												"src": "14299:366:6"
											},
											{
												"body": {
													"nativeSrc": "14842:248:6",
													"nodeType": "YulBlock",
													"src": "14842:248:6",
													"statements": [
														{
															"nativeSrc": "14852:26:6",
															"nodeType": "YulAssignment",
															"src": "14852:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14864:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "14864:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14875:2:6",
																		"nodeType": "YulLiteral",
																		"src": "14875:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14860:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "14860:3:6"
																},
																"nativeSrc": "14860:18:6",
																"nodeType": "YulFunctionCall",
																"src": "14860:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14852:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "14852:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14899:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "14899:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14910:1:6",
																				"nodeType": "YulLiteral",
																				"src": "14910:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14895:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "14895:3:6"
																		},
																		"nativeSrc": "14895:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "14895:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "14918:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "14918:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14924:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "14924:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14914:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "14914:3:6"
																		},
																		"nativeSrc": "14914:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "14914:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14888:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "14888:6:6"
																},
																"nativeSrc": "14888:47:6",
																"nodeType": "YulFunctionCall",
																"src": "14888:47:6"
															},
															"nativeSrc": "14888:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "14888:47:6"
														},
														{
															"nativeSrc": "14944:139:6",
															"nodeType": "YulAssignment",
															"src": "14944:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "15078:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "15078:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_651eb56b4057abdaf2e587df909bfa283fd53bb02e7bec01c656b90461b28a33_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14952:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "14952:124:6"
																},
																"nativeSrc": "14952:131:6",
																"nodeType": "YulFunctionCall",
																"src": "14952:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14944:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "14944:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_651eb56b4057abdaf2e587df909bfa283fd53bb02e7bec01c656b90461b28a33__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14671:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14822:9:6",
														"nodeType": "YulTypedName",
														"src": "14822:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14837:4:6",
														"nodeType": "YulTypedName",
														"src": "14837:4:6",
														"type": ""
													}
												],
												"src": "14671:419:6"
											},
											{
												"body": {
													"nativeSrc": "15202:65:6",
													"nodeType": "YulBlock",
													"src": "15202:65:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "15224:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "15224:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15232:1:6",
																				"nodeType": "YulLiteral",
																				"src": "15232:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15220:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "15220:3:6"
																		},
																		"nativeSrc": "15220:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "15220:14:6"
																	},
																	{
																		"hexValue": "6d696e7420746f2074686520302061646472657373",
																		"kind": "string",
																		"nativeSrc": "15236:23:6",
																		"nodeType": "YulLiteral",
																		"src": "15236:23:6",
																		"type": "",
																		"value": "mint to the 0 address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15213:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "15213:6:6"
																},
																"nativeSrc": "15213:47:6",
																"nodeType": "YulFunctionCall",
																"src": "15213:47:6"
															},
															"nativeSrc": "15213:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "15213:47:6"
														}
													]
												},
												"name": "store_literal_in_memory_ad685e5f39ea8e4d673810c314cd17a816075806a69a16cb331cf4108f5f47f5",
												"nativeSrc": "15096:171:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "15194:6:6",
														"nodeType": "YulTypedName",
														"src": "15194:6:6",
														"type": ""
													}
												],
												"src": "15096:171:6"
											},
											{
												"body": {
													"nativeSrc": "15419:220:6",
													"nodeType": "YulBlock",
													"src": "15419:220:6",
													"statements": [
														{
															"nativeSrc": "15429:74:6",
															"nodeType": "YulAssignment",
															"src": "15429:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15495:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "15495:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15500:2:6",
																		"nodeType": "YulLiteral",
																		"src": "15500:2:6",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15436:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "15436:58:6"
																},
																"nativeSrc": "15436:67:6",
																"nodeType": "YulFunctionCall",
																"src": "15436:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "15429:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "15429:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15601:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "15601:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ad685e5f39ea8e4d673810c314cd17a816075806a69a16cb331cf4108f5f47f5",
																	"nativeSrc": "15512:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "15512:88:6"
																},
																"nativeSrc": "15512:93:6",
																"nodeType": "YulFunctionCall",
																"src": "15512:93:6"
															},
															"nativeSrc": "15512:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "15512:93:6"
														},
														{
															"nativeSrc": "15614:19:6",
															"nodeType": "YulAssignment",
															"src": "15614:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15625:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "15625:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15630:2:6",
																		"nodeType": "YulLiteral",
																		"src": "15630:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15621:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "15621:3:6"
																},
																"nativeSrc": "15621:12:6",
																"nodeType": "YulFunctionCall",
																"src": "15621:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "15614:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "15614:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ad685e5f39ea8e4d673810c314cd17a816075806a69a16cb331cf4108f5f47f5_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "15273:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "15407:3:6",
														"nodeType": "YulTypedName",
														"src": "15407:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "15415:3:6",
														"nodeType": "YulTypedName",
														"src": "15415:3:6",
														"type": ""
													}
												],
												"src": "15273:366:6"
											},
											{
												"body": {
													"nativeSrc": "15816:248:6",
													"nodeType": "YulBlock",
													"src": "15816:248:6",
													"statements": [
														{
															"nativeSrc": "15826:26:6",
															"nodeType": "YulAssignment",
															"src": "15826:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15838:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "15838:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15849:2:6",
																		"nodeType": "YulLiteral",
																		"src": "15849:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15834:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "15834:3:6"
																},
																"nativeSrc": "15834:18:6",
																"nodeType": "YulFunctionCall",
																"src": "15834:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15826:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "15826:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15873:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "15873:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15884:1:6",
																				"nodeType": "YulLiteral",
																				"src": "15884:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15869:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "15869:3:6"
																		},
																		"nativeSrc": "15869:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "15869:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "15892:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "15892:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15898:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "15898:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15888:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "15888:3:6"
																		},
																		"nativeSrc": "15888:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "15888:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15862:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "15862:6:6"
																},
																"nativeSrc": "15862:47:6",
																"nodeType": "YulFunctionCall",
																"src": "15862:47:6"
															},
															"nativeSrc": "15862:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "15862:47:6"
														},
														{
															"nativeSrc": "15918:139:6",
															"nodeType": "YulAssignment",
															"src": "15918:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "16052:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "16052:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ad685e5f39ea8e4d673810c314cd17a816075806a69a16cb331cf4108f5f47f5_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15926:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "15926:124:6"
																},
																"nativeSrc": "15926:131:6",
																"nodeType": "YulFunctionCall",
																"src": "15926:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15918:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "15918:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ad685e5f39ea8e4d673810c314cd17a816075806a69a16cb331cf4108f5f47f5__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "15645:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15796:9:6",
														"nodeType": "YulTypedName",
														"src": "15796:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15811:4:6",
														"nodeType": "YulTypedName",
														"src": "15811:4:6",
														"type": ""
													}
												],
												"src": "15645:419:6"
											},
											{
												"body": {
													"nativeSrc": "16098:152:6",
													"nodeType": "YulBlock",
													"src": "16098:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16115:1:6",
																		"nodeType": "YulLiteral",
																		"src": "16115:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16118:77:6",
																		"nodeType": "YulLiteral",
																		"src": "16118:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16108:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "16108:6:6"
																},
																"nativeSrc": "16108:88:6",
																"nodeType": "YulFunctionCall",
																"src": "16108:88:6"
															},
															"nativeSrc": "16108:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "16108:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16212:1:6",
																		"nodeType": "YulLiteral",
																		"src": "16212:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16215:4:6",
																		"nodeType": "YulLiteral",
																		"src": "16215:4:6",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16205:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "16205:6:6"
																},
																"nativeSrc": "16205:15:6",
																"nodeType": "YulFunctionCall",
																"src": "16205:15:6"
															},
															"nativeSrc": "16205:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "16205:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16236:1:6",
																		"nodeType": "YulLiteral",
																		"src": "16236:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16239:4:6",
																		"nodeType": "YulLiteral",
																		"src": "16239:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "16229:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "16229:6:6"
																},
																"nativeSrc": "16229:15:6",
																"nodeType": "YulFunctionCall",
																"src": "16229:15:6"
															},
															"nativeSrc": "16229:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "16229:15:6"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "16070:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "16070:180:6"
											},
											{
												"body": {
													"nativeSrc": "16300:147:6",
													"nodeType": "YulBlock",
													"src": "16300:147:6",
													"statements": [
														{
															"nativeSrc": "16310:25:6",
															"nodeType": "YulAssignment",
															"src": "16310:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "16333:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "16333:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "16315:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "16315:17:6"
																},
																"nativeSrc": "16315:20:6",
																"nodeType": "YulFunctionCall",
																"src": "16315:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "16310:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "16310:1:6"
																}
															]
														},
														{
															"nativeSrc": "16344:25:6",
															"nodeType": "YulAssignment",
															"src": "16344:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "16367:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "16367:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "16349:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "16349:17:6"
																},
																"nativeSrc": "16349:20:6",
																"nodeType": "YulFunctionCall",
																"src": "16349:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "16344:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "16344:1:6"
																}
															]
														},
														{
															"nativeSrc": "16378:16:6",
															"nodeType": "YulAssignment",
															"src": "16378:16:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "16389:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "16389:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "16392:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "16392:1:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16385:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "16385:3:6"
																},
																"nativeSrc": "16385:9:6",
																"nodeType": "YulFunctionCall",
																"src": "16385:9:6"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "16378:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "16378:3:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "16418:22:6",
																"nodeType": "YulBlock",
																"src": "16418:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "16420:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "16420:16:6"
																			},
																			"nativeSrc": "16420:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "16420:18:6"
																		},
																		"nativeSrc": "16420:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "16420:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "16410:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "16410:1:6"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "16413:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "16413:3:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "16407:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "16407:2:6"
																},
																"nativeSrc": "16407:10:6",
																"nodeType": "YulFunctionCall",
																"src": "16407:10:6"
															},
															"nativeSrc": "16404:36:6",
															"nodeType": "YulIf",
															"src": "16404:36:6"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "16256:191:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "16287:1:6",
														"nodeType": "YulTypedName",
														"src": "16287:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "16290:1:6",
														"nodeType": "YulTypedName",
														"src": "16290:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "16296:3:6",
														"nodeType": "YulTypedName",
														"src": "16296:3:6",
														"type": ""
													}
												],
												"src": "16256:191:6"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // address[]\n    function abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_address(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // address[]\n    function abi_decode_t_array$_t_address_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_array$_t_address_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function store_literal_in_memory_7a78c16e238661bc87912c98a6b9c315e675fa3ce0eae8ab62006fa6a2501672(memPtr) {\n\n        mstore(add(memPtr, 0), \"approve from the 0 address\")\n\n    }\n\n    function abi_encode_t_stringliteral_7a78c16e238661bc87912c98a6b9c315e675fa3ce0eae8ab62006fa6a2501672_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_7a78c16e238661bc87912c98a6b9c315e675fa3ce0eae8ab62006fa6a2501672(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7a78c16e238661bc87912c98a6b9c315e675fa3ce0eae8ab62006fa6a2501672__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7a78c16e238661bc87912c98a6b9c315e675fa3ce0eae8ab62006fa6a2501672_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_60ddc17bfa12607ae34d7f3e2c1a5e5e76d3df1dbd138648938348e49dfcdb83(memPtr) {\n\n        mstore(add(memPtr, 0), \"approve to the 0 address\")\n\n    }\n\n    function abi_encode_t_stringliteral_60ddc17bfa12607ae34d7f3e2c1a5e5e76d3df1dbd138648938348e49dfcdb83_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_60ddc17bfa12607ae34d7f3e2c1a5e5e76d3df1dbd138648938348e49dfcdb83(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_60ddc17bfa12607ae34d7f3e2c1a5e5e76d3df1dbd138648938348e49dfcdb83__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_60ddc17bfa12607ae34d7f3e2c1a5e5e76d3df1dbd138648938348e49dfcdb83_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_20dbb1b88f187125d7e634b087bca125fe84cb7576ed5ae599f7ade955801583(memPtr) {\n\n        mstore(add(memPtr, 0), \"insufficient allowance\")\n\n    }\n\n    function abi_encode_t_stringliteral_20dbb1b88f187125d7e634b087bca125fe84cb7576ed5ae599f7ade955801583_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_20dbb1b88f187125d7e634b087bca125fe84cb7576ed5ae599f7ade955801583(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_20dbb1b88f187125d7e634b087bca125fe84cb7576ed5ae599f7ade955801583__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_20dbb1b88f187125d7e634b087bca125fe84cb7576ed5ae599f7ade955801583_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_7d79078ae789ab4c477aa2fd5708f247777d35469b9b56847e43bb56bb8a9596(memPtr) {\n\n        mstore(add(memPtr, 0), \"Transfer from address 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_7d79078ae789ab4c477aa2fd5708f247777d35469b9b56847e43bb56bb8a9596_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_7d79078ae789ab4c477aa2fd5708f247777d35469b9b56847e43bb56bb8a9596(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7d79078ae789ab4c477aa2fd5708f247777d35469b9b56847e43bb56bb8a9596__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7d79078ae789ab4c477aa2fd5708f247777d35469b9b56847e43bb56bb8a9596_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_5a98b1b7aea43f8d2c5e7374d83247c617d61e309a25e04b2d187396e80e2f33(memPtr) {\n\n        mstore(add(memPtr, 0), \"Transfer to address 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_5a98b1b7aea43f8d2c5e7374d83247c617d61e309a25e04b2d187396e80e2f33_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_5a98b1b7aea43f8d2c5e7374d83247c617d61e309a25e04b2d187396e80e2f33(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_5a98b1b7aea43f8d2c5e7374d83247c617d61e309a25e04b2d187396e80e2f33__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_5a98b1b7aea43f8d2c5e7374d83247c617d61e309a25e04b2d187396e80e2f33_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_651eb56b4057abdaf2e587df909bfa283fd53bb02e7bec01c656b90461b28a33(memPtr) {\n\n        mstore(add(memPtr, 0), \"Balance exceeded\")\n\n    }\n\n    function abi_encode_t_stringliteral_651eb56b4057abdaf2e587df909bfa283fd53bb02e7bec01c656b90461b28a33_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_651eb56b4057abdaf2e587df909bfa283fd53bb02e7bec01c656b90461b28a33(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_651eb56b4057abdaf2e587df909bfa283fd53bb02e7bec01c656b90461b28a33__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_651eb56b4057abdaf2e587df909bfa283fd53bb02e7bec01c656b90461b28a33_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_ad685e5f39ea8e4d673810c314cd17a816075806a69a16cb331cf4108f5f47f5(memPtr) {\n\n        mstore(add(memPtr, 0), \"mint to the 0 address\")\n\n    }\n\n    function abi_encode_t_stringliteral_ad685e5f39ea8e4d673810c314cd17a816075806a69a16cb331cf4108f5f47f5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_ad685e5f39ea8e4d673810c314cd17a816075806a69a16cb331cf4108f5f47f5(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ad685e5f39ea8e4d673810c314cd17a816075806a69a16cb331cf4108f5f47f5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ad685e5f39ea8e4d673810c314cd17a816075806a69a16cb331cf4108f5f47f5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506004361061009c575f3560e01c8063313ce56711610064578063313ce5671461015857806370a082311461017657806395d89b41146101a6578063a9059cbb146101c4578063dd62ed3e146101f45761009c565b806306fdde03146100a0578063095ea7b3146100be57806318160ddd146100ee57806323b872dd1461010c578063256fa2411461013c575b5f80fd5b6100a8610224565b6040516100b59190610b06565b60405180910390f35b6100d860048036038101906100d39190610bc4565b6102b4565b6040516100e59190610c1c565b60405180910390f35b6100f66102cf565b6040516101039190610c44565b60405180910390f35b61012660048036038101906101219190610c5d565b6102d8565b6040516101339190610c1c565b60405180910390f35b61015660048036038101906101519190610ded565b6102ff565b005b610160610340565b60405161016d9190610e62565b60405180910390f35b610190600480360381019061018b9190610e7b565b610348565b60405161019d9190610c44565b60405180910390f35b6101ae61038d565b6040516101bb9190610b06565b60405180910390f35b6101de60048036038101906101d99190610bc4565b61041d565b6040516101eb9190610c1c565b60405180910390f35b61020e60048036038101906102099190610ea6565b610438565b60405161021b9190610c44565b60405180910390f35b60606003805461023390610f11565b80601f016020809104026020016040519081016040528092919081815260200182805461025f90610f11565b80156102aa5780601f10610281576101008083540402835291602001916102aa565b820191905f5260205f20905b81548152906001019060200180831161028d57829003601f168201915b5050505050905090565b5f803390506102c48185856104ba565b600191505092915050565b5f600254905090565b5f803390506102e885828561067d565b6102f3858585610708565b60019150509392505050565b5f5b825181101561033b5761032e8382815181106103205761031f610f41565b5b60200260200101518361095e565b8080600101915050610301565b505050565b5f6012905090565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b60606004805461039c90610f11565b80601f01602080910402602001604051908101604052809291908181526020018280546103c890610f11565b80156104135780601f106103ea57610100808354040283529160200191610413565b820191905f5260205f20905b8154815290600101906020018083116103f657829003601f168201915b5050505050905090565b5f8033905061042d818585610708565b600191505092915050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610528576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161051f90610fb8565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610596576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161058d90611020565b60405180910390fd5b8060015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516106709190610c44565b60405180910390a3505050565b5f6106888484610438565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811461070257818110156106f4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106eb90611088565b60405180910390fd5b61070184848484036104ba565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610776576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161076d906110f0565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036107e4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107db90611158565b60405180910390fd5b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610867576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161085e906111c0565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550815f808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516109509190610c44565b60405180910390a350505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036109cc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109c390611228565b60405180910390fd5b8060025f8282546109dd9190611273565b92505081905550805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055508173ffffffffffffffffffffffffffffffffffffffff165f73ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610a8a9190610c44565b60405180910390a35050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f610ad882610a96565b610ae28185610aa0565b9350610af2818560208601610ab0565b610afb81610abe565b840191505092915050565b5f6020820190508181035f830152610b1e8184610ace565b905092915050565b5f604051905090565b5f80fd5b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610b6082610b37565b9050919050565b610b7081610b56565b8114610b7a575f80fd5b50565b5f81359050610b8b81610b67565b92915050565b5f819050919050565b610ba381610b91565b8114610bad575f80fd5b50565b5f81359050610bbe81610b9a565b92915050565b5f8060408385031215610bda57610bd9610b2f565b5b5f610be785828601610b7d565b9250506020610bf885828601610bb0565b9150509250929050565b5f8115159050919050565b610c1681610c02565b82525050565b5f602082019050610c2f5f830184610c0d565b92915050565b610c3e81610b91565b82525050565b5f602082019050610c575f830184610c35565b92915050565b5f805f60608486031215610c7457610c73610b2f565b5b5f610c8186828701610b7d565b9350506020610c9286828701610b7d565b9250506040610ca386828701610bb0565b9150509250925092565b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b610ce782610abe565b810181811067ffffffffffffffff82111715610d0657610d05610cb1565b5b80604052505050565b5f610d18610b26565b9050610d248282610cde565b919050565b5f67ffffffffffffffff821115610d4357610d42610cb1565b5b602082029050602081019050919050565b5f80fd5b5f610d6a610d6584610d29565b610d0f565b90508083825260208201905060208402830185811115610d8d57610d8c610d54565b5b835b81811015610db65780610da28882610b7d565b845260208401935050602081019050610d8f565b5050509392505050565b5f82601f830112610dd457610dd3610cad565b5b8135610de4848260208601610d58565b91505092915050565b5f8060408385031215610e0357610e02610b2f565b5b5f83013567ffffffffffffffff811115610e2057610e1f610b33565b5b610e2c85828601610dc0565b9250506020610e3d85828601610bb0565b9150509250929050565b5f60ff82169050919050565b610e5c81610e47565b82525050565b5f602082019050610e755f830184610e53565b92915050565b5f60208284031215610e9057610e8f610b2f565b5b5f610e9d84828501610b7d565b91505092915050565b5f8060408385031215610ebc57610ebb610b2f565b5b5f610ec985828601610b7d565b9250506020610eda85828601610b7d565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680610f2857607f821691505b602082108103610f3b57610f3a610ee4565b5b50919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b7f617070726f76652066726f6d20746865203020616464726573730000000000005f82015250565b5f610fa2601a83610aa0565b9150610fad82610f6e565b602082019050919050565b5f6020820190508181035f830152610fcf81610f96565b9050919050565b7f617070726f766520746f207468652030206164647265737300000000000000005f82015250565b5f61100a601883610aa0565b915061101582610fd6565b602082019050919050565b5f6020820190508181035f83015261103781610ffe565b9050919050565b7f696e73756666696369656e7420616c6c6f77616e6365000000000000000000005f82015250565b5f611072601683610aa0565b915061107d8261103e565b602082019050919050565b5f6020820190508181035f83015261109f81611066565b9050919050565b7f5472616e736665722066726f6d206164647265737320300000000000000000005f82015250565b5f6110da601783610aa0565b91506110e5826110a6565b602082019050919050565b5f6020820190508181035f830152611107816110ce565b9050919050565b7f5472616e7366657220746f2061646472657373203000000000000000000000005f82015250565b5f611142601583610aa0565b915061114d8261110e565b602082019050919050565b5f6020820190508181035f83015261116f81611136565b9050919050565b7f42616c616e6365206578636565646564000000000000000000000000000000005f82015250565b5f6111aa601083610aa0565b91506111b582611176565b602082019050919050565b5f6020820190508181035f8301526111d78161119e565b9050919050565b7f6d696e7420746f207468652030206164647265737300000000000000000000005f82015250565b5f611212601583610aa0565b915061121d826111de565b602082019050919050565b5f6020820190508181035f83015261123f81611206565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61127d82610b91565b915061128883610b91565b92508282019050808211156112a05761129f611246565b5b9291505056fea264697066735822122057a0b22efca3a3071285b2aeb6d31fca6982271883b7ca508904821d53bb9d6364736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9C JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x313CE567 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x158 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x176 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1A6 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1C4 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x1F4 JUMPI PUSH2 0x9C JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xA0 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xBE JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEE JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x10C JUMPI DUP1 PUSH4 0x256FA241 EQ PUSH2 0x13C JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xA8 PUSH2 0x224 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB5 SWAP2 SWAP1 PUSH2 0xB06 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD3 SWAP2 SWAP1 PUSH2 0xBC4 JUMP JUMPDEST PUSH2 0x2B4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE5 SWAP2 SWAP1 PUSH2 0xC1C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF6 PUSH2 0x2CF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x103 SWAP2 SWAP1 PUSH2 0xC44 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x126 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x121 SWAP2 SWAP1 PUSH2 0xC5D JUMP JUMPDEST PUSH2 0x2D8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x133 SWAP2 SWAP1 PUSH2 0xC1C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x156 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x151 SWAP2 SWAP1 PUSH2 0xDED JUMP JUMPDEST PUSH2 0x2FF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x160 PUSH2 0x340 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16D SWAP2 SWAP1 PUSH2 0xE62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x190 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18B SWAP2 SWAP1 PUSH2 0xE7B JUMP JUMPDEST PUSH2 0x348 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19D SWAP2 SWAP1 PUSH2 0xC44 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AE PUSH2 0x38D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BB SWAP2 SWAP1 PUSH2 0xB06 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1DE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D9 SWAP2 SWAP1 PUSH2 0xBC4 JUMP JUMPDEST PUSH2 0x41D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EB SWAP2 SWAP1 PUSH2 0xC1C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x209 SWAP2 SWAP1 PUSH2 0xEA6 JUMP JUMPDEST PUSH2 0x438 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21B SWAP2 SWAP1 PUSH2 0xC44 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x233 SWAP1 PUSH2 0xF11 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x25F SWAP1 PUSH2 0xF11 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2AA JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x281 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2AA JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x28D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 CALLER SWAP1 POP PUSH2 0x2C4 DUP2 DUP6 DUP6 PUSH2 0x4BA JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 CALLER SWAP1 POP PUSH2 0x2E8 DUP6 DUP3 DUP6 PUSH2 0x67D JUMP JUMPDEST PUSH2 0x2F3 DUP6 DUP6 DUP6 PUSH2 0x708 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x33B JUMPI PUSH2 0x32E DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x320 JUMPI PUSH2 0x31F PUSH2 0xF41 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP4 PUSH2 0x95E JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x301 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x39C SWAP1 PUSH2 0xF11 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3C8 SWAP1 PUSH2 0xF11 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x413 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3EA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x413 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3F6 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 CALLER SWAP1 POP PUSH2 0x42D DUP2 DUP6 DUP6 PUSH2 0x708 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x528 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x51F SWAP1 PUSH2 0xFB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x596 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x58D SWAP1 PUSH2 0x1020 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0x670 SWAP2 SWAP1 PUSH2 0xC44 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x688 DUP5 DUP5 PUSH2 0x438 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x702 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x6F4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6EB SWAP1 PUSH2 0x1088 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x701 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x4BA JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x776 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x76D SWAP1 PUSH2 0x10F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x7E4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7DB SWAP1 PUSH2 0x1158 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x867 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x85E SWAP1 PUSH2 0x11C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x950 SWAP2 SWAP1 PUSH2 0xC44 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9CC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9C3 SWAP1 PUSH2 0x1228 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x9DD SWAP2 SWAP1 PUSH2 0x1273 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xA8A SWAP2 SWAP1 PUSH2 0xC44 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xAD8 DUP3 PUSH2 0xA96 JUMP JUMPDEST PUSH2 0xAE2 DUP2 DUP6 PUSH2 0xAA0 JUMP JUMPDEST SWAP4 POP PUSH2 0xAF2 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xAB0 JUMP JUMPDEST PUSH2 0xAFB DUP2 PUSH2 0xABE JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xB1E DUP2 DUP5 PUSH2 0xACE JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xB60 DUP3 PUSH2 0xB37 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB70 DUP2 PUSH2 0xB56 JUMP JUMPDEST DUP2 EQ PUSH2 0xB7A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB8B DUP2 PUSH2 0xB67 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBA3 DUP2 PUSH2 0xB91 JUMP JUMPDEST DUP2 EQ PUSH2 0xBAD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBBE DUP2 PUSH2 0xB9A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBDA JUMPI PUSH2 0xBD9 PUSH2 0xB2F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xBE7 DUP6 DUP3 DUP7 ADD PUSH2 0xB7D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xBF8 DUP6 DUP3 DUP7 ADD PUSH2 0xBB0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC16 DUP2 PUSH2 0xC02 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC2F PUSH0 DUP4 ADD DUP5 PUSH2 0xC0D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC3E DUP2 PUSH2 0xB91 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC57 PUSH0 DUP4 ADD DUP5 PUSH2 0xC35 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xC74 JUMPI PUSH2 0xC73 PUSH2 0xB2F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xC81 DUP7 DUP3 DUP8 ADD PUSH2 0xB7D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xC92 DUP7 DUP3 DUP8 ADD PUSH2 0xB7D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xCA3 DUP7 DUP3 DUP8 ADD PUSH2 0xBB0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0xCE7 DUP3 PUSH2 0xABE JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0xD06 JUMPI PUSH2 0xD05 PUSH2 0xCB1 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xD18 PUSH2 0xB26 JUMP JUMPDEST SWAP1 POP PUSH2 0xD24 DUP3 DUP3 PUSH2 0xCDE JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xD43 JUMPI PUSH2 0xD42 PUSH2 0xCB1 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH2 0xD6A PUSH2 0xD65 DUP5 PUSH2 0xD29 JUMP JUMPDEST PUSH2 0xD0F JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0xD8D JUMPI PUSH2 0xD8C PUSH2 0xD54 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xDB6 JUMPI DUP1 PUSH2 0xDA2 DUP9 DUP3 PUSH2 0xB7D JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xD8F JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xDD4 JUMPI PUSH2 0xDD3 PUSH2 0xCAD JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0xDE4 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0xD58 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE03 JUMPI PUSH2 0xE02 PUSH2 0xB2F JUMP JUMPDEST JUMPDEST PUSH0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xE20 JUMPI PUSH2 0xE1F PUSH2 0xB33 JUMP JUMPDEST JUMPDEST PUSH2 0xE2C DUP6 DUP3 DUP7 ADD PUSH2 0xDC0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xE3D DUP6 DUP3 DUP7 ADD PUSH2 0xBB0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE5C DUP2 PUSH2 0xE47 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE75 PUSH0 DUP4 ADD DUP5 PUSH2 0xE53 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE90 JUMPI PUSH2 0xE8F PUSH2 0xB2F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xE9D DUP5 DUP3 DUP6 ADD PUSH2 0xB7D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xEBC JUMPI PUSH2 0xEBB PUSH2 0xB2F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xEC9 DUP6 DUP3 DUP7 ADD PUSH2 0xB7D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xEDA DUP6 DUP3 DUP7 ADD PUSH2 0xB7D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xF28 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xF3B JUMPI PUSH2 0xF3A PUSH2 0xEE4 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x617070726F76652066726F6D2074686520302061646472657373000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xFA2 PUSH1 0x1A DUP4 PUSH2 0xAA0 JUMP JUMPDEST SWAP2 POP PUSH2 0xFAD DUP3 PUSH2 0xF6E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xFCF DUP2 PUSH2 0xF96 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x617070726F766520746F20746865203020616464726573730000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x100A PUSH1 0x18 DUP4 PUSH2 0xAA0 JUMP JUMPDEST SWAP2 POP PUSH2 0x1015 DUP3 PUSH2 0xFD6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1037 DUP2 PUSH2 0xFFE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x696E73756666696369656E7420616C6C6F77616E636500000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1072 PUSH1 0x16 DUP4 PUSH2 0xAA0 JUMP JUMPDEST SWAP2 POP PUSH2 0x107D DUP3 PUSH2 0x103E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x109F DUP2 PUSH2 0x1066 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5472616E736665722066726F6D20616464726573732030000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x10DA PUSH1 0x17 DUP4 PUSH2 0xAA0 JUMP JUMPDEST SWAP2 POP PUSH2 0x10E5 DUP3 PUSH2 0x10A6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1107 DUP2 PUSH2 0x10CE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5472616E7366657220746F206164647265737320300000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1142 PUSH1 0x15 DUP4 PUSH2 0xAA0 JUMP JUMPDEST SWAP2 POP PUSH2 0x114D DUP3 PUSH2 0x110E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x116F DUP2 PUSH2 0x1136 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x42616C616E636520657863656564656400000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x11AA PUSH1 0x10 DUP4 PUSH2 0xAA0 JUMP JUMPDEST SWAP2 POP PUSH2 0x11B5 DUP3 PUSH2 0x1176 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x11D7 DUP2 PUSH2 0x119E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x6D696E7420746F20746865203020616464726573730000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1212 PUSH1 0x15 DUP4 PUSH2 0xAA0 JUMP JUMPDEST SWAP2 POP PUSH2 0x121D DUP3 PUSH2 0x11DE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x123F DUP2 PUSH2 0x1206 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x127D DUP3 PUSH2 0xB91 JUMP JUMPDEST SWAP2 POP PUSH2 0x1288 DUP4 PUSH2 0xB91 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x12A0 JUMPI PUSH2 0x129F PUSH2 0x1246 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMPI LOG0 0xB2 0x2E 0xFC LOG3 LOG3 SMOD SLT DUP6 0xB2 0xAE 0xB6 0xD3 0x1F 0xCA PUSH10 0x82271883B7CA50890482 SAR MSTORE8 0xBB SWAP14 PUSH4 0x64736F6C PUSH4 0x4300081A STOP CALLER ",
							"sourceMap": "2379:7170:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3014:91;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5103:199;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3492:108;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5701:293;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7323:199;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3343:84;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3757:127;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3197:95;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4163:191;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4662:151;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3014:91;3059:13;3092:5;3085:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3014:91;:::o;5103:199::-;5186:4;5203:13;5219:10;5203:26;;5240:32;5249:5;5256:7;5265:6;5240:8;:32::i;:::-;5290:4;5283:11;;;5103:199;;;;:::o;3492:108::-;3553:7;3580:12;;3573:19;;3492:108;:::o;5701:293::-;5832:4;5849:15;5867:10;5849:28;;5888:38;5904:4;5910:7;5919:6;5888:15;:38::i;:::-;5937:27;5947:4;5953:2;5957:6;5937:9;:27::i;:::-;5982:4;5975:11;;;5701:293;;;;;:::o;7323:199::-;7417:9;7412:103;7436:10;:17;7432:1;:21;7412:103;;;7475:28;7481:10;7492:1;7481:13;;;;;;;;:::i;:::-;;;;;;;;7496:6;7475:5;:28::i;:::-;7455:3;;;;;;;7412:103;;;;7323:199;;:::o;3343:84::-;3392:5;3417:2;3410:9;;3343:84;:::o;3757:127::-;3831:7;3858:9;:18;3868:7;3858:18;;;;;;;;;;;;;;;;3851:25;;3757:127;;;:::o;3197:95::-;3244:13;3277:7;3270:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3197:95;:::o;4163:191::-;4242:4;4259:13;4275:10;4259:26;;4296:28;4306:5;4313:2;4317:6;4296:9;:28::i;:::-;4342:4;4335:11;;;4163:191;;;;:::o;4662:151::-;4751:7;4778:11;:18;4790:5;4778:18;;;;;;;;;;;;;;;:27;4797:7;4778:27;;;;;;;;;;;;;;;;4771:34;;4662:151;;;;:::o;8535:360::-;8688:1;8671:19;;:5;:19;;;8663:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;8759:1;8740:21;;:7;:21;;;8732:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;8833:6;8803:11;:18;8815:5;8803:18;;;;;;;;;;;;;;;:27;8822:7;8803:27;;;;;;;;;;;;;;;:36;;;;8871:7;8855:32;;8864:5;8855:32;;;8880:6;8855:32;;;;;;:::i;:::-;;;;;;;;8535:360;;;:::o;9100:446::-;9235:24;9262:25;9272:5;9279:7;9262:9;:25::i;:::-;9235:52;;9322:17;9302:16;:37;9298:241;;9384:6;9364:16;:26;;9356:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;9461:51;9470:5;9477:7;9505:6;9486:16;:25;9461:8;:51::i;:::-;9298:241;9224:322;9100:446;;;:::o;6399:689::-;6546:1;6530:18;;:4;:18;;;6522:54;;;;;;;;;;;;:::i;:::-;;;;;;;;;6609:1;6595:16;;:2;:16;;;6587:50;;;;;;;;;;;;:::i;:::-;;;;;;;;;6650:19;6672:9;:15;6682:4;6672:15;;;;;;;;;;;;;;;;6650:37;;6721:6;6706:11;:21;;6698:50;;;;;;;;;;;;:::i;:::-;;;;;;;;;6816:6;6802:11;:20;6784:9;:15;6794:4;6784:15;;;;;;;;;;;;;;;:38;;;;7019:6;7002:9;:13;7012:2;7002:13;;;;;;;;;;;;;;;;:23;;;;;;;;;;;7069:2;7054:26;;7063:4;7054:26;;;7073:6;7054:26;;;;;;:::i;:::-;;;;;;;;6511:577;6399:689;;;:::o;7810:415::-;7913:1;7894:21;;:7;:21;;;7886:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;7970:6;7954:12;;:22;;;;;;;:::i;:::-;;;;;;;;8147:6;8125:9;:18;8135:7;8125:18;;;;;;;;;;;;;;;;:28;;;;;;;;;;;8201:7;8180:37;;8197:1;8180:37;;;8210:6;8180:37;;;;;;:::i;:::-;;;;;;;;7810:415;;:::o;7:99:6:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:139::-;376:6;371:3;366;360:23;417:1;408:6;403:3;399:16;392:27;287:139;;;:::o;432:102::-;473:6;524:2;520:7;515:2;508:5;504:14;500:28;490:38;;432:102;;;:::o;540:377::-;628:3;656:39;689:5;656:39;:::i;:::-;711:71;775:6;770:3;711:71;:::i;:::-;704:78;;791:65;849:6;844:3;837:4;830:5;826:16;791:65;:::i;:::-;881:29;903:6;881:29;:::i;:::-;876:3;872:39;865:46;;632:285;540:377;;;;:::o;923:313::-;1036:4;1074:2;1063:9;1059:18;1051:26;;1123:9;1117:4;1113:20;1109:1;1098:9;1094:17;1087:47;1151:78;1224:4;1215:6;1151:78;:::i;:::-;1143:86;;923:313;;;;:::o;1242:75::-;1275:6;1308:2;1302:9;1292:19;;1242:75;:::o;1323:117::-;1432:1;1429;1422:12;1446:117;1555:1;1552;1545:12;1569:126;1606:7;1646:42;1639:5;1635:54;1624:65;;1569:126;;;:::o;1701:96::-;1738:7;1767:24;1785:5;1767:24;:::i;:::-;1756:35;;1701:96;;;:::o;1803:122::-;1876:24;1894:5;1876:24;:::i;:::-;1869:5;1866:35;1856:63;;1915:1;1912;1905:12;1856:63;1803:122;:::o;1931:139::-;1977:5;2015:6;2002:20;1993:29;;2031:33;2058:5;2031:33;:::i;:::-;1931:139;;;;:::o;2076:77::-;2113:7;2142:5;2131:16;;2076:77;;;:::o;2159:122::-;2232:24;2250:5;2232:24;:::i;:::-;2225:5;2222:35;2212:63;;2271:1;2268;2261:12;2212:63;2159:122;:::o;2287:139::-;2333:5;2371:6;2358:20;2349:29;;2387:33;2414:5;2387:33;:::i;:::-;2287:139;;;;:::o;2432:474::-;2500:6;2508;2557:2;2545:9;2536:7;2532:23;2528:32;2525:119;;;2563:79;;:::i;:::-;2525:119;2683:1;2708:53;2753:7;2744:6;2733:9;2729:22;2708:53;:::i;:::-;2698:63;;2654:117;2810:2;2836:53;2881:7;2872:6;2861:9;2857:22;2836:53;:::i;:::-;2826:63;;2781:118;2432:474;;;;;:::o;2912:90::-;2946:7;2989:5;2982:13;2975:21;2964:32;;2912:90;;;:::o;3008:109::-;3089:21;3104:5;3089:21;:::i;:::-;3084:3;3077:34;3008:109;;:::o;3123:210::-;3210:4;3248:2;3237:9;3233:18;3225:26;;3261:65;3323:1;3312:9;3308:17;3299:6;3261:65;:::i;:::-;3123:210;;;;:::o;3339:118::-;3426:24;3444:5;3426:24;:::i;:::-;3421:3;3414:37;3339:118;;:::o;3463:222::-;3556:4;3594:2;3583:9;3579:18;3571:26;;3607:71;3675:1;3664:9;3660:17;3651:6;3607:71;:::i;:::-;3463:222;;;;:::o;3691:619::-;3768:6;3776;3784;3833:2;3821:9;3812:7;3808:23;3804:32;3801:119;;;3839:79;;:::i;:::-;3801:119;3959:1;3984:53;4029:7;4020:6;4009:9;4005:22;3984:53;:::i;:::-;3974:63;;3930:117;4086:2;4112:53;4157:7;4148:6;4137:9;4133:22;4112:53;:::i;:::-;4102:63;;4057:118;4214:2;4240:53;4285:7;4276:6;4265:9;4261:22;4240:53;:::i;:::-;4230:63;;4185:118;3691:619;;;;;:::o;4316:117::-;4425:1;4422;4415:12;4439:180;4487:77;4484:1;4477:88;4584:4;4581:1;4574:15;4608:4;4605:1;4598:15;4625:281;4708:27;4730:4;4708:27;:::i;:::-;4700:6;4696:40;4838:6;4826:10;4823:22;4802:18;4790:10;4787:34;4784:62;4781:88;;;4849:18;;:::i;:::-;4781:88;4889:10;4885:2;4878:22;4668:238;4625:281;;:::o;4912:129::-;4946:6;4973:20;;:::i;:::-;4963:30;;5002:33;5030:4;5022:6;5002:33;:::i;:::-;4912:129;;;:::o;5047:311::-;5124:4;5214:18;5206:6;5203:30;5200:56;;;5236:18;;:::i;:::-;5200:56;5286:4;5278:6;5274:17;5266:25;;5346:4;5340;5336:15;5328:23;;5047:311;;;:::o;5364:117::-;5473:1;5470;5463:12;5504:710;5600:5;5625:81;5641:64;5698:6;5641:64;:::i;:::-;5625:81;:::i;:::-;5616:90;;5726:5;5755:6;5748:5;5741:21;5789:4;5782:5;5778:16;5771:23;;5842:4;5834:6;5830:17;5822:6;5818:30;5871:3;5863:6;5860:15;5857:122;;;5890:79;;:::i;:::-;5857:122;6005:6;5988:220;6022:6;6017:3;6014:15;5988:220;;;6097:3;6126:37;6159:3;6147:10;6126:37;:::i;:::-;6121:3;6114:50;6193:4;6188:3;6184:14;6177:21;;6064:144;6048:4;6043:3;6039:14;6032:21;;5988:220;;;5992:21;5606:608;;5504:710;;;;;:::o;6237:370::-;6308:5;6357:3;6350:4;6342:6;6338:17;6334:27;6324:122;;6365:79;;:::i;:::-;6324:122;6482:6;6469:20;6507:94;6597:3;6589:6;6582:4;6574:6;6570:17;6507:94;:::i;:::-;6498:103;;6314:293;6237:370;;;;:::o;6613:684::-;6706:6;6714;6763:2;6751:9;6742:7;6738:23;6734:32;6731:119;;;6769:79;;:::i;:::-;6731:119;6917:1;6906:9;6902:17;6889:31;6947:18;6939:6;6936:30;6933:117;;;6969:79;;:::i;:::-;6933:117;7074:78;7144:7;7135:6;7124:9;7120:22;7074:78;:::i;:::-;7064:88;;6860:302;7201:2;7227:53;7272:7;7263:6;7252:9;7248:22;7227:53;:::i;:::-;7217:63;;7172:118;6613:684;;;;;:::o;7303:86::-;7338:7;7378:4;7371:5;7367:16;7356:27;;7303:86;;;:::o;7395:112::-;7478:22;7494:5;7478:22;:::i;:::-;7473:3;7466:35;7395:112;;:::o;7513:214::-;7602:4;7640:2;7629:9;7625:18;7617:26;;7653:67;7717:1;7706:9;7702:17;7693:6;7653:67;:::i;:::-;7513:214;;;;:::o;7733:329::-;7792:6;7841:2;7829:9;7820:7;7816:23;7812:32;7809:119;;;7847:79;;:::i;:::-;7809:119;7967:1;7992:53;8037:7;8028:6;8017:9;8013:22;7992:53;:::i;:::-;7982:63;;7938:117;7733:329;;;;:::o;8068:474::-;8136:6;8144;8193:2;8181:9;8172:7;8168:23;8164:32;8161:119;;;8199:79;;:::i;:::-;8161:119;8319:1;8344:53;8389:7;8380:6;8369:9;8365:22;8344:53;:::i;:::-;8334:63;;8290:117;8446:2;8472:53;8517:7;8508:6;8497:9;8493:22;8472:53;:::i;:::-;8462:63;;8417:118;8068:474;;;;;:::o;8548:180::-;8596:77;8593:1;8586:88;8693:4;8690:1;8683:15;8717:4;8714:1;8707:15;8734:320;8778:6;8815:1;8809:4;8805:12;8795:22;;8862:1;8856:4;8852:12;8883:18;8873:81;;8939:4;8931:6;8927:17;8917:27;;8873:81;9001:2;8993:6;8990:14;8970:18;8967:38;8964:84;;9020:18;;:::i;:::-;8964:84;8785:269;8734:320;;;:::o;9060:180::-;9108:77;9105:1;9098:88;9205:4;9202:1;9195:15;9229:4;9226:1;9219:15;9246:176;9386:28;9382:1;9374:6;9370:14;9363:52;9246:176;:::o;9428:366::-;9570:3;9591:67;9655:2;9650:3;9591:67;:::i;:::-;9584:74;;9667:93;9756:3;9667:93;:::i;:::-;9785:2;9780:3;9776:12;9769:19;;9428:366;;;:::o;9800:419::-;9966:4;10004:2;9993:9;9989:18;9981:26;;10053:9;10047:4;10043:20;10039:1;10028:9;10024:17;10017:47;10081:131;10207:4;10081:131;:::i;:::-;10073:139;;9800:419;;;:::o;10225:174::-;10365:26;10361:1;10353:6;10349:14;10342:50;10225:174;:::o;10405:366::-;10547:3;10568:67;10632:2;10627:3;10568:67;:::i;:::-;10561:74;;10644:93;10733:3;10644:93;:::i;:::-;10762:2;10757:3;10753:12;10746:19;;10405:366;;;:::o;10777:419::-;10943:4;10981:2;10970:9;10966:18;10958:26;;11030:9;11024:4;11020:20;11016:1;11005:9;11001:17;10994:47;11058:131;11184:4;11058:131;:::i;:::-;11050:139;;10777:419;;;:::o;11202:172::-;11342:24;11338:1;11330:6;11326:14;11319:48;11202:172;:::o;11380:366::-;11522:3;11543:67;11607:2;11602:3;11543:67;:::i;:::-;11536:74;;11619:93;11708:3;11619:93;:::i;:::-;11737:2;11732:3;11728:12;11721:19;;11380:366;;;:::o;11752:419::-;11918:4;11956:2;11945:9;11941:18;11933:26;;12005:9;11999:4;11995:20;11991:1;11980:9;11976:17;11969:47;12033:131;12159:4;12033:131;:::i;:::-;12025:139;;11752:419;;;:::o;12177:173::-;12317:25;12313:1;12305:6;12301:14;12294:49;12177:173;:::o;12356:366::-;12498:3;12519:67;12583:2;12578:3;12519:67;:::i;:::-;12512:74;;12595:93;12684:3;12595:93;:::i;:::-;12713:2;12708:3;12704:12;12697:19;;12356:366;;;:::o;12728:419::-;12894:4;12932:2;12921:9;12917:18;12909:26;;12981:9;12975:4;12971:20;12967:1;12956:9;12952:17;12945:47;13009:131;13135:4;13009:131;:::i;:::-;13001:139;;12728:419;;;:::o;13153:171::-;13293:23;13289:1;13281:6;13277:14;13270:47;13153:171;:::o;13330:366::-;13472:3;13493:67;13557:2;13552:3;13493:67;:::i;:::-;13486:74;;13569:93;13658:3;13569:93;:::i;:::-;13687:2;13682:3;13678:12;13671:19;;13330:366;;;:::o;13702:419::-;13868:4;13906:2;13895:9;13891:18;13883:26;;13955:9;13949:4;13945:20;13941:1;13930:9;13926:17;13919:47;13983:131;14109:4;13983:131;:::i;:::-;13975:139;;13702:419;;;:::o;14127:166::-;14267:18;14263:1;14255:6;14251:14;14244:42;14127:166;:::o;14299:366::-;14441:3;14462:67;14526:2;14521:3;14462:67;:::i;:::-;14455:74;;14538:93;14627:3;14538:93;:::i;:::-;14656:2;14651:3;14647:12;14640:19;;14299:366;;;:::o;14671:419::-;14837:4;14875:2;14864:9;14860:18;14852:26;;14924:9;14918:4;14914:20;14910:1;14899:9;14895:17;14888:47;14952:131;15078:4;14952:131;:::i;:::-;14944:139;;14671:419;;;:::o;15096:171::-;15236:23;15232:1;15224:6;15220:14;15213:47;15096:171;:::o;15273:366::-;15415:3;15436:67;15500:2;15495:3;15436:67;:::i;:::-;15429:74;;15512:93;15601:3;15512:93;:::i;:::-;15630:2;15625:3;15621:12;15614:19;;15273:366;;;:::o;15645:419::-;15811:4;15849:2;15838:9;15834:18;15826:26;;15898:9;15892:4;15888:20;15884:1;15873:9;15869:17;15862:47;15926:131;16052:4;15926:131;:::i;:::-;15918:139;;15645:419;;;:::o;16070:180::-;16118:77;16115:1;16108:88;16215:4;16212:1;16205:15;16239:4;16236:1;16229:15;16256:191;16296:3;16315:20;16333:1;16315:20;:::i;:::-;16310:25;;16349:20;16367:1;16349:20;:::i;:::-;16344:25;;16392:1;16389;16385:9;16378:16;;16413:3;16410:1;16407:10;16404:36;;;16420:18;;:::i;:::-;16404:36;16256:191;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "965600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2851",
								"decimals()": "338",
								"distributeTokens(address[],uint256)": "infinite",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2477",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_approve(address,address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_spendAllowance(address,address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 2379,
									"end": 9549,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 2379,
									"end": 9549,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 2379,
									"end": 9549,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 2777,
									"end": 2925,
									"name": "CALLVALUE",
									"source": 5
								},
								{
									"begin": 2777,
									"end": 2925,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 2777,
									"end": 2925,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 2777,
									"end": 2925,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 2777,
									"end": 2925,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 2777,
									"end": 2925,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2777,
									"end": 2925,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 2777,
									"end": 2925,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 2777,
									"end": 2925,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 2777,
									"end": 2925,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2777,
									"end": 2925,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2777,
									"end": 2925,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 2777,
									"end": 2925,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 2777,
									"end": 2925,
									"name": "PUSHSIZE",
									"source": 5
								},
								{
									"begin": 2777,
									"end": 2925,
									"name": "CODESIZE",
									"source": 5
								},
								{
									"begin": 2777,
									"end": 2925,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 2777,
									"end": 2925,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 2777,
									"end": 2925,
									"name": "PUSHSIZE",
									"source": 5
								},
								{
									"begin": 2777,
									"end": 2925,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 2777,
									"end": 2925,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 2777,
									"end": 2925,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2777,
									"end": 2925,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2777,
									"end": 2925,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2777,
									"end": 2925,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 2777,
									"end": 2925,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 2777,
									"end": 2925,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2777,
									"end": 2925,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2777,
									"end": 2925,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2777,
									"end": 2925,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 2777,
									"end": 2925,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 2777,
									"end": 2925,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2777,
									"end": 2925,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 2777,
									"end": 2925,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2777,
									"end": 2925,
									"name": "tag",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 2777,
									"end": 2925,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2848,
									"end": 2853,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2840,
									"end": 2845,
									"name": "PUSH",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 2840,
									"end": 2853,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2840,
									"end": 2853,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2840,
									"end": 2853,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 2840,
									"end": 2853,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 2840,
									"end": 2853,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2840,
									"end": 2853,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "7"
								},
								{
									"begin": 2840,
									"end": 2853,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2840,
									"end": 2853,
									"name": "tag",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 2840,
									"end": 2853,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2840,
									"end": 2853,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2870,
									"end": 2877,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 2860,
									"end": 2867,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 2860,
									"end": 2877,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2860,
									"end": 2877,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2860,
									"end": 2877,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "8"
								},
								{
									"begin": 2860,
									"end": 2877,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 2860,
									"end": 2877,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2860,
									"end": 2877,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "7"
								},
								{
									"begin": 2860,
									"end": 2877,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2860,
									"end": 2877,
									"name": "tag",
									"source": 5,
									"value": "8"
								},
								{
									"begin": 2860,
									"end": 2877,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2860,
									"end": 2877,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2884,
									"end": 2921,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "9"
								},
								{
									"begin": 2890,
									"end": 2900,
									"name": "CALLER",
									"source": 5
								},
								{
									"begin": 2902,
									"end": 2920,
									"name": "PUSH",
									"source": 5,
									"value": "D3C21BCECCEDA1000000"
								},
								{
									"begin": 2884,
									"end": 2889,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "10"
								},
								{
									"begin": 2884,
									"end": 2889,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 2884,
									"end": 2889,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 2884,
									"end": 2921,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 2884,
									"end": 2921,
									"name": "SHR",
									"source": 5
								},
								{
									"begin": 2884,
									"end": 2921,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2884,
									"end": 2921,
									"name": "tag",
									"source": 5,
									"value": "9"
								},
								{
									"begin": 2884,
									"end": 2921,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2777,
									"end": 2925,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2777,
									"end": 2925,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2379,
									"end": 9549,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 2379,
									"end": 9549,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 7810,
									"end": 8225,
									"name": "tag",
									"source": 5,
									"value": "10"
								},
								{
									"begin": 7810,
									"end": 8225,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 7913,
									"end": 7914,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 7894,
									"end": 7915,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7894,
									"end": 7915,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 7894,
									"end": 7901,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 7894,
									"end": 7915,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7894,
									"end": 7915,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 7894,
									"end": 7915,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 7886,
									"end": 7941,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "13"
								},
								{
									"begin": 7886,
									"end": 7941,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 7886,
									"end": 7941,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 7886,
									"end": 7941,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 7886,
									"end": 7941,
									"name": "PUSH",
									"source": 5,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7886,
									"end": 7941,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 7886,
									"end": 7941,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 7886,
									"end": 7941,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 7886,
									"end": 7941,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 7886,
									"end": 7941,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "14"
								},
								{
									"begin": 7886,
									"end": 7941,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 7886,
									"end": 7941,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "15"
								},
								{
									"begin": 7886,
									"end": 7941,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 7886,
									"end": 7941,
									"name": "tag",
									"source": 5,
									"value": "14"
								},
								{
									"begin": 7886,
									"end": 7941,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 7886,
									"end": 7941,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 7886,
									"end": 7941,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 7886,
									"end": 7941,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 7886,
									"end": 7941,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 7886,
									"end": 7941,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 7886,
									"end": 7941,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 7886,
									"end": 7941,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 7886,
									"end": 7941,
									"name": "tag",
									"source": 5,
									"value": "13"
								},
								{
									"begin": 7886,
									"end": 7941,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 7970,
									"end": 7976,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 7954,
									"end": 7966,
									"name": "PUSH",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 7954,
									"end": 7966,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 7954,
									"end": 7976,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 7954,
									"end": 7976,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 7954,
									"end": 7976,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 7954,
									"end": 7976,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "16"
								},
								{
									"begin": 7954,
									"end": 7976,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 7954,
									"end": 7976,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 7954,
									"end": 7976,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "17"
								},
								{
									"begin": 7954,
									"end": 7976,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 7954,
									"end": 7976,
									"name": "tag",
									"source": 5,
									"value": "16"
								},
								{
									"begin": 7954,
									"end": 7976,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 7954,
									"end": 7976,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 7954,
									"end": 7976,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 7954,
									"end": 7976,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 7954,
									"end": 7976,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 7954,
									"end": 7976,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 7954,
									"end": 7976,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 7954,
									"end": 7976,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 8147,
									"end": 8153,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 8125,
									"end": 8134,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 8125,
									"end": 8143,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 8135,
									"end": 8142,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 8125,
									"end": 8143,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8125,
									"end": 8143,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 8125,
									"end": 8143,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8125,
									"end": 8143,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 8125,
									"end": 8143,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 8125,
									"end": 8143,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 8125,
									"end": 8143,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 8125,
									"end": 8143,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 8125,
									"end": 8143,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 8125,
									"end": 8143,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 8125,
									"end": 8143,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 8125,
									"end": 8143,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 8125,
									"end": 8143,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 8125,
									"end": 8143,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 8125,
									"end": 8143,
									"name": "KECCAK256",
									"source": 5
								},
								{
									"begin": 8125,
									"end": 8143,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 8125,
									"end": 8153,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 8125,
									"end": 8153,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 8125,
									"end": 8153,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 8125,
									"end": 8153,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 8125,
									"end": 8153,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 8125,
									"end": 8153,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 8125,
									"end": 8153,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 8125,
									"end": 8153,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 8125,
									"end": 8153,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 8125,
									"end": 8153,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 8125,
									"end": 8153,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 8201,
									"end": 8208,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 8180,
									"end": 8217,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8180,
									"end": 8217,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 8197,
									"end": 8198,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 8180,
									"end": 8217,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8180,
									"end": 8217,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 8180,
									"end": 8217,
									"name": "PUSH",
									"source": 5,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 8210,
									"end": 8216,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 8180,
									"end": 8217,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 8180,
									"end": 8217,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 8180,
									"end": 8217,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "18"
								},
								{
									"begin": 8180,
									"end": 8217,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 8180,
									"end": 8217,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 8180,
									"end": 8217,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "19"
								},
								{
									"begin": 8180,
									"end": 8217,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 8180,
									"end": 8217,
									"name": "tag",
									"source": 5,
									"value": "18"
								},
								{
									"begin": 8180,
									"end": 8217,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 8180,
									"end": 8217,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 8180,
									"end": 8217,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 8180,
									"end": 8217,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 8180,
									"end": 8217,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 8180,
									"end": 8217,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 8180,
									"end": 8217,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 8180,
									"end": 8217,
									"name": "LOG3",
									"source": 5
								},
								{
									"begin": 7810,
									"end": 8225,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 7810,
									"end": 8225,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 7810,
									"end": 8225,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 7,
									"end": 82,
									"name": "tag",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 7,
									"end": 82,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 40,
									"end": 46,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 73,
									"end": 75,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 67,
									"end": 76,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 57,
									"end": 76,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 57,
									"end": 76,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7,
									"end": 82,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 7,
									"end": 82,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 211,
									"end": 328,
									"name": "tag",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 211,
									"end": 328,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 320,
									"end": 321,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 317,
									"end": 318,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 310,
									"end": 322,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 334,
									"end": 451,
									"name": "tag",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 334,
									"end": 451,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 443,
									"end": 444,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 433,
									"end": 445,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 457,
									"end": 574,
									"name": "tag",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 457,
									"end": 574,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 566,
									"end": 567,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 563,
									"end": 564,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 556,
									"end": 568,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 580,
									"end": 682,
									"name": "tag",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 580,
									"end": 682,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 621,
									"end": 627,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 672,
									"end": 674,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 668,
									"end": 675,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 663,
									"end": 665,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 656,
									"end": 661,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 652,
									"end": 666,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 648,
									"end": 676,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 638,
									"end": 676,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 638,
									"end": 676,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 580,
									"end": 682,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 580,
									"end": 682,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 688,
									"end": 868,
									"name": "tag",
									"source": 6,
									"value": "26"
								},
								{
									"begin": 688,
									"end": 868,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 736,
									"end": 813,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 733,
									"end": 734,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 726,
									"end": 814,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 833,
									"end": 837,
									"name": "PUSH",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 830,
									"end": 831,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 823,
									"end": 838,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 857,
									"end": 861,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 854,
									"end": 855,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 847,
									"end": 862,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "tag",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "66"
								},
								{
									"begin": 979,
									"end": 983,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 957,
									"end": 984,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 957,
									"end": 984,
									"name": "tag",
									"source": 6,
									"value": "66"
								},
								{
									"begin": 957,
									"end": 984,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 949,
									"end": 955,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 945,
									"end": 985,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1087,
									"end": 1093,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1075,
									"end": 1085,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1072,
									"end": 1094,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 1051,
									"end": 1069,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1039,
									"end": 1049,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1036,
									"end": 1070,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 1033,
									"end": 1095,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "67"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "68"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "26"
								},
								{
									"begin": 1098,
									"end": 1116,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "tag",
									"source": 6,
									"value": "68"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "tag",
									"source": 6,
									"value": "67"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1138,
									"end": 1148,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1134,
									"end": 1136,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1127,
									"end": 1149,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 917,
									"end": 1155,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 874,
									"end": 1155,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "tag",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1195,
									"end": 1201,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "70"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1222,
									"end": 1242,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "tag",
									"source": 6,
									"value": "70"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "71"
								},
								{
									"begin": 1279,
									"end": 1283,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1271,
									"end": 1277,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 1251,
									"end": 1284,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "tag",
									"source": 6,
									"value": "71"
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1161,
									"end": 1290,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "tag",
									"source": 6,
									"value": "29"
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1358,
									"end": 1362,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1448,
									"end": 1466,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1440,
									"end": 1446,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1437,
									"end": 1467,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "74"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "26"
								},
								{
									"begin": 1470,
									"end": 1488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "tag",
									"source": 6,
									"value": "74"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "tag",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "75"
								},
								{
									"begin": 1530,
									"end": 1536,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 1508,
									"end": 1537,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "tag",
									"source": 6,
									"value": "75"
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1592,
									"end": 1596,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1586,
									"end": 1590,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1582,
									"end": 1597,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1296,
									"end": 1604,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "tag",
									"source": 6,
									"value": "30"
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1699,
									"end": 1705,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1694,
									"end": 1697,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1689,
									"end": 1692,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1683,
									"end": 1706,
									"name": "MCOPY",
									"source": 6
								},
								{
									"begin": 1740,
									"end": 1741,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1731,
									"end": 1737,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1726,
									"end": 1729,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1722,
									"end": 1738,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1715,
									"end": 1742,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1610,
									"end": 1749,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "tag",
									"source": 6,
									"value": "31"
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1844,
									"end": 1849,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1869,
									"end": 1935,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "78"
								},
								{
									"begin": 1885,
									"end": 1934,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "79"
								},
								{
									"begin": 1927,
									"end": 1933,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1885,
									"end": 1934,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "29"
								},
								{
									"begin": 1885,
									"end": 1934,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1885,
									"end": 1934,
									"name": "tag",
									"source": 6,
									"value": "79"
								},
								{
									"begin": 1885,
									"end": 1934,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1869,
									"end": 1935,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 1869,
									"end": 1935,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1869,
									"end": 1935,
									"name": "tag",
									"source": 6,
									"value": "78"
								},
								{
									"begin": 1869,
									"end": 1935,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1860,
									"end": 1935,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1860,
									"end": 1935,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1958,
									"end": 1964,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1951,
									"end": 1956,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1944,
									"end": 1965,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1996,
									"end": 2000,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1989,
									"end": 1994,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1985,
									"end": 2001,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2034,
									"end": 2037,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2025,
									"end": 2031,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2020,
									"end": 2023,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2016,
									"end": 2032,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2013,
									"end": 2038,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2041,
									"end": 2120,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "81"
								},
								{
									"begin": 2041,
									"end": 2120,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 2041,
									"end": 2120,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2041,
									"end": 2120,
									"name": "tag",
									"source": 6,
									"value": "81"
								},
								{
									"begin": 2041,
									"end": 2120,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "tag",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2131,
									"end": 2183,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "82"
								},
								{
									"begin": 2176,
									"end": 2182,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2171,
									"end": 2174,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2166,
									"end": 2169,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 2131,
									"end": 2183,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "30"
								},
								{
									"begin": 2131,
									"end": 2183,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2131,
									"end": 2183,
									"name": "tag",
									"source": 6,
									"value": "82"
								},
								{
									"begin": 2131,
									"end": 2183,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1850,
									"end": 2189,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1755,
									"end": 2189,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "tag",
									"source": 6,
									"value": "32"
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2276,
									"end": 2281,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2325,
									"end": 2328,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2318,
									"end": 2322,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 2310,
									"end": 2316,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 2306,
									"end": 2323,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2302,
									"end": 2329,
									"name": "SLT",
									"source": 6
								},
								{
									"begin": 2292,
									"end": 2414,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "84"
								},
								{
									"begin": 2292,
									"end": 2414,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2333,
									"end": 2412,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "85"
								},
								{
									"begin": 2333,
									"end": 2412,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 2333,
									"end": 2412,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2333,
									"end": 2412,
									"name": "tag",
									"source": 6,
									"value": "85"
								},
								{
									"begin": 2333,
									"end": 2412,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2292,
									"end": 2414,
									"name": "tag",
									"source": 6,
									"value": "84"
								},
								{
									"begin": 2292,
									"end": 2414,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2443,
									"end": 2449,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2437,
									"end": 2450,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 2468,
									"end": 2558,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "86"
								},
								{
									"begin": 2554,
									"end": 2557,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2546,
									"end": 2552,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2539,
									"end": 2543,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2531,
									"end": 2537,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 2527,
									"end": 2544,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2468,
									"end": 2558,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "31"
								},
								{
									"begin": 2468,
									"end": 2558,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2468,
									"end": 2558,
									"name": "tag",
									"source": 6,
									"value": "86"
								},
								{
									"begin": 2468,
									"end": 2558,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2459,
									"end": 2558,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2459,
									"end": 2558,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2282,
									"end": 2564,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2209,
									"end": 2564,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2570,
									"end": 3423,
									"name": "tag",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 2570,
									"end": 3423,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2669,
									"end": 2675,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2677,
									"end": 2683,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 2726,
									"end": 2728,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 2714,
									"end": 2723,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 2705,
									"end": 2712,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 2701,
									"end": 2724,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 2697,
									"end": 2729,
									"name": "SLT",
									"source": 6
								},
								{
									"begin": 2694,
									"end": 2813,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 2694,
									"end": 2813,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "88"
								},
								{
									"begin": 2694,
									"end": 2813,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2732,
									"end": 2811,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "89"
								},
								{
									"begin": 2732,
									"end": 2811,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 2732,
									"end": 2811,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2732,
									"end": 2811,
									"name": "tag",
									"source": 6,
									"value": "89"
								},
								{
									"begin": 2732,
									"end": 2811,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2694,
									"end": 2813,
									"name": "tag",
									"source": 6,
									"value": "88"
								},
								{
									"begin": 2694,
									"end": 2813,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2873,
									"end": 2874,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2862,
									"end": 2871,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 2858,
									"end": 2875,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2852,
									"end": 2876,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 2903,
									"end": 2921,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2895,
									"end": 2901,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2892,
									"end": 2922,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 2889,
									"end": 3006,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 2889,
									"end": 3006,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "90"
								},
								{
									"begin": 2889,
									"end": 3006,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2925,
									"end": 3004,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "91"
								},
								{
									"begin": 2925,
									"end": 3004,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 2925,
									"end": 3004,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2925,
									"end": 3004,
									"name": "tag",
									"source": 6,
									"value": "91"
								},
								{
									"begin": 2925,
									"end": 3004,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2889,
									"end": 3006,
									"name": "tag",
									"source": 6,
									"value": "90"
								},
								{
									"begin": 2889,
									"end": 3006,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3030,
									"end": 3104,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "92"
								},
								{
									"begin": 3096,
									"end": 3103,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 3087,
									"end": 3093,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3076,
									"end": 3085,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 3072,
									"end": 3094,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3030,
									"end": 3104,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "32"
								},
								{
									"begin": 3030,
									"end": 3104,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3030,
									"end": 3104,
									"name": "tag",
									"source": 6,
									"value": "92"
								},
								{
									"begin": 3030,
									"end": 3104,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3020,
									"end": 3104,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 3020,
									"end": 3104,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2823,
									"end": 3114,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3174,
									"end": 3176,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 3163,
									"end": 3172,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 3159,
									"end": 3177,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3153,
									"end": 3178,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 3205,
									"end": 3223,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3197,
									"end": 3203,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3194,
									"end": 3224,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 3191,
									"end": 3308,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 3191,
									"end": 3308,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "93"
								},
								{
									"begin": 3191,
									"end": 3308,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 3227,
									"end": 3306,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "94"
								},
								{
									"begin": 3227,
									"end": 3306,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 3227,
									"end": 3306,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3227,
									"end": 3306,
									"name": "tag",
									"source": 6,
									"value": "94"
								},
								{
									"begin": 3227,
									"end": 3306,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3191,
									"end": 3308,
									"name": "tag",
									"source": 6,
									"value": "93"
								},
								{
									"begin": 3191,
									"end": 3308,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3332,
									"end": 3406,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "95"
								},
								{
									"begin": 3398,
									"end": 3405,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 3389,
									"end": 3395,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3378,
									"end": 3387,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 3374,
									"end": 3396,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3332,
									"end": 3406,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "32"
								},
								{
									"begin": 3332,
									"end": 3406,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3332,
									"end": 3406,
									"name": "tag",
									"source": 6,
									"value": "95"
								},
								{
									"begin": 3332,
									"end": 3406,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3322,
									"end": 3406,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3322,
									"end": 3406,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3124,
									"end": 3416,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2570,
									"end": 3423,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 2570,
									"end": 3423,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2570,
									"end": 3423,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 2570,
									"end": 3423,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2570,
									"end": 3423,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2570,
									"end": 3423,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3429,
									"end": 3528,
									"name": "tag",
									"source": 6,
									"value": "33"
								},
								{
									"begin": 3429,
									"end": 3528,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3481,
									"end": 3487,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3515,
									"end": 3520,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3509,
									"end": 3521,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 3499,
									"end": 3521,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3499,
									"end": 3521,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3429,
									"end": 3528,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3429,
									"end": 3528,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3429,
									"end": 3528,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3429,
									"end": 3528,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3534,
									"end": 3714,
									"name": "tag",
									"source": 6,
									"value": "34"
								},
								{
									"begin": 3534,
									"end": 3714,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3582,
									"end": 3659,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3579,
									"end": 3580,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3572,
									"end": 3660,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 3679,
									"end": 3683,
									"name": "PUSH",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 3676,
									"end": 3677,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 3669,
									"end": 3684,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 3703,
									"end": 3707,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 3700,
									"end": 3701,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3693,
									"end": 3708,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 3720,
									"end": 4040,
									"name": "tag",
									"source": 6,
									"value": "35"
								},
								{
									"begin": 3720,
									"end": 4040,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3764,
									"end": 3770,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3801,
									"end": 3802,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 3795,
									"end": 3799,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3791,
									"end": 3803,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 3781,
									"end": 3803,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3781,
									"end": 3803,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3848,
									"end": 3849,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 3842,
									"end": 3846,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3838,
									"end": 3850,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 3869,
									"end": 3887,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 3859,
									"end": 3940,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "99"
								},
								{
									"begin": 3859,
									"end": 3940,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 3925,
									"end": 3929,
									"name": "PUSH",
									"source": 6,
									"value": "7F"
								},
								{
									"begin": 3917,
									"end": 3923,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3913,
									"end": 3930,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 3903,
									"end": 3930,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3903,
									"end": 3930,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3859,
									"end": 3940,
									"name": "tag",
									"source": 6,
									"value": "99"
								},
								{
									"begin": 3859,
									"end": 3940,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3987,
									"end": 3989,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 3979,
									"end": 3985,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3976,
									"end": 3990,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 3956,
									"end": 3974,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3953,
									"end": 3991,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 3950,
									"end": 4034,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 3950,
									"end": 4034,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 4006,
									"end": 4024,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "101"
								},
								{
									"begin": 4006,
									"end": 4024,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "34"
								},
								{
									"begin": 4006,
									"end": 4024,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4006,
									"end": 4024,
									"name": "tag",
									"source": 6,
									"value": "101"
								},
								{
									"begin": 4006,
									"end": 4024,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3950,
									"end": 4034,
									"name": "tag",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 3950,
									"end": 4034,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3771,
									"end": 4040,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3720,
									"end": 4040,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3720,
									"end": 4040,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3720,
									"end": 4040,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3720,
									"end": 4040,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4046,
									"end": 4187,
									"name": "tag",
									"source": 6,
									"value": "36"
								},
								{
									"begin": 4046,
									"end": 4187,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4095,
									"end": 4099,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4118,
									"end": 4121,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4110,
									"end": 4121,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4110,
									"end": 4121,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4141,
									"end": 4144,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4138,
									"end": 4139,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4131,
									"end": 4145,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 4175,
									"end": 4179,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 4172,
									"end": 4173,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4162,
									"end": 4180,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": 4154,
									"end": 4180,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4154,
									"end": 4180,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4046,
									"end": 4187,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 4046,
									"end": 4187,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4046,
									"end": 4187,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4046,
									"end": 4187,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4193,
									"end": 4286,
									"name": "tag",
									"source": 6,
									"value": "37"
								},
								{
									"begin": 4193,
									"end": 4286,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4230,
									"end": 4236,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4277,
									"end": 4279,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 4272,
									"end": 4274,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 4265,
									"end": 4270,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 4261,
									"end": 4275,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 4257,
									"end": 4280,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 4247,
									"end": 4280,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4247,
									"end": 4280,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4193,
									"end": 4286,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 4193,
									"end": 4286,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4193,
									"end": 4286,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4193,
									"end": 4286,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4292,
									"end": 4399,
									"name": "tag",
									"source": 6,
									"value": "38"
								},
								{
									"begin": 4292,
									"end": 4399,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4336,
									"end": 4344,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4386,
									"end": 4391,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4380,
									"end": 4384,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4376,
									"end": 4392,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 4355,
									"end": 4392,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4355,
									"end": 4392,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4292,
									"end": 4399,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 4292,
									"end": 4399,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 4292,
									"end": 4399,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4292,
									"end": 4399,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4292,
									"end": 4399,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4405,
									"end": 4798,
									"name": "tag",
									"source": 6,
									"value": "39"
								},
								{
									"begin": 4405,
									"end": 4798,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4474,
									"end": 4480,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4524,
									"end": 4525,
									"name": "PUSH",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 4512,
									"end": 4522,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 4508,
									"end": 4526,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 4547,
									"end": 4644,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "106"
								},
								{
									"begin": 4577,
									"end": 4643,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4566,
									"end": 4575,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4547,
									"end": 4644,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "38"
								},
								{
									"begin": 4547,
									"end": 4644,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4547,
									"end": 4644,
									"name": "tag",
									"source": 6,
									"value": "106"
								},
								{
									"begin": 4547,
									"end": 4644,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4665,
									"end": 4704,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "107"
								},
								{
									"begin": 4695,
									"end": 4703,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 4684,
									"end": 4693,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 4665,
									"end": 4704,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "38"
								},
								{
									"begin": 4665,
									"end": 4704,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4665,
									"end": 4704,
									"name": "tag",
									"source": 6,
									"value": "107"
								},
								{
									"begin": 4665,
									"end": 4704,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4653,
									"end": 4704,
									"name": "SWAP6",
									"source": 6
								},
								{
									"begin": 4653,
									"end": 4704,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4737,
									"end": 4741,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 4733,
									"end": 4742,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 4726,
									"end": 4731,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 4722,
									"end": 4743,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 4713,
									"end": 4743,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 4713,
									"end": 4743,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4786,
									"end": 4790,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 4776,
									"end": 4784,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 4772,
									"end": 4791,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 4765,
									"end": 4770,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 4762,
									"end": 4792,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 4752,
									"end": 4792,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 4752,
									"end": 4792,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4481,
									"end": 4798,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4481,
									"end": 4798,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4405,
									"end": 4798,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 4405,
									"end": 4798,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 4405,
									"end": 4798,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4405,
									"end": 4798,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4405,
									"end": 4798,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4405,
									"end": 4798,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4804,
									"end": 4881,
									"name": "tag",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 4804,
									"end": 4881,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4841,
									"end": 4848,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4870,
									"end": 4875,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4859,
									"end": 4875,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4859,
									"end": 4875,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4804,
									"end": 4881,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 4804,
									"end": 4881,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4804,
									"end": 4881,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4804,
									"end": 4881,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4887,
									"end": 4947,
									"name": "tag",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 4887,
									"end": 4947,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4915,
									"end": 4918,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4936,
									"end": 4941,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4929,
									"end": 4941,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4929,
									"end": 4941,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4887,
									"end": 4947,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 4887,
									"end": 4947,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4887,
									"end": 4947,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4887,
									"end": 4947,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4953,
									"end": 5095,
									"name": "tag",
									"source": 6,
									"value": "42"
								},
								{
									"begin": 4953,
									"end": 5095,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5003,
									"end": 5012,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 5036,
									"end": 5089,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "111"
								},
								{
									"begin": 5054,
									"end": 5088,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "112"
								},
								{
									"begin": 5063,
									"end": 5087,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "113"
								},
								{
									"begin": 5081,
									"end": 5086,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 5063,
									"end": 5087,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 5063,
									"end": 5087,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5063,
									"end": 5087,
									"name": "tag",
									"source": 6,
									"value": "113"
								},
								{
									"begin": 5063,
									"end": 5087,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5054,
									"end": 5088,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 5054,
									"end": 5088,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5054,
									"end": 5088,
									"name": "tag",
									"source": 6,
									"value": "112"
								},
								{
									"begin": 5054,
									"end": 5088,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5036,
									"end": 5089,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 5036,
									"end": 5089,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5036,
									"end": 5089,
									"name": "tag",
									"source": 6,
									"value": "111"
								},
								{
									"begin": 5036,
									"end": 5089,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5023,
									"end": 5089,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5023,
									"end": 5089,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4953,
									"end": 5095,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 4953,
									"end": 5095,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4953,
									"end": 5095,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4953,
									"end": 5095,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5101,
									"end": 5176,
									"name": "tag",
									"source": 6,
									"value": "43"
								},
								{
									"begin": 5101,
									"end": 5176,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5144,
									"end": 5147,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 5165,
									"end": 5170,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 5158,
									"end": 5170,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5158,
									"end": 5170,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5101,
									"end": 5176,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 5101,
									"end": 5176,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5101,
									"end": 5176,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5101,
									"end": 5176,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5182,
									"end": 5451,
									"name": "tag",
									"source": 6,
									"value": "44"
								},
								{
									"begin": 5182,
									"end": 5451,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5292,
									"end": 5331,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "116"
								},
								{
									"begin": 5323,
									"end": 5330,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 5292,
									"end": 5331,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "42"
								},
								{
									"begin": 5292,
									"end": 5331,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5292,
									"end": 5331,
									"name": "tag",
									"source": 6,
									"value": "116"
								},
								{
									"begin": 5292,
									"end": 5331,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5353,
									"end": 5444,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "117"
								},
								{
									"begin": 5402,
									"end": 5443,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "118"
								},
								{
									"begin": 5426,
									"end": 5442,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5402,
									"end": 5443,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "43"
								},
								{
									"begin": 5402,
									"end": 5443,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5402,
									"end": 5443,
									"name": "tag",
									"source": 6,
									"value": "118"
								},
								{
									"begin": 5402,
									"end": 5443,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5394,
									"end": 5400,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 5387,
									"end": 5391,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 5381,
									"end": 5392,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 5353,
									"end": 5444,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "39"
								},
								{
									"begin": 5353,
									"end": 5444,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5353,
									"end": 5444,
									"name": "tag",
									"source": 6,
									"value": "117"
								},
								{
									"begin": 5353,
									"end": 5444,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5347,
									"end": 5351,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5340,
									"end": 5445,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 5258,
									"end": 5451,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5182,
									"end": 5451,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5182,
									"end": 5451,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5182,
									"end": 5451,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5182,
									"end": 5451,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5457,
									"end": 5530,
									"name": "tag",
									"source": 6,
									"value": "45"
								},
								{
									"begin": 5457,
									"end": 5530,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5502,
									"end": 5505,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 5457,
									"end": 5530,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5457,
									"end": 5530,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5536,
									"end": 5725,
									"name": "tag",
									"source": 6,
									"value": "46"
								},
								{
									"begin": 5536,
									"end": 5725,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5613,
									"end": 5645,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "121"
								},
								{
									"begin": 5613,
									"end": 5645,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "45"
								},
								{
									"begin": 5613,
									"end": 5645,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5613,
									"end": 5645,
									"name": "tag",
									"source": 6,
									"value": "121"
								},
								{
									"begin": 5613,
									"end": 5645,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5654,
									"end": 5719,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "122"
								},
								{
									"begin": 5712,
									"end": 5718,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 5704,
									"end": 5710,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 5698,
									"end": 5702,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 5654,
									"end": 5719,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "44"
								},
								{
									"begin": 5654,
									"end": 5719,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5654,
									"end": 5719,
									"name": "tag",
									"source": 6,
									"value": "122"
								},
								{
									"begin": 5654,
									"end": 5719,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5589,
									"end": 5725,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5536,
									"end": 5725,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5536,
									"end": 5725,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5536,
									"end": 5725,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5731,
									"end": 5917,
									"name": "tag",
									"source": 6,
									"value": "47"
								},
								{
									"begin": 5731,
									"end": 5917,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5791,
									"end": 5911,
									"name": "tag",
									"source": 6,
									"value": "124"
								},
								{
									"begin": 5791,
									"end": 5911,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5808,
									"end": 5811,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 5801,
									"end": 5806,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 5798,
									"end": 5812,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 5791,
									"end": 5911,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 5791,
									"end": 5911,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "126"
								},
								{
									"begin": 5791,
									"end": 5911,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 5862,
									"end": 5901,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "127"
								},
								{
									"begin": 5899,
									"end": 5900,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 5892,
									"end": 5897,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5862,
									"end": 5901,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "46"
								},
								{
									"begin": 5862,
									"end": 5901,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5862,
									"end": 5901,
									"name": "tag",
									"source": 6,
									"value": "127"
								},
								{
									"begin": 5862,
									"end": 5901,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5835,
									"end": 5836,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 5828,
									"end": 5833,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 5824,
									"end": 5837,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 5815,
									"end": 5837,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5815,
									"end": 5837,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5791,
									"end": 5911,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "124"
								},
								{
									"begin": 5791,
									"end": 5911,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5791,
									"end": 5911,
									"name": "tag",
									"source": 6,
									"value": "126"
								},
								{
									"begin": 5791,
									"end": 5911,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5731,
									"end": 5917,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5731,
									"end": 5917,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5731,
									"end": 5917,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5923,
									"end": 6466,
									"name": "tag",
									"source": 6,
									"value": "48"
								},
								{
									"begin": 5923,
									"end": 6466,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6024,
									"end": 6026,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 6019,
									"end": 6022,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 6016,
									"end": 6027,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 6013,
									"end": 6459,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 6013,
									"end": 6459,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "129"
								},
								{
									"begin": 6013,
									"end": 6459,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 6058,
									"end": 6096,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "130"
								},
								{
									"begin": 6090,
									"end": 6095,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 6058,
									"end": 6096,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "36"
								},
								{
									"begin": 6058,
									"end": 6096,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6058,
									"end": 6096,
									"name": "tag",
									"source": 6,
									"value": "130"
								},
								{
									"begin": 6058,
									"end": 6096,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6142,
									"end": 6171,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "131"
								},
								{
									"begin": 6160,
									"end": 6170,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 6142,
									"end": 6171,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "37"
								},
								{
									"begin": 6142,
									"end": 6171,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6142,
									"end": 6171,
									"name": "tag",
									"source": 6,
									"value": "131"
								},
								{
									"begin": 6142,
									"end": 6171,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6132,
									"end": 6140,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 6128,
									"end": 6172,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 6325,
									"end": 6327,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 6313,
									"end": 6323,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 6310,
									"end": 6328,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 6307,
									"end": 6356,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 6307,
									"end": 6356,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "132"
								},
								{
									"begin": 6307,
									"end": 6356,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 6346,
									"end": 6354,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 6331,
									"end": 6354,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 6331,
									"end": 6354,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6307,
									"end": 6356,
									"name": "tag",
									"source": 6,
									"value": "132"
								},
								{
									"begin": 6307,
									"end": 6356,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6369,
									"end": 6449,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "133"
								},
								{
									"begin": 6425,
									"end": 6447,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "134"
								},
								{
									"begin": 6443,
									"end": 6446,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 6425,
									"end": 6447,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "37"
								},
								{
									"begin": 6425,
									"end": 6447,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6425,
									"end": 6447,
									"name": "tag",
									"source": 6,
									"value": "134"
								},
								{
									"begin": 6425,
									"end": 6447,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6415,
									"end": 6423,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 6411,
									"end": 6448,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 6398,
									"end": 6409,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 6369,
									"end": 6449,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "47"
								},
								{
									"begin": 6369,
									"end": 6449,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6369,
									"end": 6449,
									"name": "tag",
									"source": 6,
									"value": "133"
								},
								{
									"begin": 6369,
									"end": 6449,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6028,
									"end": 6459,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6028,
									"end": 6459,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6013,
									"end": 6459,
									"name": "tag",
									"source": 6,
									"value": "129"
								},
								{
									"begin": 6013,
									"end": 6459,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5923,
									"end": 6466,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5923,
									"end": 6466,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5923,
									"end": 6466,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5923,
									"end": 6466,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6472,
									"end": 6589,
									"name": "tag",
									"source": 6,
									"value": "49"
								},
								{
									"begin": 6472,
									"end": 6589,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6526,
									"end": 6534,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 6576,
									"end": 6581,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 6570,
									"end": 6574,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 6566,
									"end": 6582,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 6545,
									"end": 6582,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 6545,
									"end": 6582,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6472,
									"end": 6589,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 6472,
									"end": 6589,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 6472,
									"end": 6589,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6472,
									"end": 6589,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6472,
									"end": 6589,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6595,
									"end": 6764,
									"name": "tag",
									"source": 6,
									"value": "50"
								},
								{
									"begin": 6595,
									"end": 6764,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6639,
									"end": 6645,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 6672,
									"end": 6723,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "137"
								},
								{
									"begin": 6720,
									"end": 6721,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 6716,
									"end": 6722,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 6708,
									"end": 6713,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 6705,
									"end": 6706,
									"name": "PUSH",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 6701,
									"end": 6714,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 6672,
									"end": 6723,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "49"
								},
								{
									"begin": 6672,
									"end": 6723,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6672,
									"end": 6723,
									"name": "tag",
									"source": 6,
									"value": "137"
								},
								{
									"begin": 6672,
									"end": 6723,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6668,
									"end": 6724,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 6753,
									"end": 6757,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 6747,
									"end": 6751,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 6743,
									"end": 6758,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 6733,
									"end": 6758,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 6733,
									"end": 6758,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6646,
									"end": 6764,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6595,
									"end": 6764,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 6595,
									"end": 6764,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 6595,
									"end": 6764,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6595,
									"end": 6764,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6595,
									"end": 6764,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6769,
									"end": 7064,
									"name": "tag",
									"source": 6,
									"value": "51"
								},
								{
									"begin": 6769,
									"end": 7064,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6845,
									"end": 6849,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 6991,
									"end": 7020,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "139"
								},
								{
									"begin": 7016,
									"end": 7019,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 7010,
									"end": 7014,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 6991,
									"end": 7020,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "50"
								},
								{
									"begin": 6991,
									"end": 7020,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6991,
									"end": 7020,
									"name": "tag",
									"source": 6,
									"value": "139"
								},
								{
									"begin": 6991,
									"end": 7020,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6983,
									"end": 7020,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 6983,
									"end": 7020,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7053,
									"end": 7056,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 7050,
									"end": 7051,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 7046,
									"end": 7057,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 7040,
									"end": 7044,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 7037,
									"end": 7058,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 7029,
									"end": 7058,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 7029,
									"end": 7058,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6769,
									"end": 7064,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 6769,
									"end": 7064,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 6769,
									"end": 7064,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6769,
									"end": 7064,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6769,
									"end": 7064,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7069,
									"end": 8464,
									"name": "tag",
									"source": 6,
									"value": "7"
								},
								{
									"begin": 7069,
									"end": 8464,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7186,
									"end": 7223,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "141"
								},
								{
									"begin": 7219,
									"end": 7222,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 7186,
									"end": 7223,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "33"
								},
								{
									"begin": 7186,
									"end": 7223,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7186,
									"end": 7223,
									"name": "tag",
									"source": 6,
									"value": "141"
								},
								{
									"begin": 7186,
									"end": 7223,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7288,
									"end": 7306,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7280,
									"end": 7286,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 7277,
									"end": 7307,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 7274,
									"end": 7330,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 7274,
									"end": 7330,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "142"
								},
								{
									"begin": 7274,
									"end": 7330,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 7310,
									"end": 7328,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "143"
								},
								{
									"begin": 7310,
									"end": 7328,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "26"
								},
								{
									"begin": 7310,
									"end": 7328,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7310,
									"end": 7328,
									"name": "tag",
									"source": 6,
									"value": "143"
								},
								{
									"begin": 7310,
									"end": 7328,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7274,
									"end": 7330,
									"name": "tag",
									"source": 6,
									"value": "142"
								},
								{
									"begin": 7274,
									"end": 7330,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7354,
									"end": 7392,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "144"
								},
								{
									"begin": 7386,
									"end": 7390,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 7380,
									"end": 7391,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 7354,
									"end": 7392,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "35"
								},
								{
									"begin": 7354,
									"end": 7392,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7354,
									"end": 7392,
									"name": "tag",
									"source": 6,
									"value": "144"
								},
								{
									"begin": 7354,
									"end": 7392,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7439,
									"end": 7506,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "145"
								},
								{
									"begin": 7499,
									"end": 7505,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 7491,
									"end": 7497,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 7485,
									"end": 7489,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 7439,
									"end": 7506,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "48"
								},
								{
									"begin": 7439,
									"end": 7506,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7439,
									"end": 7506,
									"name": "tag",
									"source": 6,
									"value": "145"
								},
								{
									"begin": 7439,
									"end": 7506,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7533,
									"end": 7534,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 7557,
									"end": 7561,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 7544,
									"end": 7561,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 7544,
									"end": 7561,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7589,
									"end": 7591,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 7581,
									"end": 7587,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 7578,
									"end": 7592,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 7606,
									"end": 7607,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 7601,
									"end": 8219,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 7601,
									"end": 8219,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 7601,
									"end": 8219,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "147"
								},
								{
									"begin": 7601,
									"end": 8219,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 8263,
									"end": 8264,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 8280,
									"end": 8286,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 8277,
									"end": 8354,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 8277,
									"end": 8354,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "148"
								},
								{
									"begin": 8277,
									"end": 8354,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 8329,
									"end": 8338,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 8324,
									"end": 8327,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 8320,
									"end": 8339,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 8314,
									"end": 8340,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 8305,
									"end": 8340,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 8305,
									"end": 8340,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8277,
									"end": 8354,
									"name": "tag",
									"source": 6,
									"value": "148"
								},
								{
									"begin": 8277,
									"end": 8354,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8380,
									"end": 8447,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "149"
								},
								{
									"begin": 8440,
									"end": 8446,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 8433,
									"end": 8438,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 8380,
									"end": 8447,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "51"
								},
								{
									"begin": 8380,
									"end": 8447,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 8380,
									"end": 8447,
									"name": "tag",
									"source": 6,
									"value": "149"
								},
								{
									"begin": 8380,
									"end": 8447,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8374,
									"end": 8378,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 8367,
									"end": 8448,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 8236,
									"end": 8458,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7571,
									"end": 8458,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "146"
								},
								{
									"begin": 7571,
									"end": 8458,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7601,
									"end": 8219,
									"name": "tag",
									"source": 6,
									"value": "147"
								},
								{
									"begin": 7601,
									"end": 8219,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7653,
									"end": 7657,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 7649,
									"end": 7658,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 7641,
									"end": 7647,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 7637,
									"end": 7659,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 7687,
									"end": 7724,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "150"
								},
								{
									"begin": 7719,
									"end": 7723,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 7687,
									"end": 7724,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "36"
								},
								{
									"begin": 7687,
									"end": 7724,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7687,
									"end": 7724,
									"name": "tag",
									"source": 6,
									"value": "150"
								},
								{
									"begin": 7687,
									"end": 7724,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7746,
									"end": 7747,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 7760,
									"end": 7968,
									"name": "tag",
									"source": 6,
									"value": "151"
								},
								{
									"begin": 7760,
									"end": 7968,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7774,
									"end": 7781,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 7771,
									"end": 7772,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 7768,
									"end": 7782,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 7760,
									"end": 7968,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 7760,
									"end": 7968,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "153"
								},
								{
									"begin": 7760,
									"end": 7968,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 7853,
									"end": 7862,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 7848,
									"end": 7851,
									"name": "DUP10",
									"source": 6
								},
								{
									"begin": 7844,
									"end": 7863,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 7838,
									"end": 7864,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 7830,
									"end": 7836,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 7823,
									"end": 7865,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 7904,
									"end": 7905,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 7896,
									"end": 7902,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 7892,
									"end": 7906,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 7882,
									"end": 7906,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 7882,
									"end": 7906,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7951,
									"end": 7953,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 7940,
									"end": 7949,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 7936,
									"end": 7954,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 7923,
									"end": 7954,
									"name": "SWAP5",
									"source": 6
								},
								{
									"begin": 7923,
									"end": 7954,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7797,
									"end": 7801,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 7794,
									"end": 7795,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 7790,
									"end": 7802,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 7785,
									"end": 7802,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 7785,
									"end": 7802,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7760,
									"end": 7968,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "151"
								},
								{
									"begin": 7760,
									"end": 7968,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7760,
									"end": 7968,
									"name": "tag",
									"source": 6,
									"value": "153"
								},
								{
									"begin": 7760,
									"end": 7968,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7996,
									"end": 8002,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 7987,
									"end": 7994,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 7984,
									"end": 8003,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 7981,
									"end": 8160,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 7981,
									"end": 8160,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "154"
								},
								{
									"begin": 7981,
									"end": 8160,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 8054,
									"end": 8063,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 8049,
									"end": 8052,
									"name": "DUP10",
									"source": 6
								},
								{
									"begin": 8045,
									"end": 8064,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 8039,
									"end": 8065,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 8097,
									"end": 8145,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "155"
								},
								{
									"begin": 8139,
									"end": 8143,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 8131,
									"end": 8137,
									"name": "DUP10",
									"source": 6
								},
								{
									"begin": 8127,
									"end": 8144,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 8116,
									"end": 8125,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 8097,
									"end": 8145,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "50"
								},
								{
									"begin": 8097,
									"end": 8145,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 8097,
									"end": 8145,
									"name": "tag",
									"source": 6,
									"value": "155"
								},
								{
									"begin": 8097,
									"end": 8145,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8089,
									"end": 8095,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 8082,
									"end": 8146,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 8004,
									"end": 8160,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7981,
									"end": 8160,
									"name": "tag",
									"source": 6,
									"value": "154"
								},
								{
									"begin": 7981,
									"end": 8160,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8206,
									"end": 8207,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 8202,
									"end": 8203,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 8194,
									"end": 8200,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 8190,
									"end": 8204,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 8186,
									"end": 8208,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 8180,
									"end": 8184,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 8173,
									"end": 8209,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 7608,
									"end": 8219,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7608,
									"end": 8219,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7608,
									"end": 8219,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7571,
									"end": 8458,
									"name": "tag",
									"source": 6,
									"value": "146"
								},
								{
									"begin": 7571,
									"end": 8458,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7571,
									"end": 8458,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7161,
									"end": 8464,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7161,
									"end": 8464,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7161,
									"end": 8464,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7069,
									"end": 8464,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7069,
									"end": 8464,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7069,
									"end": 8464,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 8470,
									"end": 8639,
									"name": "tag",
									"source": 6,
									"value": "52"
								},
								{
									"begin": 8470,
									"end": 8639,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8554,
									"end": 8565,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 8588,
									"end": 8594,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 8583,
									"end": 8586,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 8576,
									"end": 8595,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 8628,
									"end": 8632,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 8623,
									"end": 8626,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 8619,
									"end": 8633,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 8604,
									"end": 8633,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 8604,
									"end": 8633,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8470,
									"end": 8639,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 8470,
									"end": 8639,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 8470,
									"end": 8639,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8470,
									"end": 8639,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8470,
									"end": 8639,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 8645,
									"end": 8816,
									"name": "tag",
									"source": 6,
									"value": "53"
								},
								{
									"begin": 8645,
									"end": 8816,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8785,
									"end": 8808,
									"name": "PUSH",
									"source": 6,
									"value": "6D696E7420746F20746865203020616464726573730000000000000000000000"
								},
								{
									"begin": 8781,
									"end": 8782,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 8773,
									"end": 8779,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 8769,
									"end": 8783,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 8762,
									"end": 8809,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 8645,
									"end": 8816,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8645,
									"end": 8816,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 8822,
									"end": 9188,
									"name": "tag",
									"source": 6,
									"value": "54"
								},
								{
									"begin": 8822,
									"end": 9188,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8964,
									"end": 8967,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 8985,
									"end": 9052,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "159"
								},
								{
									"begin": 9049,
									"end": 9051,
									"name": "PUSH",
									"source": 6,
									"value": "15"
								},
								{
									"begin": 9044,
									"end": 9047,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 8985,
									"end": 9052,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "52"
								},
								{
									"begin": 8985,
									"end": 9052,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 8985,
									"end": 9052,
									"name": "tag",
									"source": 6,
									"value": "159"
								},
								{
									"begin": 8985,
									"end": 9052,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8978,
									"end": 9052,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 8978,
									"end": 9052,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9061,
									"end": 9154,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "160"
								},
								{
									"begin": 9150,
									"end": 9153,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 9061,
									"end": 9154,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "53"
								},
								{
									"begin": 9061,
									"end": 9154,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 9061,
									"end": 9154,
									"name": "tag",
									"source": 6,
									"value": "160"
								},
								{
									"begin": 9061,
									"end": 9154,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 9179,
									"end": 9181,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 9174,
									"end": 9177,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 9170,
									"end": 9182,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 9163,
									"end": 9182,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 9163,
									"end": 9182,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8822,
									"end": 9188,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 8822,
									"end": 9188,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 8822,
									"end": 9188,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8822,
									"end": 9188,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 9194,
									"end": 9613,
									"name": "tag",
									"source": 6,
									"value": "15"
								},
								{
									"begin": 9194,
									"end": 9613,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 9360,
									"end": 9364,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 9398,
									"end": 9400,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 9387,
									"end": 9396,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 9383,
									"end": 9401,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 9375,
									"end": 9401,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 9375,
									"end": 9401,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9447,
									"end": 9456,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 9441,
									"end": 9445,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 9437,
									"end": 9457,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 9433,
									"end": 9434,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 9422,
									"end": 9431,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 9418,
									"end": 9435,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 9411,
									"end": 9458,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 9475,
									"end": 9606,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "162"
								},
								{
									"begin": 9601,
									"end": 9605,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 9475,
									"end": 9606,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "54"
								},
								{
									"begin": 9475,
									"end": 9606,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 9475,
									"end": 9606,
									"name": "tag",
									"source": 6,
									"value": "162"
								},
								{
									"begin": 9475,
									"end": 9606,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 9467,
									"end": 9606,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 9467,
									"end": 9606,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9194,
									"end": 9613,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 9194,
									"end": 9613,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 9194,
									"end": 9613,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9194,
									"end": 9613,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 9619,
									"end": 9799,
									"name": "tag",
									"source": 6,
									"value": "55"
								},
								{
									"begin": 9619,
									"end": 9799,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 9667,
									"end": 9744,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 9664,
									"end": 9665,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 9657,
									"end": 9745,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 9764,
									"end": 9768,
									"name": "PUSH",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 9761,
									"end": 9762,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 9754,
									"end": 9769,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 9788,
									"end": 9792,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 9785,
									"end": 9786,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 9778,
									"end": 9793,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 9805,
									"end": 9996,
									"name": "tag",
									"source": 6,
									"value": "17"
								},
								{
									"begin": 9805,
									"end": 9996,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 9845,
									"end": 9848,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 9864,
									"end": 9884,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "165"
								},
								{
									"begin": 9882,
									"end": 9883,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 9864,
									"end": 9884,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 9864,
									"end": 9884,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 9864,
									"end": 9884,
									"name": "tag",
									"source": 6,
									"value": "165"
								},
								{
									"begin": 9864,
									"end": 9884,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 9859,
									"end": 9884,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 9859,
									"end": 9884,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9898,
									"end": 9918,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "166"
								},
								{
									"begin": 9916,
									"end": 9917,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 9898,
									"end": 9918,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 9898,
									"end": 9918,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 9898,
									"end": 9918,
									"name": "tag",
									"source": 6,
									"value": "166"
								},
								{
									"begin": 9898,
									"end": 9918,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 9893,
									"end": 9918,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 9893,
									"end": 9918,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9941,
									"end": 9942,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 9938,
									"end": 9939,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 9934,
									"end": 9943,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 9927,
									"end": 9943,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 9927,
									"end": 9943,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9962,
									"end": 9965,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 9959,
									"end": 9960,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 9956,
									"end": 9966,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 9953,
									"end": 9989,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 9953,
									"end": 9989,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "167"
								},
								{
									"begin": 9953,
									"end": 9989,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 9969,
									"end": 9987,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "168"
								},
								{
									"begin": 9969,
									"end": 9987,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "55"
								},
								{
									"begin": 9969,
									"end": 9987,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 9969,
									"end": 9987,
									"name": "tag",
									"source": 6,
									"value": "168"
								},
								{
									"begin": 9969,
									"end": 9987,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 9953,
									"end": 9989,
									"name": "tag",
									"source": 6,
									"value": "167"
								},
								{
									"begin": 9953,
									"end": 9989,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 9805,
									"end": 9996,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 9805,
									"end": 9996,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 9805,
									"end": 9996,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9805,
									"end": 9996,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9805,
									"end": 9996,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 10002,
									"end": 10120,
									"name": "tag",
									"source": 6,
									"value": "56"
								},
								{
									"begin": 10002,
									"end": 10120,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 10089,
									"end": 10113,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "170"
								},
								{
									"begin": 10107,
									"end": 10112,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 10089,
									"end": 10113,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 10089,
									"end": 10113,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 10089,
									"end": 10113,
									"name": "tag",
									"source": 6,
									"value": "170"
								},
								{
									"begin": 10089,
									"end": 10113,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 10084,
									"end": 10087,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 10077,
									"end": 10114,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 10002,
									"end": 10120,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 10002,
									"end": 10120,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 10002,
									"end": 10120,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 10126,
									"end": 10348,
									"name": "tag",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 10126,
									"end": 10348,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 10219,
									"end": 10223,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 10257,
									"end": 10259,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 10246,
									"end": 10255,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 10242,
									"end": 10260,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 10234,
									"end": 10260,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 10234,
									"end": 10260,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 10270,
									"end": 10341,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "172"
								},
								{
									"begin": 10338,
									"end": 10339,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 10327,
									"end": 10336,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 10323,
									"end": 10340,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 10314,
									"end": 10320,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 10270,
									"end": 10341,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "56"
								},
								{
									"begin": 10270,
									"end": 10341,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 10270,
									"end": 10341,
									"name": "tag",
									"source": 6,
									"value": "172"
								},
								{
									"begin": 10270,
									"end": 10341,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 10126,
									"end": 10348,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 10126,
									"end": 10348,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 10126,
									"end": 10348,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 10126,
									"end": 10348,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 10126,
									"end": 10348,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2379,
									"end": 9549,
									"name": "tag",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 2379,
									"end": 9549,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2379,
									"end": 9549,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2379,
									"end": 9549,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 2379,
									"end": 9549,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2379,
									"end": 9549,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2379,
									"end": 9549,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 2379,
									"end": 9549,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2379,
									"end": 9549,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122057a0b22efca3a3071285b2aeb6d31fca6982271883b7ca508904821d53bb9d6364736f6c634300081a0033",
									".code": [
										{
											"begin": 2379,
											"end": 9549,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 2379,
											"end": 9549,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2379,
											"end": 9549,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2379,
											"end": 9549,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 2379,
											"end": 9549,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2379,
											"end": 9549,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2379,
											"end": 9549,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2379,
											"end": 9549,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2379,
											"end": 9549,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2379,
											"end": 9549,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2379,
											"end": 9549,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2379,
											"end": 9549,
											"name": "tag",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2379,
											"end": 9549,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2379,
											"end": 9549,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2379,
											"end": 9549,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2379,
											"end": 9549,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 2379,
											"end": 9549,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 2379,
											"end": 9549,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 2379,
											"end": 9549,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2379,
											"end": 9549,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2379,
											"end": 9549,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 2379,
											"end": 9549,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 2379,
											"end": 9549,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 2379,
											"end": 9549,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2379,
											"end": 9549,
											"name": "PUSH",
											"source": 5,
											"value": "313CE567"
										},
										{
											"begin": 2379,
											"end": 9549,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 2379,
											"end": 9549,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 2379,
											"end": 9549,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2379,
											"end": 9549,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2379,
											"end": 9549,
											"name": "PUSH",
											"source": 5,
											"value": "313CE567"
										},
										{
											"begin": 2379,
											"end": 9549,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 2379,
											"end": 9549,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 2379,
											"end": 9549,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2379,
											"end": 9549,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2379,
											"end": 9549,
											"name": "PUSH",
											"source": 5,
											"value": "70A08231"
										},
										{
											"begin": 2379,
											"end": 9549,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 2379,
											"end": 9549,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 2379,
											"end": 9549,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2379,
											"end": 9549,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2379,
											"end": 9549,
											"name": "PUSH",
											"source": 5,
											"value": "95D89B41"
										},
										{
											"begin": 2379,
											"end": 9549,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 2379,
											"end": 9549,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 2379,
											"end": 9549,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2379,
											"end": 9549,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2379,
											"end": 9549,
											"name": "PUSH",
											"source": 5,
											"value": "A9059CBB"
										},
										{
											"begin": 2379,
											"end": 9549,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 2379,
											"end": 9549,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 2379,
											"end": 9549,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2379,
											"end": 9549,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2379,
											"end": 9549,
											"name": "PUSH",
											"source": 5,
											"value": "DD62ED3E"
										},
										{
											"begin": 2379,
											"end": 9549,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 2379,
											"end": 9549,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 2379,
											"end": 9549,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2379,
											"end": 9549,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 2379,
											"end": 9549,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2379,
											"end": 9549,
											"name": "tag",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 2379,
											"end": 9549,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2379,
											"end": 9549,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2379,
											"end": 9549,
											"name": "PUSH",
											"source": 5,
											"value": "6FDDE03"
										},
										{
											"begin": 2379,
											"end": 9549,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 2379,
											"end": 9549,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 2379,
											"end": 9549,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2379,
											"end": 9549,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2379,
											"end": 9549,
											"name": "PUSH",
											"source": 5,
											"value": "95EA7B3"
										},
										{
											"begin": 2379,
											"end": 9549,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 2379,
											"end": 9549,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2379,
											"end": 9549,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2379,
											"end": 9549,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2379,
											"end": 9549,
											"name": "PUSH",
											"source": 5,
											"value": "18160DDD"
										},
										{
											"begin": 2379,
											"end": 9549,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 2379,
											"end": 9549,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 2379,
											"end": 9549,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2379,
											"end": 9549,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2379,
											"end": 9549,
											"name": "PUSH",
											"source": 5,
											"value": "23B872DD"
										},
										{
											"begin": 2379,
											"end": 9549,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 2379,
											"end": 9549,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 2379,
											"end": 9549,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2379,
											"end": 9549,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2379,
											"end": 9549,
											"name": "PUSH",
											"source": 5,
											"value": "256FA241"
										},
										{
											"begin": 2379,
											"end": 9549,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 2379,
											"end": 9549,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 2379,
											"end": 9549,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2379,
											"end": 9549,
											"name": "tag",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 2379,
											"end": 9549,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2379,
											"end": 9549,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2379,
											"end": 9549,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2379,
											"end": 9549,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3014,
											"end": 3105,
											"name": "tag",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 3014,
											"end": 3105,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3014,
											"end": 3105,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 3014,
											"end": 3105,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 3014,
											"end": 3105,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3014,
											"end": 3105,
											"name": "tag",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 3014,
											"end": 3105,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3014,
											"end": 3105,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3014,
											"end": 3105,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3014,
											"end": 3105,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 3014,
											"end": 3105,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3014,
											"end": 3105,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3014,
											"end": 3105,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 3014,
											"end": 3105,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3014,
											"end": 3105,
											"name": "tag",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 3014,
											"end": 3105,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3014,
											"end": 3105,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3014,
											"end": 3105,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3014,
											"end": 3105,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3014,
											"end": 3105,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3014,
											"end": 3105,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3014,
											"end": 3105,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3014,
											"end": 3105,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 5103,
											"end": 5302,
											"name": "tag",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5103,
											"end": 5302,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5103,
											"end": 5302,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 5103,
											"end": 5302,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5103,
											"end": 5302,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5103,
											"end": 5302,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 5103,
											"end": 5302,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5103,
											"end": 5302,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5103,
											"end": 5302,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5103,
											"end": 5302,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5103,
											"end": 5302,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 5103,
											"end": 5302,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5103,
											"end": 5302,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5103,
											"end": 5302,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5103,
											"end": 5302,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5103,
											"end": 5302,
											"name": "tag",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 5103,
											"end": 5302,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5103,
											"end": 5302,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 5103,
											"end": 5302,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5103,
											"end": 5302,
											"name": "tag",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 5103,
											"end": 5302,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5103,
											"end": 5302,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5103,
											"end": 5302,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5103,
											"end": 5302,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 5103,
											"end": 5302,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5103,
											"end": 5302,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5103,
											"end": 5302,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 5103,
											"end": 5302,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5103,
											"end": 5302,
											"name": "tag",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 5103,
											"end": 5302,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5103,
											"end": 5302,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5103,
											"end": 5302,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5103,
											"end": 5302,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5103,
											"end": 5302,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5103,
											"end": 5302,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5103,
											"end": 5302,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5103,
											"end": 5302,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 3492,
											"end": 3600,
											"name": "tag",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 3492,
											"end": 3600,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3492,
											"end": 3600,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 3492,
											"end": 3600,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 3492,
											"end": 3600,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3492,
											"end": 3600,
											"name": "tag",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 3492,
											"end": 3600,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3492,
											"end": 3600,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3492,
											"end": 3600,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3492,
											"end": 3600,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 3492,
											"end": 3600,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3492,
											"end": 3600,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3492,
											"end": 3600,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 3492,
											"end": 3600,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3492,
											"end": 3600,
											"name": "tag",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 3492,
											"end": 3600,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3492,
											"end": 3600,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3492,
											"end": 3600,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3492,
											"end": 3600,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3492,
											"end": 3600,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3492,
											"end": 3600,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3492,
											"end": 3600,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3492,
											"end": 3600,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 5701,
											"end": 5994,
											"name": "tag",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 5701,
											"end": 5994,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5701,
											"end": 5994,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 5701,
											"end": 5994,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5701,
											"end": 5994,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5701,
											"end": 5994,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 5701,
											"end": 5994,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5701,
											"end": 5994,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5701,
											"end": 5994,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5701,
											"end": 5994,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5701,
											"end": 5994,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 5701,
											"end": 5994,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5701,
											"end": 5994,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5701,
											"end": 5994,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 5701,
											"end": 5994,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5701,
											"end": 5994,
											"name": "tag",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 5701,
											"end": 5994,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5701,
											"end": 5994,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 5701,
											"end": 5994,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5701,
											"end": 5994,
											"name": "tag",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 5701,
											"end": 5994,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5701,
											"end": 5994,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5701,
											"end": 5994,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5701,
											"end": 5994,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 5701,
											"end": 5994,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5701,
											"end": 5994,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5701,
											"end": 5994,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 5701,
											"end": 5994,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5701,
											"end": 5994,
											"name": "tag",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 5701,
											"end": 5994,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5701,
											"end": 5994,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5701,
											"end": 5994,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5701,
											"end": 5994,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5701,
											"end": 5994,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5701,
											"end": 5994,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5701,
											"end": 5994,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5701,
											"end": 5994,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 7323,
											"end": 7522,
											"name": "tag",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 7323,
											"end": 7522,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7323,
											"end": 7522,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 7323,
											"end": 7522,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 7323,
											"end": 7522,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7323,
											"end": 7522,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 7323,
											"end": 7522,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7323,
											"end": 7522,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7323,
											"end": 7522,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7323,
											"end": 7522,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7323,
											"end": 7522,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 7323,
											"end": 7522,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7323,
											"end": 7522,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7323,
											"end": 7522,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 7323,
											"end": 7522,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7323,
											"end": 7522,
											"name": "tag",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 7323,
											"end": 7522,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7323,
											"end": 7522,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 7323,
											"end": 7522,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7323,
											"end": 7522,
											"name": "tag",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 7323,
											"end": 7522,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7323,
											"end": 7522,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 3343,
											"end": 3427,
											"name": "tag",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 3343,
											"end": 3427,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3343,
											"end": 3427,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 3343,
											"end": 3427,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 3343,
											"end": 3427,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3343,
											"end": 3427,
											"name": "tag",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 3343,
											"end": 3427,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3343,
											"end": 3427,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3343,
											"end": 3427,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3343,
											"end": 3427,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 3343,
											"end": 3427,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3343,
											"end": 3427,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3343,
											"end": 3427,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3343,
											"end": 3427,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3343,
											"end": 3427,
											"name": "tag",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 3343,
											"end": 3427,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3343,
											"end": 3427,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3343,
											"end": 3427,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3343,
											"end": 3427,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3343,
											"end": 3427,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3343,
											"end": 3427,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3343,
											"end": 3427,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3343,
											"end": 3427,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 3757,
											"end": 3884,
											"name": "tag",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 3757,
											"end": 3884,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3757,
											"end": 3884,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 3757,
											"end": 3884,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3757,
											"end": 3884,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3757,
											"end": 3884,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 3757,
											"end": 3884,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3757,
											"end": 3884,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3757,
											"end": 3884,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3757,
											"end": 3884,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3757,
											"end": 3884,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 3757,
											"end": 3884,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3757,
											"end": 3884,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3757,
											"end": 3884,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 3757,
											"end": 3884,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3757,
											"end": 3884,
											"name": "tag",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 3757,
											"end": 3884,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3757,
											"end": 3884,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 3757,
											"end": 3884,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3757,
											"end": 3884,
											"name": "tag",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 3757,
											"end": 3884,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3757,
											"end": 3884,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3757,
											"end": 3884,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3757,
											"end": 3884,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 3757,
											"end": 3884,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3757,
											"end": 3884,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3757,
											"end": 3884,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 3757,
											"end": 3884,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3757,
											"end": 3884,
											"name": "tag",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 3757,
											"end": 3884,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3757,
											"end": 3884,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3757,
											"end": 3884,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3757,
											"end": 3884,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3757,
											"end": 3884,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3757,
											"end": 3884,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3757,
											"end": 3884,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3757,
											"end": 3884,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 3197,
											"end": 3292,
											"name": "tag",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 3197,
											"end": 3292,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3197,
											"end": 3292,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 3197,
											"end": 3292,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 3197,
											"end": 3292,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3197,
											"end": 3292,
											"name": "tag",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 3197,
											"end": 3292,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3197,
											"end": 3292,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3197,
											"end": 3292,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3197,
											"end": 3292,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 3197,
											"end": 3292,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3197,
											"end": 3292,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3197,
											"end": 3292,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 3197,
											"end": 3292,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3197,
											"end": 3292,
											"name": "tag",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 3197,
											"end": 3292,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3197,
											"end": 3292,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3197,
											"end": 3292,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3197,
											"end": 3292,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3197,
											"end": 3292,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3197,
											"end": 3292,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3197,
											"end": 3292,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3197,
											"end": 3292,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 4163,
											"end": 4354,
											"name": "tag",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 4163,
											"end": 4354,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4163,
											"end": 4354,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 4163,
											"end": 4354,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4163,
											"end": 4354,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4163,
											"end": 4354,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 4163,
											"end": 4354,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4163,
											"end": 4354,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4163,
											"end": 4354,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4163,
											"end": 4354,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4163,
											"end": 4354,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 4163,
											"end": 4354,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4163,
											"end": 4354,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4163,
											"end": 4354,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4163,
											"end": 4354,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4163,
											"end": 4354,
											"name": "tag",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 4163,
											"end": 4354,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4163,
											"end": 4354,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 4163,
											"end": 4354,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4163,
											"end": 4354,
											"name": "tag",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 4163,
											"end": 4354,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4163,
											"end": 4354,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4163,
											"end": 4354,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4163,
											"end": 4354,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 4163,
											"end": 4354,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4163,
											"end": 4354,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4163,
											"end": 4354,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 4163,
											"end": 4354,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4163,
											"end": 4354,
											"name": "tag",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 4163,
											"end": 4354,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4163,
											"end": 4354,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4163,
											"end": 4354,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4163,
											"end": 4354,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4163,
											"end": 4354,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4163,
											"end": 4354,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4163,
											"end": 4354,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4163,
											"end": 4354,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 4662,
											"end": 4813,
											"name": "tag",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 4662,
											"end": 4813,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4662,
											"end": 4813,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 4662,
											"end": 4813,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4662,
											"end": 4813,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4662,
											"end": 4813,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 4662,
											"end": 4813,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4662,
											"end": 4813,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4662,
											"end": 4813,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4662,
											"end": 4813,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4662,
											"end": 4813,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 4662,
											"end": 4813,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4662,
											"end": 4813,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4662,
											"end": 4813,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 4662,
											"end": 4813,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4662,
											"end": 4813,
											"name": "tag",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 4662,
											"end": 4813,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4662,
											"end": 4813,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 4662,
											"end": 4813,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4662,
											"end": 4813,
											"name": "tag",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 4662,
											"end": 4813,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4662,
											"end": 4813,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4662,
											"end": 4813,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4662,
											"end": 4813,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 4662,
											"end": 4813,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4662,
											"end": 4813,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4662,
											"end": 4813,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 4662,
											"end": 4813,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4662,
											"end": 4813,
											"name": "tag",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 4662,
											"end": 4813,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4662,
											"end": 4813,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4662,
											"end": 4813,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4662,
											"end": 4813,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4662,
											"end": 4813,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4662,
											"end": 4813,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4662,
											"end": 4813,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4662,
											"end": 4813,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 3014,
											"end": 3105,
											"name": "tag",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 3014,
											"end": 3105,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3059,
											"end": 3072,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 3092,
											"end": 3097,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 3085,
											"end": 3097,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3085,
											"end": 3097,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3085,
											"end": 3097,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 3085,
											"end": 3097,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3085,
											"end": 3097,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 3085,
											"end": 3097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3085,
											"end": 3097,
											"name": "tag",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 3085,
											"end": 3097,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3085,
											"end": 3097,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3085,
											"end": 3097,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 3085,
											"end": 3097,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3085,
											"end": 3097,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3085,
											"end": 3097,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3085,
											"end": 3097,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3085,
											"end": 3097,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 3085,
											"end": 3097,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 3085,
											"end": 3097,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3085,
											"end": 3097,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3085,
											"end": 3097,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3085,
											"end": 3097,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3085,
											"end": 3097,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3085,
											"end": 3097,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3085,
											"end": 3097,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3085,
											"end": 3097,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3085,
											"end": 3097,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3085,
											"end": 3097,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3085,
											"end": 3097,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3085,
											"end": 3097,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3085,
											"end": 3097,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3085,
											"end": 3097,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3085,
											"end": 3097,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3085,
											"end": 3097,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3085,
											"end": 3097,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3085,
											"end": 3097,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3085,
											"end": 3097,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3085,
											"end": 3097,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3085,
											"end": 3097,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3085,
											"end": 3097,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 3085,
											"end": 3097,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3085,
											"end": 3097,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 3085,
											"end": 3097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3085,
											"end": 3097,
											"name": "tag",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 3085,
											"end": 3097,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3085,
											"end": 3097,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3085,
											"end": 3097,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3085,
											"end": 3097,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 3085,
											"end": 3097,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3085,
											"end": 3097,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3085,
											"end": 3097,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 3085,
											"end": 3097,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 3085,
											"end": 3097,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 3085,
											"end": 3097,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3085,
											"end": 3097,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 3085,
											"end": 3097,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3085,
											"end": 3097,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3085,
											"end": 3097,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3085,
											"end": 3097,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 3085,
											"end": 3097,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 3085,
											"end": 3097,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3085,
											"end": 3097,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3085,
											"end": 3097,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3085,
											"end": 3097,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3085,
											"end": 3097,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3085,
											"end": 3097,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3085,
											"end": 3097,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 3085,
											"end": 3097,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3085,
											"end": 3097,
											"name": "tag",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 3085,
											"end": 3097,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3085,
											"end": 3097,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3085,
											"end": 3097,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3085,
											"end": 3097,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3085,
											"end": 3097,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3085,
											"end": 3097,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3085,
											"end": 3097,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3085,
											"end": 3097,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3085,
											"end": 3097,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3085,
											"end": 3097,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3085,
											"end": 3097,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3085,
											"end": 3097,
											"name": "tag",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 3085,
											"end": 3097,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3085,
											"end": 3097,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3085,
											"end": 3097,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3085,
											"end": 3097,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3085,
											"end": 3097,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3085,
											"end": 3097,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3085,
											"end": 3097,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 3085,
											"end": 3097,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3085,
											"end": 3097,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3085,
											"end": 3097,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3085,
											"end": 3097,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3085,
											"end": 3097,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3085,
											"end": 3097,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3085,
											"end": 3097,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 3085,
											"end": 3097,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 3085,
											"end": 3097,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3085,
											"end": 3097,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3085,
											"end": 3097,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3085,
											"end": 3097,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3085,
											"end": 3097,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 3085,
											"end": 3097,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3085,
											"end": 3097,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3085,
											"end": 3097,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3085,
											"end": 3097,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3085,
											"end": 3097,
											"name": "tag",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 3085,
											"end": 3097,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3085,
											"end": 3097,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3085,
											"end": 3097,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3085,
											"end": 3097,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3085,
											"end": 3097,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3085,
											"end": 3097,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3085,
											"end": 3097,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3085,
											"end": 3097,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3014,
											"end": 3105,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3014,
											"end": 3105,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5103,
											"end": 5302,
											"name": "tag",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 5103,
											"end": 5302,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5186,
											"end": 5190,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5203,
											"end": 5216,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5219,
											"end": 5229,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 5203,
											"end": 5229,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5203,
											"end": 5229,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5240,
											"end": 5272,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 5249,
											"end": 5254,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5256,
											"end": 5263,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5265,
											"end": 5271,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5240,
											"end": 5248,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 5240,
											"end": 5272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5240,
											"end": 5272,
											"name": "tag",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 5240,
											"end": 5272,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5290,
											"end": 5294,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 5283,
											"end": 5294,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5283,
											"end": 5294,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5283,
											"end": 5294,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5103,
											"end": 5302,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5103,
											"end": 5302,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5103,
											"end": 5302,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5103,
											"end": 5302,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5103,
											"end": 5302,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3492,
											"end": 3600,
											"name": "tag",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 3492,
											"end": 3600,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3553,
											"end": 3560,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3580,
											"end": 3592,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 3580,
											"end": 3592,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3573,
											"end": 3592,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3573,
											"end": 3592,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3492,
											"end": 3600,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3492,
											"end": 3600,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5701,
											"end": 5994,
											"name": "tag",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 5701,
											"end": 5994,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5832,
											"end": 5836,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5849,
											"end": 5864,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5867,
											"end": 5877,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 5849,
											"end": 5877,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5849,
											"end": 5877,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5888,
											"end": 5926,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 5904,
											"end": 5908,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5910,
											"end": 5917,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5919,
											"end": 5925,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5888,
											"end": 5903,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 5888,
											"end": 5926,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5888,
											"end": 5926,
											"name": "tag",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 5888,
											"end": 5926,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5937,
											"end": 5964,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 5947,
											"end": 5951,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5953,
											"end": 5955,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5957,
											"end": 5963,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5937,
											"end": 5946,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 5937,
											"end": 5964,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5937,
											"end": 5964,
											"name": "tag",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 5937,
											"end": 5964,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5982,
											"end": 5986,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 5975,
											"end": 5986,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5975,
											"end": 5986,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5975,
											"end": 5986,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5701,
											"end": 5994,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 5701,
											"end": 5994,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5701,
											"end": 5994,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5701,
											"end": 5994,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5701,
											"end": 5994,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5701,
											"end": 5994,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7323,
											"end": 7522,
											"name": "tag",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 7323,
											"end": 7522,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7417,
											"end": 7426,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7412,
											"end": 7515,
											"name": "tag",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 7412,
											"end": 7515,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7436,
											"end": 7446,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7436,
											"end": 7453,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7432,
											"end": 7433,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7432,
											"end": 7453,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 7412,
											"end": 7515,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7412,
											"end": 7515,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 7412,
											"end": 7515,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7475,
											"end": 7503,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 7481,
											"end": 7491,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7492,
											"end": 7493,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7481,
											"end": 7494,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7481,
											"end": 7494,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7481,
											"end": 7494,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7481,
											"end": 7494,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 7481,
											"end": 7494,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 7481,
											"end": 7494,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7481,
											"end": 7494,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 7481,
											"end": 7494,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 7481,
											"end": 7494,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7481,
											"end": 7494,
											"name": "tag",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 7481,
											"end": 7494,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7481,
											"end": 7494,
											"name": "tag",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 7481,
											"end": 7494,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7481,
											"end": 7494,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7481,
											"end": 7494,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 7481,
											"end": 7494,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7481,
											"end": 7494,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7481,
											"end": 7494,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7481,
											"end": 7494,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7496,
											"end": 7502,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7475,
											"end": 7480,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 7475,
											"end": 7503,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7475,
											"end": 7503,
											"name": "tag",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 7475,
											"end": 7503,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7455,
											"end": 7458,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7455,
											"end": 7458,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7455,
											"end": 7458,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 7455,
											"end": 7458,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7455,
											"end": 7458,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7455,
											"end": 7458,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7455,
											"end": 7458,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7412,
											"end": 7515,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 7412,
											"end": 7515,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7412,
											"end": 7515,
											"name": "tag",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 7412,
											"end": 7515,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7412,
											"end": 7515,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7323,
											"end": 7522,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7323,
											"end": 7522,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7323,
											"end": 7522,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3343,
											"end": 3427,
											"name": "tag",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 3343,
											"end": 3427,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3392,
											"end": 3397,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3417,
											"end": 3419,
											"name": "PUSH",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 3410,
											"end": 3419,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3410,
											"end": 3419,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3343,
											"end": 3427,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3343,
											"end": 3427,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3757,
											"end": 3884,
											"name": "tag",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 3757,
											"end": 3884,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3831,
											"end": 3838,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3858,
											"end": 3867,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3858,
											"end": 3876,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3868,
											"end": 3875,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3858,
											"end": 3876,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3858,
											"end": 3876,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3858,
											"end": 3876,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3858,
											"end": 3876,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3858,
											"end": 3876,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3858,
											"end": 3876,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3858,
											"end": 3876,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3858,
											"end": 3876,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3858,
											"end": 3876,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3858,
											"end": 3876,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3858,
											"end": 3876,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3858,
											"end": 3876,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3858,
											"end": 3876,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3858,
											"end": 3876,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3858,
											"end": 3876,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3858,
											"end": 3876,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3851,
											"end": 3876,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3851,
											"end": 3876,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3757,
											"end": 3884,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3757,
											"end": 3884,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3757,
											"end": 3884,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3757,
											"end": 3884,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3197,
											"end": 3292,
											"name": "tag",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 3197,
											"end": 3292,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3244,
											"end": 3257,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 3277,
											"end": 3284,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3270,
											"end": 3284,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3270,
											"end": 3284,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3270,
											"end": 3284,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 3270,
											"end": 3284,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3270,
											"end": 3284,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 3270,
											"end": 3284,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3270,
											"end": 3284,
											"name": "tag",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 3270,
											"end": 3284,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3270,
											"end": 3284,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3270,
											"end": 3284,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 3270,
											"end": 3284,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3270,
											"end": 3284,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3270,
											"end": 3284,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3270,
											"end": 3284,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3270,
											"end": 3284,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 3270,
											"end": 3284,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 3270,
											"end": 3284,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3270,
											"end": 3284,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3270,
											"end": 3284,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3270,
											"end": 3284,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3270,
											"end": 3284,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3270,
											"end": 3284,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3270,
											"end": 3284,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3270,
											"end": 3284,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3270,
											"end": 3284,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3270,
											"end": 3284,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3270,
											"end": 3284,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3270,
											"end": 3284,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3270,
											"end": 3284,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3270,
											"end": 3284,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3270,
											"end": 3284,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3270,
											"end": 3284,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3270,
											"end": 3284,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3270,
											"end": 3284,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3270,
											"end": 3284,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3270,
											"end": 3284,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3270,
											"end": 3284,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3270,
											"end": 3284,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 3270,
											"end": 3284,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3270,
											"end": 3284,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 3270,
											"end": 3284,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3270,
											"end": 3284,
											"name": "tag",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 3270,
											"end": 3284,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3270,
											"end": 3284,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3270,
											"end": 3284,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3270,
											"end": 3284,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 3270,
											"end": 3284,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3270,
											"end": 3284,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3270,
											"end": 3284,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 3270,
											"end": 3284,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 3270,
											"end": 3284,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 3270,
											"end": 3284,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3270,
											"end": 3284,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 3270,
											"end": 3284,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3270,
											"end": 3284,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3270,
											"end": 3284,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3270,
											"end": 3284,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 3270,
											"end": 3284,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 3270,
											"end": 3284,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3270,
											"end": 3284,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3270,
											"end": 3284,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3270,
											"end": 3284,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3270,
											"end": 3284,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3270,
											"end": 3284,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3270,
											"end": 3284,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 3270,
											"end": 3284,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3270,
											"end": 3284,
											"name": "tag",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 3270,
											"end": 3284,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3270,
											"end": 3284,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3270,
											"end": 3284,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3270,
											"end": 3284,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3270,
											"end": 3284,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3270,
											"end": 3284,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3270,
											"end": 3284,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3270,
											"end": 3284,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3270,
											"end": 3284,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3270,
											"end": 3284,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3270,
											"end": 3284,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3270,
											"end": 3284,
											"name": "tag",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 3270,
											"end": 3284,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3270,
											"end": 3284,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3270,
											"end": 3284,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3270,
											"end": 3284,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3270,
											"end": 3284,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3270,
											"end": 3284,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3270,
											"end": 3284,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 3270,
											"end": 3284,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3270,
											"end": 3284,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3270,
											"end": 3284,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3270,
											"end": 3284,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3270,
											"end": 3284,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3270,
											"end": 3284,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3270,
											"end": 3284,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 3270,
											"end": 3284,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 3270,
											"end": 3284,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3270,
											"end": 3284,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3270,
											"end": 3284,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3270,
											"end": 3284,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3270,
											"end": 3284,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 3270,
											"end": 3284,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3270,
											"end": 3284,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3270,
											"end": 3284,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3270,
											"end": 3284,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3270,
											"end": 3284,
											"name": "tag",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 3270,
											"end": 3284,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3270,
											"end": 3284,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3270,
											"end": 3284,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3270,
											"end": 3284,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3270,
											"end": 3284,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3270,
											"end": 3284,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3270,
											"end": 3284,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3270,
											"end": 3284,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3197,
											"end": 3292,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3197,
											"end": 3292,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4163,
											"end": 4354,
											"name": "tag",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 4163,
											"end": 4354,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4242,
											"end": 4246,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4259,
											"end": 4272,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4275,
											"end": 4285,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 4259,
											"end": 4285,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4259,
											"end": 4285,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4296,
											"end": 4324,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 4306,
											"end": 4311,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4313,
											"end": 4315,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4317,
											"end": 4323,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4296,
											"end": 4305,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 4296,
											"end": 4324,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4296,
											"end": 4324,
											"name": "tag",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 4296,
											"end": 4324,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4342,
											"end": 4346,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 4335,
											"end": 4346,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4335,
											"end": 4346,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4335,
											"end": 4346,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4163,
											"end": 4354,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4163,
											"end": 4354,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4163,
											"end": 4354,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4163,
											"end": 4354,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4163,
											"end": 4354,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4662,
											"end": 4813,
											"name": "tag",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 4662,
											"end": 4813,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4751,
											"end": 4758,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4778,
											"end": 4789,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 4778,
											"end": 4796,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4790,
											"end": 4795,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4778,
											"end": 4796,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4778,
											"end": 4796,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4778,
											"end": 4796,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4778,
											"end": 4796,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4778,
											"end": 4796,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4778,
											"end": 4796,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4778,
											"end": 4796,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4778,
											"end": 4796,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4778,
											"end": 4796,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4778,
											"end": 4796,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4778,
											"end": 4796,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4778,
											"end": 4796,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4778,
											"end": 4796,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4778,
											"end": 4796,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4778,
											"end": 4796,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 4778,
											"end": 4805,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4797,
											"end": 4804,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4778,
											"end": 4805,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4778,
											"end": 4805,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4778,
											"end": 4805,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4778,
											"end": 4805,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4778,
											"end": 4805,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4778,
											"end": 4805,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4778,
											"end": 4805,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4778,
											"end": 4805,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4778,
											"end": 4805,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4778,
											"end": 4805,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4778,
											"end": 4805,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4778,
											"end": 4805,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4778,
											"end": 4805,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4778,
											"end": 4805,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4778,
											"end": 4805,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 4778,
											"end": 4805,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4771,
											"end": 4805,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4771,
											"end": 4805,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4662,
											"end": 4813,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4662,
											"end": 4813,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4662,
											"end": 4813,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4662,
											"end": 4813,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4662,
											"end": 4813,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8535,
											"end": 8895,
											"name": "tag",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 8535,
											"end": 8895,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8688,
											"end": 8689,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8671,
											"end": 8690,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8671,
											"end": 8690,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8671,
											"end": 8676,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8671,
											"end": 8690,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8671,
											"end": 8690,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8671,
											"end": 8690,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 8663,
											"end": 8721,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 8663,
											"end": 8721,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 8663,
											"end": 8721,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 8663,
											"end": 8721,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 8663,
											"end": 8721,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8663,
											"end": 8721,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8663,
											"end": 8721,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8663,
											"end": 8721,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 8663,
											"end": 8721,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8663,
											"end": 8721,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 8663,
											"end": 8721,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8663,
											"end": 8721,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 8663,
											"end": 8721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8663,
											"end": 8721,
											"name": "tag",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 8663,
											"end": 8721,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8663,
											"end": 8721,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 8663,
											"end": 8721,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 8663,
											"end": 8721,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 8663,
											"end": 8721,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8663,
											"end": 8721,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 8663,
											"end": 8721,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8663,
											"end": 8721,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 8663,
											"end": 8721,
											"name": "tag",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 8663,
											"end": 8721,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8759,
											"end": 8760,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8740,
											"end": 8761,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8740,
											"end": 8761,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8740,
											"end": 8747,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8740,
											"end": 8761,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8740,
											"end": 8761,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8740,
											"end": 8761,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 8732,
											"end": 8790,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 8732,
											"end": 8790,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 8732,
											"end": 8790,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 8732,
											"end": 8790,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 8732,
											"end": 8790,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8732,
											"end": 8790,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8732,
											"end": 8790,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8732,
											"end": 8790,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 8732,
											"end": 8790,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8732,
											"end": 8790,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 8732,
											"end": 8790,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8732,
											"end": 8790,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 8732,
											"end": 8790,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8732,
											"end": 8790,
											"name": "tag",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 8732,
											"end": 8790,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8732,
											"end": 8790,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 8732,
											"end": 8790,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 8732,
											"end": 8790,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 8732,
											"end": 8790,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8732,
											"end": 8790,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 8732,
											"end": 8790,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8732,
											"end": 8790,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 8732,
											"end": 8790,
											"name": "tag",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 8732,
											"end": 8790,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8833,
											"end": 8839,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 8803,
											"end": 8814,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 8803,
											"end": 8821,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8815,
											"end": 8820,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 8803,
											"end": 8821,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8803,
											"end": 8821,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8803,
											"end": 8821,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8803,
											"end": 8821,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8803,
											"end": 8821,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8803,
											"end": 8821,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8803,
											"end": 8821,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8803,
											"end": 8821,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8803,
											"end": 8821,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8803,
											"end": 8821,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8803,
											"end": 8821,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8803,
											"end": 8821,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8803,
											"end": 8821,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8803,
											"end": 8821,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8803,
											"end": 8821,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 8803,
											"end": 8830,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8822,
											"end": 8829,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 8803,
											"end": 8830,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8803,
											"end": 8830,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8803,
											"end": 8830,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8803,
											"end": 8830,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8803,
											"end": 8830,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8803,
											"end": 8830,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8803,
											"end": 8830,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8803,
											"end": 8830,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8803,
											"end": 8830,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8803,
											"end": 8830,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8803,
											"end": 8830,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8803,
											"end": 8830,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8803,
											"end": 8830,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8803,
											"end": 8830,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8803,
											"end": 8830,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 8803,
											"end": 8839,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8803,
											"end": 8839,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8803,
											"end": 8839,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 8803,
											"end": 8839,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8871,
											"end": 8878,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8855,
											"end": 8887,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8855,
											"end": 8887,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8864,
											"end": 8869,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8855,
											"end": 8887,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8855,
											"end": 8887,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8855,
											"end": 8887,
											"name": "PUSH",
											"source": 5,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 8880,
											"end": 8886,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8855,
											"end": 8887,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 8855,
											"end": 8887,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 8855,
											"end": 8887,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 8855,
											"end": 8887,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8855,
											"end": 8887,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8855,
											"end": 8887,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 8855,
											"end": 8887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8855,
											"end": 8887,
											"name": "tag",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 8855,
											"end": 8887,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8855,
											"end": 8887,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 8855,
											"end": 8887,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 8855,
											"end": 8887,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 8855,
											"end": 8887,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8855,
											"end": 8887,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 8855,
											"end": 8887,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8855,
											"end": 8887,
											"name": "LOG3",
											"source": 5
										},
										{
											"begin": 8535,
											"end": 8895,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8535,
											"end": 8895,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8535,
											"end": 8895,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8535,
											"end": 8895,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9100,
											"end": 9546,
											"name": "tag",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 9100,
											"end": 9546,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9235,
											"end": 9259,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9262,
											"end": 9287,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 9272,
											"end": 9277,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 9279,
											"end": 9286,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 9262,
											"end": 9271,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 9262,
											"end": 9287,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9262,
											"end": 9287,
											"name": "tag",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 9262,
											"end": 9287,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9235,
											"end": 9287,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9235,
											"end": 9287,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9322,
											"end": 9339,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9302,
											"end": 9318,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9302,
											"end": 9339,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 9298,
											"end": 9539,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 9298,
											"end": 9539,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 9384,
											"end": 9390,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9364,
											"end": 9380,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9364,
											"end": 9390,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 9364,
											"end": 9390,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 9356,
											"end": 9417,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 9356,
											"end": 9417,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 9356,
											"end": 9417,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9356,
											"end": 9417,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 9356,
											"end": 9417,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9356,
											"end": 9417,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9356,
											"end": 9417,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9356,
											"end": 9417,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 9356,
											"end": 9417,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9356,
											"end": 9417,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 9356,
											"end": 9417,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9356,
											"end": 9417,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 9356,
											"end": 9417,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9356,
											"end": 9417,
											"name": "tag",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 9356,
											"end": 9417,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9356,
											"end": 9417,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9356,
											"end": 9417,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 9356,
											"end": 9417,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9356,
											"end": 9417,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9356,
											"end": 9417,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 9356,
											"end": 9417,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9356,
											"end": 9417,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 9356,
											"end": 9417,
											"name": "tag",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 9356,
											"end": 9417,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9461,
											"end": 9512,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 9470,
											"end": 9475,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 9477,
											"end": 9484,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 9505,
											"end": 9511,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 9486,
											"end": 9502,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 9486,
											"end": 9511,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 9461,
											"end": 9469,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 9461,
											"end": 9512,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9461,
											"end": 9512,
											"name": "tag",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 9461,
											"end": 9512,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9298,
											"end": 9539,
											"name": "tag",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 9298,
											"end": 9539,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9224,
											"end": 9546,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9100,
											"end": 9546,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9100,
											"end": 9546,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9100,
											"end": 9546,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9100,
											"end": 9546,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6399,
											"end": 7088,
											"name": "tag",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 6399,
											"end": 7088,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6546,
											"end": 6547,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6530,
											"end": 6548,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6530,
											"end": 6548,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6530,
											"end": 6534,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6530,
											"end": 6548,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6530,
											"end": 6548,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6530,
											"end": 6548,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6522,
											"end": 6576,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 6522,
											"end": 6576,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6522,
											"end": 6576,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6522,
											"end": 6576,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6522,
											"end": 6576,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6522,
											"end": 6576,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6522,
											"end": 6576,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6522,
											"end": 6576,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 6522,
											"end": 6576,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6522,
											"end": 6576,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 6522,
											"end": 6576,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6522,
											"end": 6576,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 6522,
											"end": 6576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6522,
											"end": 6576,
											"name": "tag",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 6522,
											"end": 6576,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6522,
											"end": 6576,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6522,
											"end": 6576,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6522,
											"end": 6576,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6522,
											"end": 6576,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6522,
											"end": 6576,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6522,
											"end": 6576,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6522,
											"end": 6576,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 6522,
											"end": 6576,
											"name": "tag",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 6522,
											"end": 6576,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6609,
											"end": 6610,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6595,
											"end": 6611,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6595,
											"end": 6611,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6595,
											"end": 6597,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6595,
											"end": 6611,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6595,
											"end": 6611,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6595,
											"end": 6611,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6587,
											"end": 6637,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 6587,
											"end": 6637,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6587,
											"end": 6637,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6587,
											"end": 6637,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6587,
											"end": 6637,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6587,
											"end": 6637,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6587,
											"end": 6637,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6587,
											"end": 6637,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 6587,
											"end": 6637,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6587,
											"end": 6637,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 6587,
											"end": 6637,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6587,
											"end": 6637,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 6587,
											"end": 6637,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6587,
											"end": 6637,
											"name": "tag",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 6587,
											"end": 6637,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6587,
											"end": 6637,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6587,
											"end": 6637,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6587,
											"end": 6637,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6587,
											"end": 6637,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6587,
											"end": 6637,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6587,
											"end": 6637,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6587,
											"end": 6637,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 6587,
											"end": 6637,
											"name": "tag",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 6587,
											"end": 6637,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6650,
											"end": 6669,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6672,
											"end": 6681,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6672,
											"end": 6687,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6682,
											"end": 6686,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 6672,
											"end": 6687,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6672,
											"end": 6687,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6672,
											"end": 6687,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6672,
											"end": 6687,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6672,
											"end": 6687,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6672,
											"end": 6687,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6672,
											"end": 6687,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6672,
											"end": 6687,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6672,
											"end": 6687,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6672,
											"end": 6687,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6672,
											"end": 6687,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6672,
											"end": 6687,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6672,
											"end": 6687,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6672,
											"end": 6687,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6672,
											"end": 6687,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 6672,
											"end": 6687,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6650,
											"end": 6687,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6650,
											"end": 6687,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6721,
											"end": 6727,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6706,
											"end": 6717,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6706,
											"end": 6727,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 6706,
											"end": 6727,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6698,
											"end": 6748,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 6698,
											"end": 6748,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6698,
											"end": 6748,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6698,
											"end": 6748,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6698,
											"end": 6748,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6698,
											"end": 6748,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6698,
											"end": 6748,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6698,
											"end": 6748,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 6698,
											"end": 6748,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6698,
											"end": 6748,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 6698,
											"end": 6748,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6698,
											"end": 6748,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 6698,
											"end": 6748,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6698,
											"end": 6748,
											"name": "tag",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 6698,
											"end": 6748,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6698,
											"end": 6748,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6698,
											"end": 6748,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6698,
											"end": 6748,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6698,
											"end": 6748,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6698,
											"end": 6748,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6698,
											"end": 6748,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6698,
											"end": 6748,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 6698,
											"end": 6748,
											"name": "tag",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 6698,
											"end": 6748,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6816,
											"end": 6822,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6802,
											"end": 6813,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6802,
											"end": 6822,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6784,
											"end": 6793,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6784,
											"end": 6799,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6794,
											"end": 6798,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 6784,
											"end": 6799,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6784,
											"end": 6799,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6784,
											"end": 6799,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6784,
											"end": 6799,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6784,
											"end": 6799,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6784,
											"end": 6799,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6784,
											"end": 6799,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6784,
											"end": 6799,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6784,
											"end": 6799,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6784,
											"end": 6799,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6784,
											"end": 6799,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6784,
											"end": 6799,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6784,
											"end": 6799,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6784,
											"end": 6799,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6784,
											"end": 6799,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 6784,
											"end": 6822,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6784,
											"end": 6822,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6784,
											"end": 6822,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 6784,
											"end": 6822,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7019,
											"end": 7025,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7002,
											"end": 7011,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7012,
											"end": 7014,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7002,
											"end": 7025,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7002,
											"end": 7025,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7002,
											"end": 7025,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 7002,
											"end": 7025,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7002,
											"end": 7025,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7002,
											"end": 7025,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7002,
											"end": 7025,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7002,
											"end": 7025,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7002,
											"end": 7025,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7002,
											"end": 7025,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 7002,
											"end": 7025,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7069,
											"end": 7071,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7054,
											"end": 7080,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7054,
											"end": 7080,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7063,
											"end": 7067,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 7054,
											"end": 7080,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7054,
											"end": 7080,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7054,
											"end": 7080,
											"name": "PUSH",
											"source": 5,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7073,
											"end": 7079,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 7054,
											"end": 7080,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7054,
											"end": 7080,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7054,
											"end": 7080,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 7054,
											"end": 7080,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7054,
											"end": 7080,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7054,
											"end": 7080,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 7054,
											"end": 7080,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7054,
											"end": 7080,
											"name": "tag",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 7054,
											"end": 7080,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7054,
											"end": 7080,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7054,
											"end": 7080,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7054,
											"end": 7080,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7054,
											"end": 7080,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7054,
											"end": 7080,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7054,
											"end": 7080,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7054,
											"end": 7080,
											"name": "LOG3",
											"source": 5
										},
										{
											"begin": 6511,
											"end": 7088,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6399,
											"end": 7088,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6399,
											"end": 7088,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6399,
											"end": 7088,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6399,
											"end": 7088,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7810,
											"end": 8225,
											"name": "tag",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 7810,
											"end": 8225,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7913,
											"end": 7914,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7894,
											"end": 7915,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7894,
											"end": 7915,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7894,
											"end": 7901,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7894,
											"end": 7915,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7894,
											"end": 7915,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7894,
											"end": 7915,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7886,
											"end": 7941,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 7886,
											"end": 7941,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7886,
											"end": 7941,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7886,
											"end": 7941,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7886,
											"end": 7941,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7886,
											"end": 7941,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7886,
											"end": 7941,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7886,
											"end": 7941,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 7886,
											"end": 7941,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7886,
											"end": 7941,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 7886,
											"end": 7941,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7886,
											"end": 7941,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 7886,
											"end": 7941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7886,
											"end": 7941,
											"name": "tag",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 7886,
											"end": 7941,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7886,
											"end": 7941,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7886,
											"end": 7941,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7886,
											"end": 7941,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7886,
											"end": 7941,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7886,
											"end": 7941,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7886,
											"end": 7941,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7886,
											"end": 7941,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 7886,
											"end": 7941,
											"name": "tag",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 7886,
											"end": 7941,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7970,
											"end": 7976,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7954,
											"end": 7966,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 7954,
											"end": 7966,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7954,
											"end": 7976,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7954,
											"end": 7976,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7954,
											"end": 7976,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 7954,
											"end": 7976,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 7954,
											"end": 7976,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7954,
											"end": 7976,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7954,
											"end": 7976,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 7954,
											"end": 7976,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7954,
											"end": 7976,
											"name": "tag",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 7954,
											"end": 7976,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7954,
											"end": 7976,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7954,
											"end": 7976,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7954,
											"end": 7976,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7954,
											"end": 7976,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7954,
											"end": 7976,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7954,
											"end": 7976,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 7954,
											"end": 7976,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8147,
											"end": 8153,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 8125,
											"end": 8134,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8125,
											"end": 8143,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 8135,
											"end": 8142,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 8125,
											"end": 8143,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8125,
											"end": 8143,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8125,
											"end": 8143,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8125,
											"end": 8143,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8125,
											"end": 8143,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8125,
											"end": 8143,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8125,
											"end": 8143,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8125,
											"end": 8143,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8125,
											"end": 8143,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8125,
											"end": 8143,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8125,
											"end": 8143,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8125,
											"end": 8143,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8125,
											"end": 8143,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8125,
											"end": 8143,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8125,
											"end": 8143,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 8125,
											"end": 8143,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8125,
											"end": 8153,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8125,
											"end": 8153,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8125,
											"end": 8153,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 8125,
											"end": 8153,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8125,
											"end": 8153,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 8125,
											"end": 8153,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8125,
											"end": 8153,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8125,
											"end": 8153,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8125,
											"end": 8153,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8125,
											"end": 8153,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 8125,
											"end": 8153,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8201,
											"end": 8208,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8180,
											"end": 8217,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8180,
											"end": 8217,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8197,
											"end": 8198,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8180,
											"end": 8217,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8180,
											"end": 8217,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8180,
											"end": 8217,
											"name": "PUSH",
											"source": 5,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 8210,
											"end": 8216,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8180,
											"end": 8217,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 8180,
											"end": 8217,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 8180,
											"end": 8217,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 8180,
											"end": 8217,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8180,
											"end": 8217,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8180,
											"end": 8217,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 8180,
											"end": 8217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8180,
											"end": 8217,
											"name": "tag",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 8180,
											"end": 8217,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8180,
											"end": 8217,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 8180,
											"end": 8217,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 8180,
											"end": 8217,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 8180,
											"end": 8217,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8180,
											"end": 8217,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 8180,
											"end": 8217,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8180,
											"end": 8217,
											"name": "LOG3",
											"source": 5
										},
										{
											"begin": 7810,
											"end": 8225,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7810,
											"end": 8225,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7810,
											"end": 8225,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 287,
											"end": 426,
											"name": "tag",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 287,
											"end": 426,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 376,
											"end": 382,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 371,
											"end": 374,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 366,
											"end": 369,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 360,
											"end": 383,
											"name": "MCOPY",
											"source": 6
										},
										{
											"begin": 417,
											"end": 418,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 408,
											"end": 414,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 403,
											"end": 406,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 399,
											"end": 415,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 392,
											"end": 419,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 287,
											"end": 426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 432,
											"end": 534,
											"name": "tag",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 432,
											"end": 534,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 473,
											"end": 479,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 524,
											"end": 526,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 520,
											"end": 527,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 515,
											"end": 517,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 504,
											"end": 518,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 500,
											"end": 528,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 490,
											"end": 528,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 490,
											"end": 528,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 432,
											"end": 534,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 432,
											"end": 534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 540,
											"end": 917,
											"name": "tag",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 540,
											"end": 917,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 628,
											"end": 631,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 689,
											"end": 694,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 656,
											"end": 695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 656,
											"end": 695,
											"name": "tag",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 775,
											"end": 781,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 770,
											"end": 773,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 711,
											"end": 782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 711,
											"end": 782,
											"name": "tag",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 711,
											"end": 782,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 704,
											"end": 782,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 704,
											"end": 782,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 849,
											"end": 855,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 844,
											"end": 847,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 837,
											"end": 841,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 830,
											"end": 835,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 826,
											"end": 842,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 791,
											"end": 856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 791,
											"end": 856,
											"name": "tag",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 791,
											"end": 856,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 903,
											"end": 909,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 881,
											"end": 910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 881,
											"end": 910,
											"name": "tag",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 881,
											"end": 910,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 876,
											"end": 879,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 872,
											"end": 911,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 865,
											"end": 911,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 865,
											"end": 911,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 632,
											"end": 917,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 540,
											"end": 917,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "tag",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1036,
											"end": 1040,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1074,
											"end": 1076,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1063,
											"end": 1072,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1059,
											"end": 1077,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1123,
											"end": 1132,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1117,
											"end": 1121,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1113,
											"end": 1133,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1109,
											"end": 1110,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1098,
											"end": 1107,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1094,
											"end": 1111,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1087,
											"end": 1134,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1215,
											"end": 1221,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 1151,
											"end": 1229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "tag",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 923,
											"end": 1236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1242,
											"end": 1317,
											"name": "tag",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 1242,
											"end": 1317,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1275,
											"end": 1281,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1308,
											"end": 1310,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1302,
											"end": 1311,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1292,
											"end": 1311,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1292,
											"end": 1311,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1242,
											"end": 1317,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1242,
											"end": 1317,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "tag",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1432,
											"end": 1433,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1429,
											"end": 1430,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1422,
											"end": 1434,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1446,
											"end": 1563,
											"name": "tag",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 1446,
											"end": 1563,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1555,
											"end": 1556,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1552,
											"end": 1553,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1545,
											"end": 1557,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "tag",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1606,
											"end": 1613,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1646,
											"end": 1688,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1639,
											"end": 1644,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1635,
											"end": 1689,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1569,
											"end": 1695,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "tag",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1738,
											"end": 1745,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 1785,
											"end": 1790,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 1767,
											"end": 1791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "tag",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1701,
											"end": 1797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "tag",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 1894,
											"end": 1899,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 1876,
											"end": 1900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "tag",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1869,
											"end": 1874,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1866,
											"end": 1901,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1915,
											"end": 1916,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1912,
											"end": 1913,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1905,
											"end": 1917,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "tag",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1803,
											"end": 1925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "tag",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1977,
											"end": 1982,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2015,
											"end": 2021,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2002,
											"end": 2022,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 2058,
											"end": 2063,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 2031,
											"end": 2064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "tag",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1931,
											"end": 2070,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "tag",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2113,
											"end": 2120,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2147,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2076,
											"end": 2153,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "tag",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 2250,
											"end": 2255,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 2232,
											"end": 2256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "tag",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2225,
											"end": 2230,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2222,
											"end": 2257,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2271,
											"end": 2272,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2268,
											"end": 2269,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2261,
											"end": 2273,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "tag",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2159,
											"end": 2281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "tag",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2333,
											"end": 2338,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2371,
											"end": 2377,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2358,
											"end": 2378,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 2414,
											"end": 2419,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 2387,
											"end": 2420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "tag",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2287,
											"end": 2426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "tag",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2500,
											"end": 2506,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2508,
											"end": 2514,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2557,
											"end": 2559,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2545,
											"end": 2554,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2536,
											"end": 2543,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2532,
											"end": 2555,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2528,
											"end": 2560,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 2563,
											"end": 2642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "tag",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "tag",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2683,
											"end": 2684,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 2753,
											"end": 2760,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2744,
											"end": 2750,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2733,
											"end": 2742,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2729,
											"end": 2751,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 2708,
											"end": 2761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "tag",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2654,
											"end": 2771,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2810,
											"end": 2812,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 2881,
											"end": 2888,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2872,
											"end": 2878,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2861,
											"end": 2870,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2857,
											"end": 2879,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 2836,
											"end": 2889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "tag",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2781,
											"end": 2899,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2432,
											"end": 2906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "tag",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2946,
											"end": 2953,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2989,
											"end": 2994,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2982,
											"end": 2995,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2975,
											"end": 2996,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2912,
											"end": 3002,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "tag",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 3104,
											"end": 3109,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 3089,
											"end": 3110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "tag",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3084,
											"end": 3087,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3077,
											"end": 3111,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3008,
											"end": 3117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "tag",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3210,
											"end": 3214,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3248,
											"end": 3250,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3237,
											"end": 3246,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3233,
											"end": 3251,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 3323,
											"end": 3324,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3312,
											"end": 3321,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3308,
											"end": 3325,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3299,
											"end": 3305,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 3261,
											"end": 3326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "tag",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3123,
											"end": 3333,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "tag",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 3444,
											"end": 3449,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 3426,
											"end": 3450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "tag",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3421,
											"end": 3424,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3414,
											"end": 3451,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3339,
											"end": 3457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "tag",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3556,
											"end": 3560,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3594,
											"end": 3596,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3583,
											"end": 3592,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3579,
											"end": 3597,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3571,
											"end": 3597,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3571,
											"end": 3597,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 3675,
											"end": 3676,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3664,
											"end": 3673,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3660,
											"end": 3677,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3651,
											"end": 3657,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 3607,
											"end": 3678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "tag",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3463,
											"end": 3685,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "tag",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3768,
											"end": 3774,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3776,
											"end": 3782,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3784,
											"end": 3790,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3833,
											"end": 3835,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 3821,
											"end": 3830,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3812,
											"end": 3819,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3808,
											"end": 3831,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3804,
											"end": 3836,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 3839,
											"end": 3918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "tag",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "tag",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3959,
											"end": 3960,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 4029,
											"end": 4036,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4020,
											"end": 4026,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4009,
											"end": 4018,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 4005,
											"end": 4027,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 3984,
											"end": 4037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "tag",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3974,
											"end": 4037,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 3974,
											"end": 4037,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3930,
											"end": 4047,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4086,
											"end": 4088,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "218"
										},
										{
											"begin": 4157,
											"end": 4164,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4148,
											"end": 4154,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4137,
											"end": 4146,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 4133,
											"end": 4155,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 4112,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "tag",
											"source": 6,
											"value": "218"
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4102,
											"end": 4165,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4102,
											"end": 4165,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4057,
											"end": 4175,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4214,
											"end": 4216,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 4285,
											"end": 4292,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4276,
											"end": 4282,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4265,
											"end": 4274,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 4261,
											"end": 4283,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 4240,
											"end": 4293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "tag",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4185,
											"end": 4303,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3691,
											"end": 4310,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4316,
											"end": 4433,
											"name": "tag",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 4316,
											"end": 4433,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4425,
											"end": 4426,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4422,
											"end": 4423,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4415,
											"end": 4427,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4439,
											"end": 4619,
											"name": "tag",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 4439,
											"end": 4619,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4487,
											"end": 4564,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4484,
											"end": 4485,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4477,
											"end": 4565,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4584,
											"end": 4588,
											"name": "PUSH",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 4581,
											"end": 4582,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4574,
											"end": 4589,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4608,
											"end": 4612,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 4605,
											"end": 4606,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4598,
											"end": 4613,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4625,
											"end": 4906,
											"name": "tag",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 4625,
											"end": 4906,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4708,
											"end": 4735,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 4730,
											"end": 4734,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4708,
											"end": 4735,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 4708,
											"end": 4735,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4708,
											"end": 4735,
											"name": "tag",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 4708,
											"end": 4735,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4700,
											"end": 4706,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4696,
											"end": 4736,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4838,
											"end": 4844,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4826,
											"end": 4836,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4823,
											"end": 4845,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 4802,
											"end": 4820,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4790,
											"end": 4800,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4787,
											"end": 4821,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 4784,
											"end": 4846,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 4781,
											"end": 4869,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4781,
											"end": 4869,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "224"
										},
										{
											"begin": 4781,
											"end": 4869,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4849,
											"end": 4867,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "225"
										},
										{
											"begin": 4849,
											"end": 4867,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 4849,
											"end": 4867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4849,
											"end": 4867,
											"name": "tag",
											"source": 6,
											"value": "225"
										},
										{
											"begin": 4849,
											"end": 4867,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4781,
											"end": 4869,
											"name": "tag",
											"source": 6,
											"value": "224"
										},
										{
											"begin": 4781,
											"end": 4869,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4889,
											"end": 4899,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4885,
											"end": 4887,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4878,
											"end": 4900,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4668,
											"end": 4906,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4625,
											"end": 4906,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4625,
											"end": 4906,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4625,
											"end": 4906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4912,
											"end": 5041,
											"name": "tag",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 4912,
											"end": 5041,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4946,
											"end": 4952,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4973,
											"end": 4993,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "227"
										},
										{
											"begin": 4973,
											"end": 4993,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 4973,
											"end": 4993,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4973,
											"end": 4993,
											"name": "tag",
											"source": 6,
											"value": "227"
										},
										{
											"begin": 4973,
											"end": 4993,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4963,
											"end": 4993,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4963,
											"end": 4993,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5002,
											"end": 5035,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "228"
										},
										{
											"begin": 5030,
											"end": 5034,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5028,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5002,
											"end": 5035,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 5002,
											"end": 5035,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5002,
											"end": 5035,
											"name": "tag",
											"source": 6,
											"value": "228"
										},
										{
											"begin": 5002,
											"end": 5035,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4912,
											"end": 5041,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4912,
											"end": 5041,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4912,
											"end": 5041,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4912,
											"end": 5041,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5047,
											"end": 5358,
											"name": "tag",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 5047,
											"end": 5358,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5124,
											"end": 5128,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5214,
											"end": 5232,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5206,
											"end": 5212,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5203,
											"end": 5233,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 5200,
											"end": 5256,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5200,
											"end": 5256,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "230"
										},
										{
											"begin": 5200,
											"end": 5256,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5236,
											"end": 5254,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "231"
										},
										{
											"begin": 5236,
											"end": 5254,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 5236,
											"end": 5254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5236,
											"end": 5254,
											"name": "tag",
											"source": 6,
											"value": "231"
										},
										{
											"begin": 5236,
											"end": 5254,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5200,
											"end": 5256,
											"name": "tag",
											"source": 6,
											"value": "230"
										},
										{
											"begin": 5200,
											"end": 5256,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5286,
											"end": 5290,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5278,
											"end": 5284,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5274,
											"end": 5291,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 5266,
											"end": 5291,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5266,
											"end": 5291,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5346,
											"end": 5350,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5340,
											"end": 5344,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5336,
											"end": 5351,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5328,
											"end": 5351,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5328,
											"end": 5351,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5047,
											"end": 5358,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5047,
											"end": 5358,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5047,
											"end": 5358,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5047,
											"end": 5358,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5364,
											"end": 5481,
											"name": "tag",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 5364,
											"end": 5481,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5473,
											"end": 5474,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5470,
											"end": 5471,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5463,
											"end": 5475,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5504,
											"end": 6214,
											"name": "tag",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 5504,
											"end": 6214,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5600,
											"end": 5605,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5625,
											"end": 5706,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "234"
										},
										{
											"begin": 5641,
											"end": 5705,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "235"
										},
										{
											"begin": 5698,
											"end": 5704,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5641,
											"end": 5705,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 5641,
											"end": 5705,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5641,
											"end": 5705,
											"name": "tag",
											"source": 6,
											"value": "235"
										},
										{
											"begin": 5641,
											"end": 5705,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5625,
											"end": 5706,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 5625,
											"end": 5706,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5625,
											"end": 5706,
											"name": "tag",
											"source": 6,
											"value": "234"
										},
										{
											"begin": 5625,
											"end": 5706,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5616,
											"end": 5706,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5616,
											"end": 5706,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5726,
											"end": 5731,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5755,
											"end": 5761,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5748,
											"end": 5753,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5741,
											"end": 5762,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5789,
											"end": 5793,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5782,
											"end": 5787,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5778,
											"end": 5794,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5771,
											"end": 5794,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5771,
											"end": 5794,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5842,
											"end": 5846,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5834,
											"end": 5840,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5830,
											"end": 5847,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 5822,
											"end": 5828,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5818,
											"end": 5848,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5871,
											"end": 5874,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5863,
											"end": 5869,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5860,
											"end": 5875,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 5857,
											"end": 5979,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5857,
											"end": 5979,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "236"
										},
										{
											"begin": 5857,
											"end": 5979,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5890,
											"end": 5969,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "237"
										},
										{
											"begin": 5890,
											"end": 5969,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 5890,
											"end": 5969,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5890,
											"end": 5969,
											"name": "tag",
											"source": 6,
											"value": "237"
										},
										{
											"begin": 5890,
											"end": 5969,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5857,
											"end": 5979,
											"name": "tag",
											"source": 6,
											"value": "236"
										},
										{
											"begin": 5857,
											"end": 5979,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6005,
											"end": 6011,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5988,
											"end": 6208,
											"name": "tag",
											"source": 6,
											"value": "238"
										},
										{
											"begin": 5988,
											"end": 6208,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6022,
											"end": 6028,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6017,
											"end": 6020,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6014,
											"end": 6029,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 5988,
											"end": 6208,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5988,
											"end": 6208,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 5988,
											"end": 6208,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6097,
											"end": 6100,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6126,
											"end": 6163,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 6159,
											"end": 6162,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 6147,
											"end": 6157,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6126,
											"end": 6163,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 6126,
											"end": 6163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6126,
											"end": 6163,
											"name": "tag",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 6126,
											"end": 6163,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6121,
											"end": 6124,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6114,
											"end": 6164,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6193,
											"end": 6197,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6188,
											"end": 6191,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6184,
											"end": 6198,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6177,
											"end": 6198,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 6177,
											"end": 6198,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6064,
											"end": 6208,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6048,
											"end": 6052,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6043,
											"end": 6046,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6039,
											"end": 6053,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6032,
											"end": 6053,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6032,
											"end": 6053,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5988,
											"end": 6208,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "238"
										},
										{
											"begin": 5988,
											"end": 6208,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5988,
											"end": 6208,
											"name": "tag",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 5988,
											"end": 6208,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5992,
											"end": 6013,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5606,
											"end": 6214,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5606,
											"end": 6214,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5504,
											"end": 6214,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 5504,
											"end": 6214,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5504,
											"end": 6214,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5504,
											"end": 6214,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5504,
											"end": 6214,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5504,
											"end": 6214,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6237,
											"end": 6607,
											"name": "tag",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 6237,
											"end": 6607,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6308,
											"end": 6313,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6357,
											"end": 6360,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6350,
											"end": 6354,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 6342,
											"end": 6348,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6338,
											"end": 6355,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6334,
											"end": 6361,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 6324,
											"end": 6446,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "243"
										},
										{
											"begin": 6324,
											"end": 6446,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6365,
											"end": 6444,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "244"
										},
										{
											"begin": 6365,
											"end": 6444,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 6365,
											"end": 6444,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6365,
											"end": 6444,
											"name": "tag",
											"source": 6,
											"value": "244"
										},
										{
											"begin": 6365,
											"end": 6444,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6324,
											"end": 6446,
											"name": "tag",
											"source": 6,
											"value": "243"
										},
										{
											"begin": 6324,
											"end": 6446,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6482,
											"end": 6488,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6469,
											"end": 6489,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 6507,
											"end": 6601,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "245"
										},
										{
											"begin": 6597,
											"end": 6600,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6589,
											"end": 6595,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6582,
											"end": 6586,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6574,
											"end": 6580,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 6570,
											"end": 6587,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6507,
											"end": 6601,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 6507,
											"end": 6601,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6507,
											"end": 6601,
											"name": "tag",
											"source": 6,
											"value": "245"
										},
										{
											"begin": 6507,
											"end": 6601,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6498,
											"end": 6601,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6498,
											"end": 6601,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6314,
											"end": 6607,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6237,
											"end": 6607,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6237,
											"end": 6607,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6237,
											"end": 6607,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6237,
											"end": 6607,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6237,
											"end": 6607,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6613,
											"end": 7297,
											"name": "tag",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 6613,
											"end": 7297,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6706,
											"end": 6712,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6714,
											"end": 6720,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6763,
											"end": 6765,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6751,
											"end": 6760,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6742,
											"end": 6749,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6738,
											"end": 6761,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6734,
											"end": 6766,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 6731,
											"end": 6850,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6731,
											"end": 6850,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "247"
										},
										{
											"begin": 6731,
											"end": 6850,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6769,
											"end": 6848,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "248"
										},
										{
											"begin": 6769,
											"end": 6848,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 6769,
											"end": 6848,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6769,
											"end": 6848,
											"name": "tag",
											"source": 6,
											"value": "248"
										},
										{
											"begin": 6769,
											"end": 6848,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6731,
											"end": 6850,
											"name": "tag",
											"source": 6,
											"value": "247"
										},
										{
											"begin": 6731,
											"end": 6850,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6917,
											"end": 6918,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6906,
											"end": 6915,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6902,
											"end": 6919,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6889,
											"end": 6920,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 6947,
											"end": 6965,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6939,
											"end": 6945,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6936,
											"end": 6966,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 6933,
											"end": 7050,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6933,
											"end": 7050,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "249"
										},
										{
											"begin": 6933,
											"end": 7050,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6969,
											"end": 7048,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "250"
										},
										{
											"begin": 6969,
											"end": 7048,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 6969,
											"end": 7048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6969,
											"end": 7048,
											"name": "tag",
											"source": 6,
											"value": "250"
										},
										{
											"begin": 6969,
											"end": 7048,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6933,
											"end": 7050,
											"name": "tag",
											"source": 6,
											"value": "249"
										},
										{
											"begin": 6933,
											"end": 7050,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7074,
											"end": 7152,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "251"
										},
										{
											"begin": 7144,
											"end": 7151,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 7135,
											"end": 7141,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7124,
											"end": 7133,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 7120,
											"end": 7142,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7074,
											"end": 7152,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 7074,
											"end": 7152,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7074,
											"end": 7152,
											"name": "tag",
											"source": 6,
											"value": "251"
										},
										{
											"begin": 7074,
											"end": 7152,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7064,
											"end": 7152,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7064,
											"end": 7152,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6860,
											"end": 7162,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7201,
											"end": 7203,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7227,
											"end": 7280,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "252"
										},
										{
											"begin": 7272,
											"end": 7279,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 7263,
											"end": 7269,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7252,
											"end": 7261,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 7248,
											"end": 7270,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7227,
											"end": 7280,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 7227,
											"end": 7280,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7227,
											"end": 7280,
											"name": "tag",
											"source": 6,
											"value": "252"
										},
										{
											"begin": 7227,
											"end": 7280,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7217,
											"end": 7280,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7217,
											"end": 7280,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7172,
											"end": 7290,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6613,
											"end": 7297,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6613,
											"end": 7297,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6613,
											"end": 7297,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6613,
											"end": 7297,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6613,
											"end": 7297,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6613,
											"end": 7297,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7303,
											"end": 7389,
											"name": "tag",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 7303,
											"end": 7389,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7338,
											"end": 7345,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7378,
											"end": 7382,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 7371,
											"end": 7376,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7367,
											"end": 7383,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7356,
											"end": 7383,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7356,
											"end": 7383,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7303,
											"end": 7389,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7303,
											"end": 7389,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7303,
											"end": 7389,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7303,
											"end": 7389,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7395,
											"end": 7507,
											"name": "tag",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 7395,
											"end": 7507,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7478,
											"end": 7500,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "255"
										},
										{
											"begin": 7494,
											"end": 7499,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7478,
											"end": 7500,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 7478,
											"end": 7500,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7478,
											"end": 7500,
											"name": "tag",
											"source": 6,
											"value": "255"
										},
										{
											"begin": 7478,
											"end": 7500,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7473,
											"end": 7476,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7466,
											"end": 7501,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7395,
											"end": 7507,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7395,
											"end": 7507,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7395,
											"end": 7507,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7513,
											"end": 7727,
											"name": "tag",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7513,
											"end": 7727,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7602,
											"end": 7606,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7640,
											"end": 7642,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7629,
											"end": 7638,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7625,
											"end": 7643,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7617,
											"end": 7643,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7617,
											"end": 7643,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7653,
											"end": 7720,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "257"
										},
										{
											"begin": 7717,
											"end": 7718,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7706,
											"end": 7715,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7702,
											"end": 7719,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7693,
											"end": 7699,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7653,
											"end": 7720,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 7653,
											"end": 7720,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7653,
											"end": 7720,
											"name": "tag",
											"source": 6,
											"value": "257"
										},
										{
											"begin": 7653,
											"end": 7720,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7513,
											"end": 7727,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7513,
											"end": 7727,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7513,
											"end": 7727,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7513,
											"end": 7727,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7513,
											"end": 7727,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7733,
											"end": 8062,
											"name": "tag",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 7733,
											"end": 8062,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7792,
											"end": 7798,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7841,
											"end": 7843,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7829,
											"end": 7838,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7820,
											"end": 7827,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7816,
											"end": 7839,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7812,
											"end": 7844,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 7809,
											"end": 7928,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7809,
											"end": 7928,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "259"
										},
										{
											"begin": 7809,
											"end": 7928,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7847,
											"end": 7926,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "260"
										},
										{
											"begin": 7847,
											"end": 7926,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 7847,
											"end": 7926,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7847,
											"end": 7926,
											"name": "tag",
											"source": 6,
											"value": "260"
										},
										{
											"begin": 7847,
											"end": 7926,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7809,
											"end": 7928,
											"name": "tag",
											"source": 6,
											"value": "259"
										},
										{
											"begin": 7809,
											"end": 7928,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7967,
											"end": 7968,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7992,
											"end": 8045,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "261"
										},
										{
											"begin": 8037,
											"end": 8044,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8028,
											"end": 8034,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8017,
											"end": 8026,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 8013,
											"end": 8035,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7992,
											"end": 8045,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 7992,
											"end": 8045,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7992,
											"end": 8045,
											"name": "tag",
											"source": 6,
											"value": "261"
										},
										{
											"begin": 7992,
											"end": 8045,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7982,
											"end": 8045,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7982,
											"end": 8045,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7938,
											"end": 8055,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7733,
											"end": 8062,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7733,
											"end": 8062,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7733,
											"end": 8062,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7733,
											"end": 8062,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7733,
											"end": 8062,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8068,
											"end": 8542,
											"name": "tag",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 8068,
											"end": 8542,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8136,
											"end": 8142,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8144,
											"end": 8150,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8193,
											"end": 8195,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8181,
											"end": 8190,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8172,
											"end": 8179,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 8168,
											"end": 8191,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8164,
											"end": 8196,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 8161,
											"end": 8280,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8161,
											"end": 8280,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "263"
										},
										{
											"begin": 8161,
											"end": 8280,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8199,
											"end": 8278,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "264"
										},
										{
											"begin": 8199,
											"end": 8278,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 8199,
											"end": 8278,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8199,
											"end": 8278,
											"name": "tag",
											"source": 6,
											"value": "264"
										},
										{
											"begin": 8199,
											"end": 8278,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8161,
											"end": 8280,
											"name": "tag",
											"source": 6,
											"value": "263"
										},
										{
											"begin": 8161,
											"end": 8280,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8319,
											"end": 8320,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8344,
											"end": 8397,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "265"
										},
										{
											"begin": 8389,
											"end": 8396,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 8380,
											"end": 8386,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8369,
											"end": 8378,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 8365,
											"end": 8387,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8344,
											"end": 8397,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 8344,
											"end": 8397,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8344,
											"end": 8397,
											"name": "tag",
											"source": 6,
											"value": "265"
										},
										{
											"begin": 8344,
											"end": 8397,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8334,
											"end": 8397,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8334,
											"end": 8397,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8290,
											"end": 8407,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8446,
											"end": 8448,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8472,
											"end": 8525,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "266"
										},
										{
											"begin": 8517,
											"end": 8524,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 8508,
											"end": 8514,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8497,
											"end": 8506,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 8493,
											"end": 8515,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8472,
											"end": 8525,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 8472,
											"end": 8525,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8472,
											"end": 8525,
											"name": "tag",
											"source": 6,
											"value": "266"
										},
										{
											"begin": 8472,
											"end": 8525,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8462,
											"end": 8525,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8462,
											"end": 8525,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8417,
											"end": 8535,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8068,
											"end": 8542,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8068,
											"end": 8542,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8068,
											"end": 8542,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8068,
											"end": 8542,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8068,
											"end": 8542,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8068,
											"end": 8542,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8548,
											"end": 8728,
											"name": "tag",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 8548,
											"end": 8728,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8596,
											"end": 8673,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8593,
											"end": 8594,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8586,
											"end": 8674,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8693,
											"end": 8697,
											"name": "PUSH",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 8690,
											"end": 8691,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 8683,
											"end": 8698,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8717,
											"end": 8721,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 8714,
											"end": 8715,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8707,
											"end": 8722,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 8734,
											"end": 9054,
											"name": "tag",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 8734,
											"end": 9054,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8778,
											"end": 8784,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8815,
											"end": 8816,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 8809,
											"end": 8813,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8805,
											"end": 8817,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 8795,
											"end": 8817,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8795,
											"end": 8817,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8862,
											"end": 8863,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 8856,
											"end": 8860,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8852,
											"end": 8864,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8883,
											"end": 8901,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8873,
											"end": 8954,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "269"
										},
										{
											"begin": 8873,
											"end": 8954,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8939,
											"end": 8943,
											"name": "PUSH",
											"source": 6,
											"value": "7F"
										},
										{
											"begin": 8931,
											"end": 8937,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8927,
											"end": 8944,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8917,
											"end": 8944,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8917,
											"end": 8944,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8873,
											"end": 8954,
											"name": "tag",
											"source": 6,
											"value": "269"
										},
										{
											"begin": 8873,
											"end": 8954,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9001,
											"end": 9003,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8993,
											"end": 8999,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8990,
											"end": 9004,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 8970,
											"end": 8988,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8967,
											"end": 9005,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8964,
											"end": 9048,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "270"
										},
										{
											"begin": 8964,
											"end": 9048,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9020,
											"end": 9038,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "271"
										},
										{
											"begin": 9020,
											"end": 9038,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 9020,
											"end": 9038,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9020,
											"end": 9038,
											"name": "tag",
											"source": 6,
											"value": "271"
										},
										{
											"begin": 9020,
											"end": 9038,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8964,
											"end": 9048,
											"name": "tag",
											"source": 6,
											"value": "270"
										},
										{
											"begin": 8964,
											"end": 9048,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8785,
											"end": 9054,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8734,
											"end": 9054,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8734,
											"end": 9054,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8734,
											"end": 9054,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8734,
											"end": 9054,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9060,
											"end": 9240,
											"name": "tag",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 9060,
											"end": 9240,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9108,
											"end": 9185,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9105,
											"end": 9106,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9098,
											"end": 9186,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9205,
											"end": 9209,
											"name": "PUSH",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 9202,
											"end": 9203,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 9195,
											"end": 9210,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9229,
											"end": 9233,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 9226,
											"end": 9227,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9219,
											"end": 9234,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 9246,
											"end": 9422,
											"name": "tag",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 9246,
											"end": 9422,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9386,
											"end": 9414,
											"name": "PUSH",
											"source": 6,
											"value": "617070726F76652066726F6D2074686520302061646472657373000000000000"
										},
										{
											"begin": 9382,
											"end": 9383,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9374,
											"end": 9380,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9370,
											"end": 9384,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9363,
											"end": 9415,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9246,
											"end": 9422,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9246,
											"end": 9422,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9428,
											"end": 9794,
											"name": "tag",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 9428,
											"end": 9794,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9570,
											"end": 9573,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9591,
											"end": 9658,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "275"
										},
										{
											"begin": 9655,
											"end": 9657,
											"name": "PUSH",
											"source": 6,
											"value": "1A"
										},
										{
											"begin": 9650,
											"end": 9653,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9591,
											"end": 9658,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 9591,
											"end": 9658,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9591,
											"end": 9658,
											"name": "tag",
											"source": 6,
											"value": "275"
										},
										{
											"begin": 9591,
											"end": 9658,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9584,
											"end": 9658,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9584,
											"end": 9658,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9667,
											"end": 9760,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "276"
										},
										{
											"begin": 9756,
											"end": 9759,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9667,
											"end": 9760,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 9667,
											"end": 9760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9667,
											"end": 9760,
											"name": "tag",
											"source": 6,
											"value": "276"
										},
										{
											"begin": 9667,
											"end": 9760,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9785,
											"end": 9787,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9780,
											"end": 9783,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9776,
											"end": 9788,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9769,
											"end": 9788,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9769,
											"end": 9788,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9428,
											"end": 9794,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9428,
											"end": 9794,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9428,
											"end": 9794,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9428,
											"end": 9794,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9800,
											"end": 10219,
											"name": "tag",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 9800,
											"end": 10219,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9966,
											"end": 9970,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10004,
											"end": 10006,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9993,
											"end": 10002,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9989,
											"end": 10007,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9981,
											"end": 10007,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9981,
											"end": 10007,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10053,
											"end": 10062,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10047,
											"end": 10051,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10043,
											"end": 10063,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 10039,
											"end": 10040,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10028,
											"end": 10037,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10024,
											"end": 10041,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10017,
											"end": 10064,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10081,
											"end": 10212,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "278"
										},
										{
											"begin": 10207,
											"end": 10211,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10081,
											"end": 10212,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 10081,
											"end": 10212,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10081,
											"end": 10212,
											"name": "tag",
											"source": 6,
											"value": "278"
										},
										{
											"begin": 10081,
											"end": 10212,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10073,
											"end": 10212,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10073,
											"end": 10212,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9800,
											"end": 10219,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9800,
											"end": 10219,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9800,
											"end": 10219,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9800,
											"end": 10219,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10225,
											"end": 10399,
											"name": "tag",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 10225,
											"end": 10399,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10365,
											"end": 10391,
											"name": "PUSH",
											"source": 6,
											"value": "617070726F766520746F20746865203020616464726573730000000000000000"
										},
										{
											"begin": 10361,
											"end": 10362,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10353,
											"end": 10359,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10349,
											"end": 10363,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10342,
											"end": 10392,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10225,
											"end": 10399,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10225,
											"end": 10399,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10405,
											"end": 10771,
											"name": "tag",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 10405,
											"end": 10771,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10547,
											"end": 10550,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10568,
											"end": 10635,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "281"
										},
										{
											"begin": 10632,
											"end": 10634,
											"name": "PUSH",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 10627,
											"end": 10630,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10568,
											"end": 10635,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 10568,
											"end": 10635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10568,
											"end": 10635,
											"name": "tag",
											"source": 6,
											"value": "281"
										},
										{
											"begin": 10568,
											"end": 10635,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10561,
											"end": 10635,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10561,
											"end": 10635,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10644,
											"end": 10737,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "282"
										},
										{
											"begin": 10733,
											"end": 10736,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10644,
											"end": 10737,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 10644,
											"end": 10737,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10644,
											"end": 10737,
											"name": "tag",
											"source": 6,
											"value": "282"
										},
										{
											"begin": 10644,
											"end": 10737,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10762,
											"end": 10764,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10757,
											"end": 10760,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10753,
											"end": 10765,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10746,
											"end": 10765,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10746,
											"end": 10765,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10405,
											"end": 10771,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10405,
											"end": 10771,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10405,
											"end": 10771,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10405,
											"end": 10771,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10777,
											"end": 11196,
											"name": "tag",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 10777,
											"end": 11196,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10943,
											"end": 10947,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10981,
											"end": 10983,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10970,
											"end": 10979,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10966,
											"end": 10984,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10958,
											"end": 10984,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10958,
											"end": 10984,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11030,
											"end": 11039,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11024,
											"end": 11028,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11020,
											"end": 11040,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 11016,
											"end": 11017,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11005,
											"end": 11014,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11001,
											"end": 11018,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10994,
											"end": 11041,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11058,
											"end": 11189,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "284"
										},
										{
											"begin": 11184,
											"end": 11188,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11058,
											"end": 11189,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 11058,
											"end": 11189,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11058,
											"end": 11189,
											"name": "tag",
											"source": 6,
											"value": "284"
										},
										{
											"begin": 11058,
											"end": 11189,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11050,
											"end": 11189,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11050,
											"end": 11189,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10777,
											"end": 11196,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10777,
											"end": 11196,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10777,
											"end": 11196,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10777,
											"end": 11196,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11202,
											"end": 11374,
											"name": "tag",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 11202,
											"end": 11374,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11342,
											"end": 11366,
											"name": "PUSH",
											"source": 6,
											"value": "696E73756666696369656E7420616C6C6F77616E636500000000000000000000"
										},
										{
											"begin": 11338,
											"end": 11339,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11330,
											"end": 11336,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11326,
											"end": 11340,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11319,
											"end": 11367,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11202,
											"end": 11374,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11202,
											"end": 11374,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11380,
											"end": 11746,
											"name": "tag",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 11380,
											"end": 11746,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11522,
											"end": 11525,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11543,
											"end": 11610,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "287"
										},
										{
											"begin": 11607,
											"end": 11609,
											"name": "PUSH",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 11602,
											"end": 11605,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11543,
											"end": 11610,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 11543,
											"end": 11610,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11543,
											"end": 11610,
											"name": "tag",
											"source": 6,
											"value": "287"
										},
										{
											"begin": 11543,
											"end": 11610,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11536,
											"end": 11610,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11536,
											"end": 11610,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11619,
											"end": 11712,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "288"
										},
										{
											"begin": 11708,
											"end": 11711,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11619,
											"end": 11712,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 11619,
											"end": 11712,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11619,
											"end": 11712,
											"name": "tag",
											"source": 6,
											"value": "288"
										},
										{
											"begin": 11619,
											"end": 11712,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11737,
											"end": 11739,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11732,
											"end": 11735,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11728,
											"end": 11740,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11721,
											"end": 11740,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11721,
											"end": 11740,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11380,
											"end": 11746,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11380,
											"end": 11746,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11380,
											"end": 11746,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11380,
											"end": 11746,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11752,
											"end": 12171,
											"name": "tag",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 11752,
											"end": 12171,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11918,
											"end": 11922,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11956,
											"end": 11958,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11945,
											"end": 11954,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11941,
											"end": 11959,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11933,
											"end": 11959,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11933,
											"end": 11959,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12005,
											"end": 12014,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11999,
											"end": 12003,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11995,
											"end": 12015,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 11991,
											"end": 11992,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11980,
											"end": 11989,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11976,
											"end": 11993,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11969,
											"end": 12016,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12033,
											"end": 12164,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "290"
										},
										{
											"begin": 12159,
											"end": 12163,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12033,
											"end": 12164,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 12033,
											"end": 12164,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12033,
											"end": 12164,
											"name": "tag",
											"source": 6,
											"value": "290"
										},
										{
											"begin": 12033,
											"end": 12164,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12025,
											"end": 12164,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12025,
											"end": 12164,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11752,
											"end": 12171,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11752,
											"end": 12171,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11752,
											"end": 12171,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11752,
											"end": 12171,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12177,
											"end": 12350,
											"name": "tag",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 12177,
											"end": 12350,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12317,
											"end": 12342,
											"name": "PUSH",
											"source": 6,
											"value": "5472616E736665722066726F6D20616464726573732030000000000000000000"
										},
										{
											"begin": 12313,
											"end": 12314,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12305,
											"end": 12311,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12301,
											"end": 12315,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12294,
											"end": 12343,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12177,
											"end": 12350,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12177,
											"end": 12350,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12356,
											"end": 12722,
											"name": "tag",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 12356,
											"end": 12722,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12498,
											"end": 12501,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12519,
											"end": 12586,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "293"
										},
										{
											"begin": 12583,
											"end": 12585,
											"name": "PUSH",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 12578,
											"end": 12581,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 12519,
											"end": 12586,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 12519,
											"end": 12586,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12519,
											"end": 12586,
											"name": "tag",
											"source": 6,
											"value": "293"
										},
										{
											"begin": 12519,
											"end": 12586,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12512,
											"end": 12586,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 12512,
											"end": 12586,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12595,
											"end": 12688,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "294"
										},
										{
											"begin": 12684,
											"end": 12687,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12595,
											"end": 12688,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 12595,
											"end": 12688,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12595,
											"end": 12688,
											"name": "tag",
											"source": 6,
											"value": "294"
										},
										{
											"begin": 12595,
											"end": 12688,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12713,
											"end": 12715,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 12708,
											"end": 12711,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12704,
											"end": 12716,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12697,
											"end": 12716,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12697,
											"end": 12716,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12356,
											"end": 12722,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 12356,
											"end": 12722,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12356,
											"end": 12722,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12356,
											"end": 12722,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12728,
											"end": 13147,
											"name": "tag",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 12728,
											"end": 13147,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12894,
											"end": 12898,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12932,
											"end": 12934,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 12921,
											"end": 12930,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12917,
											"end": 12935,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12909,
											"end": 12935,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12909,
											"end": 12935,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12981,
											"end": 12990,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12975,
											"end": 12979,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12971,
											"end": 12991,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 12967,
											"end": 12968,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12956,
											"end": 12965,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 12952,
											"end": 12969,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12945,
											"end": 12992,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 13009,
											"end": 13140,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "296"
										},
										{
											"begin": 13135,
											"end": 13139,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13009,
											"end": 13140,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 13009,
											"end": 13140,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13009,
											"end": 13140,
											"name": "tag",
											"source": 6,
											"value": "296"
										},
										{
											"begin": 13009,
											"end": 13140,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13001,
											"end": 13140,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13001,
											"end": 13140,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12728,
											"end": 13147,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 12728,
											"end": 13147,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12728,
											"end": 13147,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12728,
											"end": 13147,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13153,
											"end": 13324,
											"name": "tag",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 13153,
											"end": 13324,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13293,
											"end": 13316,
											"name": "PUSH",
											"source": 6,
											"value": "5472616E7366657220746F206164647265737320300000000000000000000000"
										},
										{
											"begin": 13289,
											"end": 13290,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13281,
											"end": 13287,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13277,
											"end": 13291,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13270,
											"end": 13317,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 13153,
											"end": 13324,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13153,
											"end": 13324,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13330,
											"end": 13696,
											"name": "tag",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 13330,
											"end": 13696,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13472,
											"end": 13475,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13493,
											"end": 13560,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "299"
										},
										{
											"begin": 13557,
											"end": 13559,
											"name": "PUSH",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 13552,
											"end": 13555,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 13493,
											"end": 13560,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 13493,
											"end": 13560,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13493,
											"end": 13560,
											"name": "tag",
											"source": 6,
											"value": "299"
										},
										{
											"begin": 13493,
											"end": 13560,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13486,
											"end": 13560,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 13486,
											"end": 13560,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13569,
											"end": 13662,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "300"
										},
										{
											"begin": 13658,
											"end": 13661,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13569,
											"end": 13662,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 13569,
											"end": 13662,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13569,
											"end": 13662,
											"name": "tag",
											"source": 6,
											"value": "300"
										},
										{
											"begin": 13569,
											"end": 13662,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13687,
											"end": 13689,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 13682,
											"end": 13685,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13678,
											"end": 13690,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13671,
											"end": 13690,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13671,
											"end": 13690,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13330,
											"end": 13696,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 13330,
											"end": 13696,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13330,
											"end": 13696,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13330,
											"end": 13696,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13702,
											"end": 14121,
											"name": "tag",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 13702,
											"end": 14121,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13868,
											"end": 13872,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13906,
											"end": 13908,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 13895,
											"end": 13904,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13891,
											"end": 13909,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13883,
											"end": 13909,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13883,
											"end": 13909,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13955,
											"end": 13964,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13949,
											"end": 13953,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 13941,
											"end": 13942,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13930,
											"end": 13939,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 13926,
											"end": 13943,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13919,
											"end": 13966,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 13983,
											"end": 14114,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "302"
										},
										{
											"begin": 14109,
											"end": 14113,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13983,
											"end": 14114,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 13983,
											"end": 14114,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13983,
											"end": 14114,
											"name": "tag",
											"source": 6,
											"value": "302"
										},
										{
											"begin": 13983,
											"end": 14114,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13975,
											"end": 14114,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13975,
											"end": 14114,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13702,
											"end": 14121,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 13702,
											"end": 14121,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13702,
											"end": 14121,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13702,
											"end": 14121,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14127,
											"end": 14293,
											"name": "tag",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 14127,
											"end": 14293,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14267,
											"end": 14285,
											"name": "PUSH",
											"source": 6,
											"value": "42616C616E636520657863656564656400000000000000000000000000000000"
										},
										{
											"begin": 14263,
											"end": 14264,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 14255,
											"end": 14261,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 14251,
											"end": 14265,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 14244,
											"end": 14286,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 14127,
											"end": 14293,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14127,
											"end": 14293,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14299,
											"end": 14665,
											"name": "tag",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 14299,
											"end": 14665,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14441,
											"end": 14444,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 14462,
											"end": 14529,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "305"
										},
										{
											"begin": 14526,
											"end": 14528,
											"name": "PUSH",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 14521,
											"end": 14524,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 14462,
											"end": 14529,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 14462,
											"end": 14529,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14462,
											"end": 14529,
											"name": "tag",
											"source": 6,
											"value": "305"
										},
										{
											"begin": 14462,
											"end": 14529,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14455,
											"end": 14529,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 14455,
											"end": 14529,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14538,
											"end": 14631,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "306"
										},
										{
											"begin": 14627,
											"end": 14630,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 14538,
											"end": 14631,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 14538,
											"end": 14631,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14538,
											"end": 14631,
											"name": "tag",
											"source": 6,
											"value": "306"
										},
										{
											"begin": 14538,
											"end": 14631,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14656,
											"end": 14658,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 14651,
											"end": 14654,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 14647,
											"end": 14659,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 14640,
											"end": 14659,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 14640,
											"end": 14659,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14299,
											"end": 14665,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 14299,
											"end": 14665,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 14299,
											"end": 14665,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14299,
											"end": 14665,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14671,
											"end": 15090,
											"name": "tag",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 14671,
											"end": 15090,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14837,
											"end": 14841,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 14875,
											"end": 14877,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 14864,
											"end": 14873,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 14860,
											"end": 14878,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 14852,
											"end": 14878,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 14852,
											"end": 14878,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14924,
											"end": 14933,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 14918,
											"end": 14922,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 14914,
											"end": 14934,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 14910,
											"end": 14911,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 14899,
											"end": 14908,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 14895,
											"end": 14912,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 14888,
											"end": 14935,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 14952,
											"end": 15083,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "308"
										},
										{
											"begin": 15078,
											"end": 15082,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 14952,
											"end": 15083,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 14952,
											"end": 15083,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14952,
											"end": 15083,
											"name": "tag",
											"source": 6,
											"value": "308"
										},
										{
											"begin": 14952,
											"end": 15083,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14944,
											"end": 15083,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 14944,
											"end": 15083,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14671,
											"end": 15090,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 14671,
											"end": 15090,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 14671,
											"end": 15090,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14671,
											"end": 15090,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 15096,
											"end": 15267,
											"name": "tag",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 15096,
											"end": 15267,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15236,
											"end": 15259,
											"name": "PUSH",
											"source": 6,
											"value": "6D696E7420746F20746865203020616464726573730000000000000000000000"
										},
										{
											"begin": 15232,
											"end": 15233,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 15224,
											"end": 15230,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 15220,
											"end": 15234,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 15213,
											"end": 15260,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 15096,
											"end": 15267,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15096,
											"end": 15267,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 15273,
											"end": 15639,
											"name": "tag",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 15273,
											"end": 15639,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15415,
											"end": 15418,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 15436,
											"end": 15503,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "311"
										},
										{
											"begin": 15500,
											"end": 15502,
											"name": "PUSH",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 15495,
											"end": 15498,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 15436,
											"end": 15503,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 15436,
											"end": 15503,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 15436,
											"end": 15503,
											"name": "tag",
											"source": 6,
											"value": "311"
										},
										{
											"begin": 15436,
											"end": 15503,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15429,
											"end": 15503,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 15429,
											"end": 15503,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15512,
											"end": 15605,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "312"
										},
										{
											"begin": 15601,
											"end": 15604,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 15512,
											"end": 15605,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 15512,
											"end": 15605,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 15512,
											"end": 15605,
											"name": "tag",
											"source": 6,
											"value": "312"
										},
										{
											"begin": 15512,
											"end": 15605,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15630,
											"end": 15632,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 15625,
											"end": 15628,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 15621,
											"end": 15633,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 15614,
											"end": 15633,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 15614,
											"end": 15633,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15273,
											"end": 15639,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 15273,
											"end": 15639,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 15273,
											"end": 15639,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15273,
											"end": 15639,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 15645,
											"end": 16064,
											"name": "tag",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 15645,
											"end": 16064,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15811,
											"end": 15815,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 15849,
											"end": 15851,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 15838,
											"end": 15847,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 15834,
											"end": 15852,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 15826,
											"end": 15852,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 15826,
											"end": 15852,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15898,
											"end": 15907,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 15892,
											"end": 15896,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 15888,
											"end": 15908,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 15884,
											"end": 15885,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 15873,
											"end": 15882,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 15869,
											"end": 15886,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 15862,
											"end": 15909,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 15926,
											"end": 16057,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "314"
										},
										{
											"begin": 16052,
											"end": 16056,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 15926,
											"end": 16057,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 15926,
											"end": 16057,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 15926,
											"end": 16057,
											"name": "tag",
											"source": 6,
											"value": "314"
										},
										{
											"begin": 15926,
											"end": 16057,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15918,
											"end": 16057,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 15918,
											"end": 16057,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15645,
											"end": 16064,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 15645,
											"end": 16064,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 15645,
											"end": 16064,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15645,
											"end": 16064,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 16070,
											"end": 16250,
											"name": "tag",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 16070,
											"end": 16250,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 16118,
											"end": 16195,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16115,
											"end": 16116,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 16108,
											"end": 16196,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 16215,
											"end": 16219,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 16212,
											"end": 16213,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 16205,
											"end": 16220,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 16239,
											"end": 16243,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 16236,
											"end": 16237,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 16229,
											"end": 16244,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 16256,
											"end": 16447,
											"name": "tag",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 16256,
											"end": 16447,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 16296,
											"end": 16299,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 16315,
											"end": 16335,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "317"
										},
										{
											"begin": 16333,
											"end": 16334,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 16315,
											"end": 16335,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 16315,
											"end": 16335,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 16315,
											"end": 16335,
											"name": "tag",
											"source": 6,
											"value": "317"
										},
										{
											"begin": 16315,
											"end": 16335,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 16310,
											"end": 16335,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 16310,
											"end": 16335,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 16349,
											"end": 16369,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "318"
										},
										{
											"begin": 16367,
											"end": 16368,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 16349,
											"end": 16369,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 16349,
											"end": 16369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 16349,
											"end": 16369,
											"name": "tag",
											"source": 6,
											"value": "318"
										},
										{
											"begin": 16349,
											"end": 16369,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 16344,
											"end": 16369,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 16344,
											"end": 16369,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 16392,
											"end": 16393,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 16389,
											"end": 16390,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 16385,
											"end": 16394,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 16378,
											"end": 16394,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 16378,
											"end": 16394,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 16413,
											"end": 16416,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 16410,
											"end": 16411,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 16407,
											"end": 16417,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 16404,
											"end": 16440,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 16404,
											"end": 16440,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "319"
										},
										{
											"begin": 16404,
											"end": 16440,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 16420,
											"end": 16438,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "320"
										},
										{
											"begin": 16420,
											"end": 16438,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 16420,
											"end": 16438,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 16420,
											"end": 16438,
											"name": "tag",
											"source": 6,
											"value": "320"
										},
										{
											"begin": 16420,
											"end": 16438,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 16404,
											"end": 16440,
											"name": "tag",
											"source": 6,
											"value": "319"
										},
										{
											"begin": 16404,
											"end": 16440,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 16256,
											"end": 16447,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 16256,
											"end": 16447,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 16256,
											"end": 16447,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 16256,
											"end": 16447,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 16256,
											"end": 16447,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"JERC20.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"distributeTokens(address[],uint256)": "256fa241",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"recipients\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"distributeTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"params\":{\"owner\":\"owner token address\",\"spender\":\"spender address\"},\"returns\":{\"_0\":\"remaining allowance\"}},\"approve(address,uint256)\":{\"details\":\"_approve emits the {Approval} event\",\"params\":{\"amount\":\"tokens amount to allow.\",\"spender\":\"spender address\"},\"returns\":{\"_0\":\"A ~ succesful boolean value\"}},\"balanceOf(address)\":{\"params\":{\"account\":\"account address\"},\"returns\":{\"_0\":\"account balance of tokens\"}},\"constructor\":{\"params\":{\"name_\":\"token name\",\"symbol_\":\"token symbol\"}},\"decimals()\":{\"returns\":{\"_0\":\"decimals\"}},\"distributeTokens(address[],uint256)\":{\"details\":\"mint tokens _mint emits Transfer event\",\"params\":{\"amount\":\"tokens amount to distribute\",\"recipients\":\"addresses array\"}},\"name()\":{\"returns\":{\"_0\":\"token name\"}},\"symbol()\":{\"returns\":{\"_0\":\"token symbol\"}},\"totalSupply()\":{\"returns\":{\"_0\":\"total supply of tokens\"}},\"transfer(address,uint256)\":{\"details\":\"_transfer emits a {Transfer} event\",\"params\":{\"amount\":\"tokens amount to transfer\",\"to\":\"recipient address\"},\"returns\":{\"_0\":\"A maybe successful ~ boolean value \"}},\"transferFrom(address,address,uint256)\":{\"details\":\"_transfer emits a {Transfer} event\",\"params\":{\"amount\":\"tokens amount to transfer\",\"from\":\"msg sender address\",\"to\":\"recipient address\"},\"returns\":{\"_0\":\"A ~succesful boolean value\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"allowance(address,address)\":{\"notice\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}  default 0\"},\"approve(address,uint256)\":{\"notice\":\"Sets `amount` as the allowance of `spender` over the caller's tokens.\"},\"balanceOf(address)\":{\"notice\":\"Returns account balance of tokens\"},\"constructor\":{\"notice\":\"Constructs the token with a name and symbol\"},\"distributeTokens(address[],uint256)\":{\"notice\":\"Transfers `amount` tokens from `from` to `to`.\"},\"name()\":{\"notice\":\"Returns token name\"},\"symbol()\":{\"notice\":\"Returns token symbol\"},\"transfer(address,uint256)\":{\"notice\":\"Transfers tokens from the caller to another address.\"},\"transferFrom(address,address,uint256)\":{\"notice\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"JERC20.sol\":\"MyToken\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xbf61ab2ae1d575a17ea58fbb99ca232baddcc4e0eeea180e84cbc74b0c348b31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e0968705bad99747a8e5288aa008678c2be2f471f919dce3925a3cc4f1dee09\",\"dweb:/ipfs/QmbAFnCQfo4tw6ssfQSjhA5LzwHWNNryXN8bX7ty8jiqqn\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"JERC20.sol\":{\"keccak256\":\"0x1f3fd186f01ea0caebf664e5833ce8fad722ad3c78d0cd5ab1b8e718acf7abfd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e5a7ddae2a909daaeebdec92aaa74b63b0aa417117fcc4dbabfc67c7bf2d8765\",\"dweb:/ipfs/QmSbnoZWSiyoTqeLoiwc2Yit5Yr4NQMk9RbBsL6iUtK952\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 871,
								"contract": "JERC20.sol:MyToken",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 877,
								"contract": "JERC20.sol:MyToken",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 879,
								"contract": "JERC20.sol:MyToken",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 881,
								"contract": "JERC20.sol:MyToken",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 883,
								"contract": "JERC20.sol:MyToken",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"allowance(address,address)": {
								"notice": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}  default 0"
							},
							"approve(address,uint256)": {
								"notice": "Sets `amount` as the allowance of `spender` over the caller's tokens."
							},
							"balanceOf(address)": {
								"notice": "Returns account balance of tokens"
							},
							"constructor": {
								"notice": "Constructs the token with a name and symbol"
							},
							"distributeTokens(address[],uint256)": {
								"notice": "Transfers `amount` tokens from `from` to `to`."
							},
							"name()": {
								"notice": "Returns token name"
							},
							"symbol()": {
								"notice": "Returns token symbol"
							},
							"transfer(address,uint256)": {
								"notice": "Transfers tokens from the caller to another address."
							},
							"transferFrom(address,address,uint256)": {
								"notice": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance"
							}
						},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							136
						],
						"IERC20Errors": [
							41
						],
						"IERC721Errors": [
							89
						]
					},
					"id": 137,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:0",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 41,
							"linearizedBaseContracts": [
								41
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 11,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "654:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "670:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "687:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:0"
									},
									"src": "623:80:0"
								},
								{
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 16,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "891:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:0"
									},
									"src": "866:41:0"
								},
								{
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 21,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "1104:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:0"
									},
									"src": "1077:45:0"
								},
								{
									"documentation": {
										"id": 22,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:0",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 30,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1511:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 23,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 26,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1528:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 25,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1547:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 27,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:0"
									},
									"src": "1478:85:0"
								},
								{
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 35,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "1775:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:0"
									},
									"src": "1748:45:0"
								},
								{
									"documentation": {
										"id": 36,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:0",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 40,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "2025:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 37,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:0"
									},
									"src": "1999:43:0"
								}
							],
							"scope": 137,
							"src": "280:1764:0",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 42,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:0",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 89,
							"linearizedBaseContracts": [
								89
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 43,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:0",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 47,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "2469:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 44,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:0"
									},
									"src": "2444:40:0"
								},
								{
									"documentation": {
										"id": 48,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:0",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 52,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "2656:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 49,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:0"
									},
									"src": "2627:46:0"
								},
								{
									"documentation": {
										"id": 53,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:0",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 61,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3000:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 54,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3016:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 56,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3033:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 58,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:0"
									},
									"src": "2973:75:0"
								},
								{
									"documentation": {
										"id": 62,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 66,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "3237:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 63,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:0"
									},
									"src": "3211:42:0"
								},
								{
									"documentation": {
										"id": 67,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 71,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "3451:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:0"
									},
									"src": "3423:46:0"
								},
								{
									"documentation": {
										"id": 72,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 78,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3760:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 73,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3778:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 75,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:0"
									},
									"src": "3727:68:0"
								},
								{
									"documentation": {
										"id": 79,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 83,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 81,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "4008:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 80,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:0"
									},
									"src": "3980:46:0"
								},
								{
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 88,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "4262:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:0"
									},
									"src": "4234:46:0"
								}
							],
							"scope": 137,
							"src": "2190:2092:0",
							"usedErrors": [
								47,
								52,
								61,
								66,
								71,
								78,
								83,
								88
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 90,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:0",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 136,
							"linearizedBaseContracts": [
								136
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 91,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 101,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4860:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4876:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 94,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4893:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4909:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 98,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:0"
									},
									"src": "4827:99:0"
								},
								{
									"documentation": {
										"id": 102,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 106,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "5116:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:0"
									},
									"src": "5089:43:0"
								},
								{
									"documentation": {
										"id": 107,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 111,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "5331:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:0"
									},
									"src": "5302:47:0"
								},
								{
									"documentation": {
										"id": 112,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 118,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5651:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5669:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:0"
									},
									"src": "5616:68:0"
								},
								{
									"documentation": {
										"id": 119,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 123,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "5898:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:0"
									},
									"src": "5869:47:0"
								},
								{
									"documentation": {
										"id": 124,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 128,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "6153:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:0"
									},
									"src": "6124:47:0"
								},
								{
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:0",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 135,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6494:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6513:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:0"
									},
									"src": "6462:73:0"
								}
							],
							"scope": 137,
							"src": "4430:2107:0",
							"usedErrors": [
								101,
								106,
								111,
								118,
								123,
								128,
								135
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							785
						],
						"ERC20": [
							651
						],
						"IERC20": [
							729
						],
						"IERC20Errors": [
							41
						],
						"IERC20Metadata": [
							755
						]
					},
					"id": 652,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 138,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 140,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 730,
							"src": "131:36:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 139,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 729,
										"src": "139:6:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 142,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 756,
							"src": "168:63:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 141,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 755,
										"src": "176:14:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 144,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 786,
							"src": "232:48:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 143,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 785,
										"src": "240:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 146,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 137,
							"src": "281:65:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 145,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 41,
										"src": "289:12:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 148,
										"name": "Context",
										"nameLocations": [
											"1133:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 785,
										"src": "1133:7:1"
									},
									"id": 149,
									"nodeType": "InheritanceSpecifier",
									"src": "1133:7:1"
								},
								{
									"baseName": {
										"id": 150,
										"name": "IERC20",
										"nameLocations": [
											"1142:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 729,
										"src": "1142:6:1"
									},
									"id": 151,
									"nodeType": "InheritanceSpecifier",
									"src": "1142:6:1"
								},
								{
									"baseName": {
										"id": 152,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1150:14:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 755,
										"src": "1150:14:1"
									},
									"id": 153,
									"nodeType": "InheritanceSpecifier",
									"src": "1150:14:1"
								},
								{
									"baseName": {
										"id": 154,
										"name": "IERC20Errors",
										"nameLocations": [
											"1166:12:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 41,
										"src": "1166:12:1"
									},
									"id": 155,
									"nodeType": "InheritanceSpecifier",
									"src": "1166:12:1"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 147,
								"nodeType": "StructuredDocumentation",
								"src": "348:757:1",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 651,
							"linearizedBaseContracts": [
								651,
								41,
								755,
								729,
								785
							],
							"name": "ERC20",
							"nameLocation": "1124:5:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 159,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1229:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1185:53:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 158,
										"keyName": "account",
										"keyNameLocation": "1201:7:1",
										"keyType": {
											"id": 156,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1193:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1185:35:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 157,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1212:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 165,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1317:11:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1245:83:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 164,
										"keyName": "account",
										"keyNameLocation": "1261:7:1",
										"keyType": {
											"id": 160,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1253:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1245:63:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 163,
											"keyName": "spender",
											"keyNameLocation": "1288:7:1",
											"keyType": {
												"id": 161,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1280:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1272:35:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 162,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1299:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 167,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1351:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1335:28:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 166,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1335:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 169,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1385:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1370:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 168,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1370:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 171,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1411:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1396:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 170,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1396:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 187,
										"nodeType": "Block",
										"src": "1657:57:1",
										"statements": [
											{
												"expression": {
													"id": 181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 179,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 169,
														"src": "1667:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 180,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 174,
														"src": "1675:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1667:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 182,
												"nodeType": "ExpressionStatement",
												"src": "1667:13:1"
											},
											{
												"expression": {
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 183,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "1690:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 184,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 176,
														"src": "1700:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1690:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 186,
												"nodeType": "ExpressionStatement",
												"src": "1690:17:1"
											}
										]
									},
									"documentation": {
										"id": 172,
										"nodeType": "StructuredDocumentation",
										"src": "1425:171:1",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 188,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1627:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "1613:19:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 173,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1613:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1648:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "1634:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 175,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1634:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1612:44:1"
									},
									"returnParameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1657:0:1"
									},
									"scope": 651,
									"src": "1601:113:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										742
									],
									"body": {
										"id": 196,
										"nodeType": "Block",
										"src": "1839:29:1",
										"statements": [
											{
												"expression": {
													"id": 194,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 169,
													"src": "1856:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 193,
												"id": 195,
												"nodeType": "Return",
												"src": "1849:12:1"
											}
										]
									},
									"documentation": {
										"id": 189,
										"nodeType": "StructuredDocumentation",
										"src": "1720:54:1",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 197,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1788:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1792:2:1"
									},
									"returnParameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "1824:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 191,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1824:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1823:15:1"
									},
									"scope": 651,
									"src": "1779:89:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										748
									],
									"body": {
										"id": 205,
										"nodeType": "Block",
										"src": "2043:31:1",
										"statements": [
											{
												"expression": {
													"id": 203,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 171,
													"src": "2060:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 202,
												"id": 204,
												"nodeType": "Return",
												"src": "2053:14:1"
											}
										]
									},
									"documentation": {
										"id": 198,
										"nodeType": "StructuredDocumentation",
										"src": "1874:102:1",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 206,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1990:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1996:2:1"
									},
									"returnParameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "2028:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 200,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2028:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2027:15:1"
									},
									"scope": 651,
									"src": "1981:93:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										754
									],
									"body": {
										"id": 214,
										"nodeType": "Block",
										"src": "2763:26:1",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 212,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2780:2:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 211,
												"id": 213,
												"nodeType": "Return",
												"src": "2773:9:1"
											}
										]
									},
									"documentation": {
										"id": 207,
										"nodeType": "StructuredDocumentation",
										"src": "2080:622:1",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 215,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2716:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2724:2:1"
									},
									"returnParameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "2756:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 209,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2756:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2755:7:1"
									},
									"scope": 651,
									"src": "2707:82:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										678
									],
									"body": {
										"id": 223,
										"nodeType": "Block",
										"src": "2910:36:1",
										"statements": [
											{
												"expression": {
													"id": 221,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 167,
													"src": "2927:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 220,
												"id": 222,
												"nodeType": "Return",
												"src": "2920:19:1"
											}
										]
									},
									"documentation": {
										"id": 216,
										"nodeType": "StructuredDocumentation",
										"src": "2795:49:1",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 224,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2858:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2869:2:1"
									},
									"returnParameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2901:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2901:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2900:9:1"
									},
									"scope": 651,
									"src": "2849:97:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										686
									],
									"body": {
										"id": 236,
										"nodeType": "Block",
										"src": "3078:42:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 232,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 159,
														"src": "3095:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 234,
													"indexExpression": {
														"id": 233,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 227,
														"src": "3105:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3095:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 231,
												"id": 235,
												"nodeType": "Return",
												"src": "3088:25:1"
											}
										]
									},
									"documentation": {
										"id": 225,
										"nodeType": "StructuredDocumentation",
										"src": "2952:47:1",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 237,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3013:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3031:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "3023:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3023:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3022:17:1"
									},
									"returnParameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "3069:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 229,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3069:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3068:9:1"
									},
									"scope": 651,
									"src": "3004:116:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										696
									],
									"body": {
										"id": 260,
										"nodeType": "Block",
										"src": "3390:103:1",
										"statements": [
											{
												"assignments": [
													248
												],
												"declarations": [
													{
														"constant": false,
														"id": 248,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3408:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 260,
														"src": "3400:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 247,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3400:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 251,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 249,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "3416:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3416:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3400:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 253,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 248,
															"src": "3448:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 254,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 240,
															"src": "3455:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 255,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 242,
															"src": "3459:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 252,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "3438:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3438:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 257,
												"nodeType": "ExpressionStatement",
												"src": "3438:27:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 258,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3482:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 246,
												"id": 259,
												"nodeType": "Return",
												"src": "3475:11:1"
											}
										]
									},
									"documentation": {
										"id": 238,
										"nodeType": "StructuredDocumentation",
										"src": "3126:184:1",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 261,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3324:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3341:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3333:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 239,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3333:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3353:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3345:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 241,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3345:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3332:27:1"
									},
									"returnParameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3384:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 244,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3384:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3383:6:1"
									},
									"scope": 651,
									"src": "3315:178:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										706
									],
									"body": {
										"id": 277,
										"nodeType": "Block",
										"src": "3640:51:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 271,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 165,
															"src": "3657:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 273,
														"indexExpression": {
															"id": 272,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 264,
															"src": "3669:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3657:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 275,
													"indexExpression": {
														"id": 274,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 266,
														"src": "3676:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3657:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 270,
												"id": 276,
												"nodeType": "Return",
												"src": "3650:34:1"
											}
										]
									},
									"documentation": {
										"id": 262,
										"nodeType": "StructuredDocumentation",
										"src": "3499:47:1",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 278,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3560:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3578:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3570:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3570:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3593:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3585:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 265,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3585:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3569:32:1"
									},
									"returnParameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3631:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 268,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3631:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3630:9:1"
									},
									"scope": 651,
									"src": "3551:140:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										716
									],
									"body": {
										"id": 301,
										"nodeType": "Block",
										"src": "4077:107:1",
										"statements": [
											{
												"assignments": [
													289
												],
												"declarations": [
													{
														"constant": false,
														"id": 289,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4095:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4087:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 288,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4087:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 292,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 290,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "4103:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4103:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4087:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 294,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 289,
															"src": "4134:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 295,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 281,
															"src": "4141:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 296,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 283,
															"src": "4150:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 293,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															542,
															602
														],
														"referencedDeclaration": 542,
														"src": "4125:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4125:31:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 298,
												"nodeType": "ExpressionStatement",
												"src": "4125:31:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 299,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4173:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 287,
												"id": 300,
												"nodeType": "Return",
												"src": "4166:11:1"
											}
										]
									},
									"documentation": {
										"id": 279,
										"nodeType": "StructuredDocumentation",
										"src": "3697:296:1",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 302,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4007:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4023:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4015:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 280,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4015:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4040:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4032:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4032:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4014:32:1"
									},
									"returnParameters": {
										"id": 287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4071:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 285,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4071:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4070:6:1"
									},
									"scope": 651,
									"src": "3998:186:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										728
									],
									"body": {
										"id": 333,
										"nodeType": "Block",
										"src": "4869:151:1",
										"statements": [
											{
												"assignments": [
													315
												],
												"declarations": [
													{
														"constant": false,
														"id": 315,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4887:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 333,
														"src": "4879:15:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 314,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4879:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 318,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 316,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "4897:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 317,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4897:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4879:30:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 320,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "4935:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 321,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 315,
															"src": "4941:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 322,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "4950:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 319,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 650,
														"src": "4919:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4919:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 324,
												"nodeType": "ExpressionStatement",
												"src": "4919:37:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 326,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "4976:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 327,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 307,
															"src": "4982:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 328,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "4986:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 325,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "4966:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4966:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "4966:26:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 331,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5009:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 313,
												"id": 332,
												"nodeType": "Return",
												"src": "5002:11:1"
											}
										]
									},
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "4190:581:1",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 334,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4785:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4806:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "4798:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 304,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4798:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4820:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "4812:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 306,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4812:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4832:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "4824:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 308,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4824:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4797:41:1"
									},
									"returnParameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "4863:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 311,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4863:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4862:6:1"
									},
									"scope": 651,
									"src": "4776:244:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 380,
										"nodeType": "Block",
										"src": "5462:231:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 344,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 337,
														"src": "5476:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 347,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5492:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 346,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5484:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 345,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5484:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 348,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5484:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5476:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 358,
												"nodeType": "IfStatement",
												"src": "5472:86:1",
												"trueBody": {
													"id": 357,
													"nodeType": "Block",
													"src": "5496:62:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 353,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5544:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 352,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5536:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 351,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5536:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 354,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5536:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 350,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "5517:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 355,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5517:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 356,
															"nodeType": "RevertStatement",
															"src": "5510:37:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 359,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 339,
														"src": "5571:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 362,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5585:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 361,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5577:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 360,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5577:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 363,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5577:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5571:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 373,
												"nodeType": "IfStatement",
												"src": "5567:86:1",
												"trueBody": {
													"id": 372,
													"nodeType": "Block",
													"src": "5589:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 368,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5639:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 367,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5631:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 366,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5631:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 369,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5631:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 365,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "5610:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 370,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5610:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 371,
															"nodeType": "RevertStatement",
															"src": "5603:39:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 375,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 337,
															"src": "5670:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 376,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 339,
															"src": "5676:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 377,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 341,
															"src": "5680:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 374,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "5662:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5662:24:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 379,
												"nodeType": "ExpressionStatement",
												"src": "5662:24:1"
											}
										]
									},
									"documentation": {
										"id": 335,
										"nodeType": "StructuredDocumentation",
										"src": "5026:362:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 381,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5402:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 337,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5420:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5412:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 336,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5412:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5434:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5426:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 338,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5426:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5446:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5438:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 340,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5438:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5411:41:1"
									},
									"returnParameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5462:0:1"
									},
									"scope": 651,
									"src": "5393:300:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 457,
										"nodeType": "Block",
										"src": "6083:1032:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 391,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 384,
														"src": "6097:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 394,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6113:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 393,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6105:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 392,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6105:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 395,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6105:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6097:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 428,
													"nodeType": "Block",
													"src": "6271:362:1",
													"statements": [
														{
															"assignments": [
																403
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 403,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6293:11:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 428,
																	"src": "6285:19:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 402,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6285:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 407,
															"initialValue": {
																"baseExpression": {
																	"id": 404,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 159,
																	"src": "6307:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 406,
																"indexExpression": {
																	"id": 405,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 384,
																	"src": "6317:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6307:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6285:37:1"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 410,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 408,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 403,
																	"src": "6340:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 409,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "6354:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6340:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 418,
															"nodeType": "IfStatement",
															"src": "6336:115:1",
															"trueBody": {
																"id": 417,
																"nodeType": "Block",
																"src": "6361:90:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 412,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 384,
																					"src": "6411:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 413,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 403,
																					"src": "6417:11:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 414,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 388,
																					"src": "6430:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 411,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 11,
																				"src": "6386:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 415,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6386:50:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 416,
																		"nodeType": "RevertStatement",
																		"src": "6379:57:1"
																	}
																]
															}
														},
														{
															"id": 427,
															"nodeType": "UncheckedBlock",
															"src": "6464:159:1",
															"statements": [
																{
																	"expression": {
																		"id": 425,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 419,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6571:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 421,
																			"indexExpression": {
																				"id": 420,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 384,
																				"src": "6581:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6571:15:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 424,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 422,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 403,
																				"src": "6589:11:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 423,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 388,
																				"src": "6603:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6589:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6571:37:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 426,
																	"nodeType": "ExpressionStatement",
																	"src": "6571:37:1"
																}
															]
														}
													]
												},
												"id": 429,
												"nodeType": "IfStatement",
												"src": "6093:540:1",
												"trueBody": {
													"id": 401,
													"nodeType": "Block",
													"src": "6117:148:1",
													"statements": [
														{
															"expression": {
																"id": 399,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 397,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 167,
																	"src": "6233:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 398,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "6249:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6233:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 400,
															"nodeType": "ExpressionStatement",
															"src": "6233:21:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 430,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 386,
														"src": "6647:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 433,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6661:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 432,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6653:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 431,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6653:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 434,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6653:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6647:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 449,
													"nodeType": "Block",
													"src": "6862:206:1",
													"statements": [
														{
															"id": 448,
															"nodeType": "UncheckedBlock",
															"src": "6876:182:1",
															"statements": [
																{
																	"expression": {
																		"id": 446,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 442,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "7021:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 444,
																			"indexExpression": {
																				"id": 443,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 386,
																				"src": "7031:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7021:13:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 445,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 388,
																			"src": "7038:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7021:22:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 447,
																	"nodeType": "ExpressionStatement",
																	"src": "7021:22:1"
																}
															]
														}
													]
												},
												"id": 450,
												"nodeType": "IfStatement",
												"src": "6643:425:1",
												"trueBody": {
													"id": 441,
													"nodeType": "Block",
													"src": "6665:191:1",
													"statements": [
														{
															"id": 440,
															"nodeType": "UncheckedBlock",
															"src": "6679:167:1",
															"statements": [
																{
																	"expression": {
																		"id": 438,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 436,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 167,
																			"src": "6810:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 437,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 388,
																			"src": "6826:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6810:21:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 439,
																	"nodeType": "ExpressionStatement",
																	"src": "6810:21:1"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 452,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 384,
															"src": "7092:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 453,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 386,
															"src": "7098:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 454,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "7102:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 451,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 663,
														"src": "7083:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7083:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 456,
												"nodeType": "EmitStatement",
												"src": "7078:30:1"
											}
										]
									},
									"documentation": {
										"id": 382,
										"nodeType": "StructuredDocumentation",
										"src": "5699:304:1",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 458,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6017:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6033:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6025:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6025:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6047:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6039:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6039:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6059:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6051:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 387,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6051:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6024:41:1"
									},
									"returnParameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6083:0:1"
									},
									"scope": 651,
									"src": "6008:1107:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 490,
										"nodeType": "Block",
										"src": "7514:152:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 466,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 461,
														"src": "7528:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 469,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7547:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 468,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7539:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 467,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7539:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 470,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7539:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7528:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 480,
												"nodeType": "IfStatement",
												"src": "7524:91:1",
												"trueBody": {
													"id": 479,
													"nodeType": "Block",
													"src": "7551:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 475,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7601:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 474,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7593:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 473,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7593:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 476,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7593:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 472,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "7572:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 477,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7572:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 478,
															"nodeType": "RevertStatement",
															"src": "7565:39:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 484,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7640:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 483,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7632:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 482,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7632:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 485,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7632:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 486,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 461,
															"src": "7644:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 487,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "7653:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 481,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "7624:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7624:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 489,
												"nodeType": "ExpressionStatement",
												"src": "7624:35:1"
											}
										]
									},
									"documentation": {
										"id": 459,
										"nodeType": "StructuredDocumentation",
										"src": "7121:332:1",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 491,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7467:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7481:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "7473:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 460,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7473:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7498:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "7490:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 462,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7490:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7472:32:1"
									},
									"returnParameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7514:0:1"
									},
									"scope": 651,
									"src": "7458:208:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 523,
										"nodeType": "Block",
										"src": "8040:150:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 499,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 494,
														"src": "8054:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 502,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8073:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 501,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8065:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 500,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8065:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 503,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8065:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8054:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 513,
												"nodeType": "IfStatement",
												"src": "8050:89:1",
												"trueBody": {
													"id": 512,
													"nodeType": "Block",
													"src": "8077:62:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 508,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8125:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 507,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8117:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 506,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8117:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 509,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8117:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 505,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "8098:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8098:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 511,
															"nodeType": "RevertStatement",
															"src": "8091:37:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 515,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 494,
															"src": "8156:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 518,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8173:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 517,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8165:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 516,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8165:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 519,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8165:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 520,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 496,
															"src": "8177:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 514,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "8148:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8148:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 522,
												"nodeType": "ExpressionStatement",
												"src": "8148:35:1"
											}
										]
									},
									"documentation": {
										"id": 492,
										"nodeType": "StructuredDocumentation",
										"src": "7672:307:1",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 524,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "7993:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8007:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "7999:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 493,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7999:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8024:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "8016:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 495,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8016:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7998:32:1"
									},
									"returnParameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8040:0:1"
									},
									"scope": 651,
									"src": "7984:206:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 541,
										"nodeType": "Block",
										"src": "8800:54:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 535,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 527,
															"src": "8819:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 536,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 529,
															"src": "8826:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 537,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 531,
															"src": "8835:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 538,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8842:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 534,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															542,
															602
														],
														"referencedDeclaration": 602,
														"src": "8810:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8810:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 540,
												"nodeType": "ExpressionStatement",
												"src": "8810:37:1"
											}
										]
									},
									"documentation": {
										"id": 525,
										"nodeType": "StructuredDocumentation",
										"src": "8196:525:1",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 542,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8735:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8752:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "8744:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 526,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8744:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8767:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "8759:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 528,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8759:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8784:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "8776:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 530,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8776:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8743:47:1"
									},
									"returnParameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8800:0:1"
									},
									"scope": 651,
									"src": "8726:128:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 601,
										"nodeType": "Block",
										"src": "9799:334:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 559,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 554,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 545,
														"src": "9813:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 557,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9830:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 556,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9822:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 555,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9822:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 558,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9822:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9813:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 568,
												"nodeType": "IfStatement",
												"src": "9809:89:1",
												"trueBody": {
													"id": 567,
													"nodeType": "Block",
													"src": "9834:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 563,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9884:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 562,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9876:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 561,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9876:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 564,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9876:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 560,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "9855:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 565,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9855:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 566,
															"nodeType": "RevertStatement",
															"src": "9848:39:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 569,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 547,
														"src": "9911:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 572,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9930:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 571,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9922:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 570,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9922:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 573,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9922:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9911:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 583,
												"nodeType": "IfStatement",
												"src": "9907:90:1",
												"trueBody": {
													"id": 582,
													"nodeType": "Block",
													"src": "9934:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 578,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9983:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 577,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9975:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 576,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9975:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 579,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9975:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 575,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "9955:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 580,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9955:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 581,
															"nodeType": "RevertStatement",
															"src": "9948:38:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 584,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 165,
																"src": "10006:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 587,
															"indexExpression": {
																"id": 585,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 545,
																"src": "10018:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10006:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 588,
														"indexExpression": {
															"id": 586,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 547,
															"src": "10025:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10006:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 589,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 549,
														"src": "10036:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10006:35:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 591,
												"nodeType": "ExpressionStatement",
												"src": "10006:35:1"
											},
											{
												"condition": {
													"id": 592,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 551,
													"src": "10055:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 600,
												"nodeType": "IfStatement",
												"src": "10051:76:1",
												"trueBody": {
													"id": 599,
													"nodeType": "Block",
													"src": "10066:61:1",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 594,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 545,
																		"src": "10094:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 595,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 547,
																		"src": "10101:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 596,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 549,
																		"src": "10110:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 593,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 672,
																	"src": "10085:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 597,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10085:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 598,
															"nodeType": "EmitStatement",
															"src": "10080:36:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 543,
										"nodeType": "StructuredDocumentation",
										"src": "8860:836:1",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 602,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9710:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 545,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9727:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9719:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 544,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9719:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 547,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9742:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9734:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 546,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9734:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 549,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9759:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9751:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 548,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9751:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 551,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "9771:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9766:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 550,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9766:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9718:63:1"
									},
									"returnParameters": {
										"id": 553,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9799:0:1"
									},
									"scope": 651,
									"src": "9701:432:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 649,
										"nodeType": "Block",
										"src": "10504:388:1",
										"statements": [
											{
												"assignments": [
													613
												],
												"declarations": [
													{
														"constant": false,
														"id": 613,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10522:16:1",
														"nodeType": "VariableDeclaration",
														"scope": 649,
														"src": "10514:24:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 612,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10514:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 618,
												"initialValue": {
													"arguments": [
														{
															"id": 615,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 605,
															"src": "10551:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 616,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 607,
															"src": "10558:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 614,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 278,
														"src": "10541:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 617,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10541:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10514:52:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 619,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 613,
														"src": "10580:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 622,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10605:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 621,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10605:7:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 620,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10600:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 623,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10600:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 624,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10614:3:1",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10600:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10580:37:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 648,
												"nodeType": "IfStatement",
												"src": "10576:310:1",
												"trueBody": {
													"id": 647,
													"nodeType": "Block",
													"src": "10619:267:1",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 628,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 626,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 613,
																	"src": "10637:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 627,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 609,
																	"src": "10656:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10637:24:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 636,
															"nodeType": "IfStatement",
															"src": "10633:130:1",
															"trueBody": {
																"id": 635,
																"nodeType": "Block",
																"src": "10663:100:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 630,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 607,
																					"src": "10715:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 631,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 613,
																					"src": "10724:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 632,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 609,
																					"src": "10742:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 629,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 30,
																				"src": "10688:26:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 633,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10688:60:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 634,
																		"nodeType": "RevertStatement",
																		"src": "10681:67:1"
																	}
																]
															}
														},
														{
															"id": 646,
															"nodeType": "UncheckedBlock",
															"src": "10776:100:1",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 638,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 605,
																				"src": "10813:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 639,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 607,
																				"src": "10820:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 642,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 640,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 613,
																					"src": "10829:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 641,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 609,
																					"src": "10848:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10829:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 643,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10855:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 637,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				542,
																				602
																			],
																			"referencedDeclaration": 602,
																			"src": "10804:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 644,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10804:57:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 645,
																	"nodeType": "ExpressionStatement",
																	"src": "10804:57:1"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 603,
										"nodeType": "StructuredDocumentation",
										"src": "10139:271:1",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 650,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10424:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 605,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10448:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10440:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 604,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10440:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10463:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10455:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 606,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10455:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10480:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10472:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 608,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10472:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10439:47:1"
									},
									"returnParameters": {
										"id": 611,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10504:0:1"
									},
									"scope": 651,
									"src": "10415:477:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 652,
							"src": "1106:9788:1",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "105:10790:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							729
						]
					},
					"id": 730,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 653,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 654,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:2",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 729,
							"linearizedBaseContracts": [
								729
							],
							"name": "IERC20",
							"nameLocation": "214:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 655,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 663,
									"name": "Transfer",
									"nameLocation": "396:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 657,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "405:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 656,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 659,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "427:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 658,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 661,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "447:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 660,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:2"
									},
									"src": "390:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 664,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 672,
									"name": "Approval",
									"nameLocation": "627:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 666,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "636:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 665,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 668,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "659:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 667,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 670,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "684:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 669,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:2"
									},
									"src": "621:78:2"
								},
								{
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:2",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 678,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:2"
									},
									"returnParameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "821:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 675,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:2"
									},
									"scope": 729,
									"src": "775:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 679,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:2",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 686,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "931:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 680,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:2"
									},
									"returnParameters": {
										"id": 685,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "971:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 683,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:2"
									},
									"scope": 729,
									"src": "912:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 687,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:2",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 696,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 689,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1222:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 688,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1234:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 690,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:2"
									},
									"returnParameters": {
										"id": 695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 694,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1267:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 693,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:2"
									},
									"scope": 729,
									"src": "1204:69:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 697,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 706,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1567:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 698,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 701,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1582:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 700,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:2"
									},
									"returnParameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1622:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 703,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:2"
									},
									"scope": 729,
									"src": "1548:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 707,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:2",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 716,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2326:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 708,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 711,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2343:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 710,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:2"
									},
									"returnParameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 714,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2376:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 713,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:2"
									},
									"scope": 729,
									"src": "2309:73:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 717,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 728,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2712:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 718,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 721,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2726:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 720,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2738:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 722,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:2"
									},
									"returnParameters": {
										"id": 727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2771:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 725,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:2"
									},
									"scope": 729,
									"src": "2690:87:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 730,
							"src": "204:2575:2",
							"usedErrors": [],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "106:2674:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							729
						],
						"IERC20Metadata": [
							755
						]
					},
					"id": 756,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 731,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 733,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 756,
							"sourceUnit": 730,
							"src": "151:37:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 732,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 729,
										"src": "159:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 735,
										"name": "IERC20",
										"nameLocations": [
											"306:6:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 729,
										"src": "306:6:3"
									},
									"id": 736,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:3"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 734,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:3",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 755,
							"linearizedBaseContracts": [
								755,
								729
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 737,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:3",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 742,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 738,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:3"
									},
									"returnParameters": {
										"id": 741,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 740,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 742,
												"src": "417:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 739,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:3"
									},
									"scope": 755,
									"src": "378:54:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 743,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:3",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 748,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 744,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:3"
									},
									"returnParameters": {
										"id": 747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "540:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 745,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:3"
									},
									"scope": 755,
									"src": "499:56:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 749,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:3",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 754,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 750,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:3"
									},
									"returnParameters": {
										"id": 753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 752,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 754,
												"src": "674:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 751,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:3"
									},
									"scope": 755,
									"src": "631:50:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 756,
							"src": "278:405:3",
							"usedErrors": [],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "125:559:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							785
						]
					},
					"id": 786,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 757,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:4"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 758,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:4",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 785,
							"linearizedBaseContracts": [
								785
							],
							"name": "Context",
							"nameLocation": "642:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 766,
										"nodeType": "Block",
										"src": "718:34:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 763,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 764,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:4",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 762,
												"id": 765,
												"nodeType": "Return",
												"src": "728:17:4"
											}
										]
									},
									"id": 767,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:4"
									},
									"returnParameters": {
										"id": 762,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 761,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "709:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 760,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:4"
									},
									"scope": 785,
									"src": "656:96:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 775,
										"nodeType": "Block",
										"src": "825:32:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 772,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:4",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 771,
												"id": 774,
												"nodeType": "Return",
												"src": "835:15:4"
											}
										]
									},
									"id": 776,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 768,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:4"
									},
									"returnParameters": {
										"id": 771,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 770,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "809:14:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 769,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:4"
									},
									"scope": 785,
									"src": "758:99:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 783,
										"nodeType": "Block",
										"src": "935:25:4",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 781,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 780,
												"id": 782,
												"nodeType": "Return",
												"src": "945:8:4"
											}
										]
									},
									"id": 784,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 777,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:4"
									},
									"returnParameters": {
										"id": 780,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 779,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 784,
												"src": "926:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 778,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:4"
									},
									"scope": 785,
									"src": "863:97:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 786,
							"src": "624:338:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:4"
				},
				"id": 4
			},
			"JERC20.sol": {
				"ast": {
					"absolutePath": "JERC20.sol",
					"exportedSymbols": {
						"ERC20": [
							651
						],
						"IJERC20": [
							865
						],
						"MyToken": [
							1285
						]
					},
					"id": 1286,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 787,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".26"
							],
							"nodeType": "PragmaDirective",
							"src": "34:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 789,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1286,
							"sourceUnit": 652,
							"src": "60:68:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 788,
										"name": "ERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 651,
										"src": "68:5:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IJERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 790,
								"nodeType": "StructuredDocumentation",
								"src": "132:169:5",
								"text": " @title ERC-20 custom token IJERC-20 Interface\n @notice this implements an JERC-20 token.\n @author ~ Jorge Enrique Cabrera Curso Ashitaka ETH KIPU 2024"
							},
							"fullyImplemented": false,
							"id": 865,
							"linearizedBaseContracts": [
								865
							],
							"name": "IJERC20",
							"nameLocation": "315:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 791,
										"nodeType": "StructuredDocumentation",
										"src": "330:155:5",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 799,
									"name": "Transfer",
									"nameLocation": "497:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 798,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 793,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "522:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 799,
												"src": "506:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 792,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "506:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 795,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "544:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 799,
												"src": "528:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 794,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "528:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 797,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "556:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 799,
												"src": "548:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 796,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "548:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "505:57:5"
									},
									"src": "491:72:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 800,
										"nodeType": "StructuredDocumentation",
										"src": "571:151:5",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 808,
									"name": "Approval",
									"nameLocation": "734:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 807,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 802,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "759:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 808,
												"src": "743:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 801,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "743:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 804,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "782:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 808,
												"src": "766:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 803,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "766:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 806,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "799:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 808,
												"src": "791:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 805,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "791:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "742:63:5"
									},
									"src": "728:78:5"
								},
								{
									"documentation": {
										"id": 809,
										"nodeType": "StructuredDocumentation",
										"src": "815:74:5",
										"text": " @dev Returns the total amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 814,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "904:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 810,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "915:2:5"
									},
									"returnParameters": {
										"id": 813,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 812,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 814,
												"src": "941:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 811,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "941:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "940:9:5"
									},
									"scope": 865,
									"src": "895:55:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 815,
										"nodeType": "StructuredDocumentation",
										"src": "958:74:5",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 822,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1047:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 818,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 817,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1065:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 822,
												"src": "1057:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 816,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1057:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1056:17:5"
									},
									"returnParameters": {
										"id": 821,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 820,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 822,
												"src": "1097:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 819,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1097:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1096:9:5"
									},
									"scope": 865,
									"src": "1038:68:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 823,
										"nodeType": "StructuredDocumentation",
										"src": "1114:160:5",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a ~ success boolean value\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 832,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1289:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 828,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 825,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1306:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 832,
												"src": "1298:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 824,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1298:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 827,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1318:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 832,
												"src": "1310:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 826,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1310:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1297:28:5"
									},
									"returnParameters": {
										"id": 831,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 830,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 832,
												"src": "1344:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 829,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1344:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1343:6:5"
									},
									"scope": 865,
									"src": "1280:70:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 833,
										"nodeType": "StructuredDocumentation",
										"src": "1358:249:5",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. \n default: 0\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 842,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1622:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 838,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 835,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1640:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 842,
												"src": "1632:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 834,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1632:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1655:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 842,
												"src": "1647:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 836,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1647:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1631:32:5"
									},
									"returnParameters": {
										"id": 841,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 840,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 842,
												"src": "1687:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 839,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1687:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1686:9:5"
									},
									"scope": 865,
									"src": "1613:83:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 843,
										"nodeType": "StructuredDocumentation",
										"src": "1704:171:5",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded."
									},
									"functionSelector": "095ea7b3",
									"id": 852,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "1890:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 848,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 845,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1906:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 852,
												"src": "1898:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 844,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1898:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 847,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1923:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 852,
												"src": "1915:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 846,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1915:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1897:33:5"
									},
									"returnParameters": {
										"id": 851,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 850,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 852,
												"src": "1949:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 849,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1949:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1948:6:5"
									},
									"scope": 865,
									"src": "1881:74:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 853,
										"nodeType": "StructuredDocumentation",
										"src": "1963:279:5",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 864,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2257:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 855,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2288:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2280:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 854,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2280:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2311:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2303:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 856,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2303:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2332:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2324:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 858,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2324:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2269:76:5"
									},
									"returnParameters": {
										"id": 863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 862,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2364:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 861,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2364:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2363:6:5"
									},
									"scope": 865,
									"src": "2248:122:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1286,
							"src": "305:2068:5",
							"usedErrors": [],
							"usedEvents": [
								799,
								808
							]
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 866,
										"name": "IJERC20",
										"nameLocations": [
											"2399:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 865,
										"src": "2399:7:5"
									},
									"id": 867,
									"nodeType": "InheritanceSpecifier",
									"src": "2399:7:5"
								}
							],
							"canonicalName": "MyToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1285,
							"linearizedBaseContracts": [
								1285,
								865
							],
							"name": "MyToken",
							"nameLocation": "2388:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 871,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "2450:9:5",
									"nodeType": "VariableDeclaration",
									"scope": 1285,
									"src": "2414:45:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 870,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 868,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2422:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2414:27:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 869,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "2433:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 877,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "2522:11:5",
									"nodeType": "VariableDeclaration",
									"scope": 1285,
									"src": "2466:67:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 876,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 872,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2474:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2466:47:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 875,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 873,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2493:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "2485:27:5",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 874,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2504:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 879,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "2558:12:5",
									"nodeType": "VariableDeclaration",
									"scope": 1285,
									"src": "2542:28:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 878,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2542:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 881,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "2592:5:5",
									"nodeType": "VariableDeclaration",
									"scope": 1285,
									"src": "2577:20:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 880,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "2577:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 883,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "2619:7:5",
									"nodeType": "VariableDeclaration",
									"scope": 1285,
									"src": "2604:22:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 882,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "2604:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 909,
										"nodeType": "Block",
										"src": "2833:92:5",
										"statements": [
											{
												"expression": {
													"id": 893,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 891,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 881,
														"src": "2840:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 892,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 886,
														"src": "2848:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2840:13:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 894,
												"nodeType": "ExpressionStatement",
												"src": "2840:13:5"
											},
											{
												"expression": {
													"id": 897,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 895,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 883,
														"src": "2860:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 896,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 888,
														"src": "2870:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2860:17:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 898,
												"nodeType": "ExpressionStatement",
												"src": "2860:17:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 900,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2890:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 901,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2894:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2890:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_rational_1000000000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000000000"
															},
															"id": 906,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "31303030303030",
																"id": 902,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2902:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000_by_1",
																	"typeString": "int_const 1000000"
																},
																"value": "1000000"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																},
																"id": 905,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 903,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2912:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3138",
																	"id": 904,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2918:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_18_by_1",
																		"typeString": "int_const 18"
																	},
																	"value": "18"
																},
																"src": "2912:8:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																}
															},
															"src": "2902:18:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000000000"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_1000000000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000000000"
															}
														],
														"id": 899,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1196,
														"src": "2884:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 907,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2884:37:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 908,
												"nodeType": "ExpressionStatement",
												"src": "2884:37:5"
											}
										]
									},
									"documentation": {
										"id": 884,
										"nodeType": "StructuredDocumentation",
										"src": "2635:140:5",
										"text": " @notice Constructs the token with a name and symbol\n @param name_ token name\n @param symbol_ token symbol"
									},
									"id": 910,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 889,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 886,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "2803:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 910,
												"src": "2789:19:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 885,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2789:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 888,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "2824:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 910,
												"src": "2810:21:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 887,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2810:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2788:44:5"
									},
									"returnParameters": {
										"id": 890,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2833:0:5"
									},
									"scope": 1285,
									"src": "2777:148:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 918,
										"nodeType": "Block",
										"src": "3074:31:5",
										"statements": [
											{
												"expression": {
													"id": 916,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 881,
													"src": "3092:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 915,
												"id": 917,
												"nodeType": "Return",
												"src": "3085:12:5"
											}
										]
									},
									"documentation": {
										"id": 911,
										"nodeType": "StructuredDocumentation",
										"src": "2933:75:5",
										"text": " @notice Returns token name\n @return token name"
									},
									"functionSelector": "06fdde03",
									"id": 919,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "3023:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 912,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3027:2:5"
									},
									"returnParameters": {
										"id": 915,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 914,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 919,
												"src": "3059:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 913,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3059:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3058:15:5"
									},
									"scope": 1285,
									"src": "3014:91:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 927,
										"nodeType": "Block",
										"src": "3259:33:5",
										"statements": [
											{
												"expression": {
													"id": 925,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 883,
													"src": "3277:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 924,
												"id": 926,
												"nodeType": "Return",
												"src": "3270:14:5"
											}
										]
									},
									"documentation": {
										"id": 920,
										"nodeType": "StructuredDocumentation",
										"src": "3113:78:5",
										"text": " @notice Returns token symbol\n @return token symbol"
									},
									"functionSelector": "95d89b41",
									"id": 928,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "3206:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 921,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3212:2:5"
									},
									"returnParameters": {
										"id": 924,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 923,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 928,
												"src": "3244:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 922,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3244:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3243:15:5"
									},
									"scope": 1285,
									"src": "3197:95:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 936,
										"nodeType": "Block",
										"src": "3399:28:5",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 934,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3417:2:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 933,
												"id": 935,
												"nodeType": "Return",
												"src": "3410:9:5"
											}
										]
									},
									"documentation": {
										"id": 929,
										"nodeType": "StructuredDocumentation",
										"src": "3300:37:5",
										"text": " @return decimals"
									},
									"functionSelector": "313ce567",
									"id": 937,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3352:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 930,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3360:2:5"
									},
									"returnParameters": {
										"id": 933,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 932,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 937,
												"src": "3392:5:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 931,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3392:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3391:7:5"
									},
									"scope": 1285,
									"src": "3343:84:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										814
									],
									"body": {
										"id": 946,
										"nodeType": "Block",
										"src": "3562:38:5",
										"statements": [
											{
												"expression": {
													"id": 944,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 879,
													"src": "3580:12:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 943,
												"id": 945,
												"nodeType": "Return",
												"src": "3573:19:5"
											}
										]
									},
									"documentation": {
										"id": 938,
										"nodeType": "StructuredDocumentation",
										"src": "3435:51:5",
										"text": " @return total supply of tokens"
									},
									"functionSelector": "18160ddd",
									"id": 947,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3501:11:5",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 940,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3535:8:5"
									},
									"parameters": {
										"id": 939,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3512:2:5"
									},
									"returnParameters": {
										"id": 943,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 942,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "3553:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 941,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3553:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3552:9:5"
									},
									"scope": 1285,
									"src": "3492:108:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										822
									],
									"body": {
										"id": 960,
										"nodeType": "Block",
										"src": "3840:44:5",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 956,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 871,
														"src": "3858:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 958,
													"indexExpression": {
														"id": 957,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 950,
														"src": "3868:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3858:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 955,
												"id": 959,
												"nodeType": "Return",
												"src": "3851:25:5"
											}
										]
									},
									"documentation": {
										"id": 948,
										"nodeType": "StructuredDocumentation",
										"src": "3608:143:5",
										"text": " @notice Returns account balance of tokens\n @param account account address\n @return account balance of tokens"
									},
									"functionSelector": "70a08231",
									"id": 961,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3766:9:5",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 952,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3813:8:5"
									},
									"parameters": {
										"id": 951,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 950,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3784:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 961,
												"src": "3776:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 949,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3776:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3775:17:5"
									},
									"returnParameters": {
										"id": 955,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 954,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 961,
												"src": "3831:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 953,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3831:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3830:9:5"
									},
									"scope": 1285,
									"src": "3757:127:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										832
									],
									"body": {
										"id": 985,
										"nodeType": "Block",
										"src": "4248:106:5",
										"statements": [
											{
												"assignments": [
													973
												],
												"declarations": [
													{
														"constant": false,
														"id": 973,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4267:5:5",
														"nodeType": "VariableDeclaration",
														"scope": 985,
														"src": "4259:13:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 972,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4259:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 976,
												"initialValue": {
													"expression": {
														"id": 974,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "4275:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 975,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4279:6:5",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "4275:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4259:26:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 978,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 973,
															"src": "4306:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 979,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 964,
															"src": "4313:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 980,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 966,
															"src": "4317:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 977,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1127,
														"src": "4296:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 981,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4296:28:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 982,
												"nodeType": "ExpressionStatement",
												"src": "4296:28:5"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 983,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4342:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 971,
												"id": 984,
												"nodeType": "Return",
												"src": "4335:11:5"
											}
										]
									},
									"documentation": {
										"id": 962,
										"nodeType": "StructuredDocumentation",
										"src": "3892:265:5",
										"text": " @notice Transfers tokens from the caller to another address.\n @param to recipient address\n @param amount tokens amount to transfer\n @return A maybe successful ~ boolean value \n @dev _transfer emits a {Transfer} event"
									},
									"functionSelector": "a9059cbb",
									"id": 986,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "4172:8:5",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 968,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4224:8:5"
									},
									"parameters": {
										"id": 967,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 964,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4189:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 986,
												"src": "4181:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 963,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4181:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 966,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4201:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 986,
												"src": "4193:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 965,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4193:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4180:28:5"
									},
									"returnParameters": {
										"id": 971,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 970,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 986,
												"src": "4242:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 969,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4242:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4241:6:5"
									},
									"scope": 1285,
									"src": "4163:191:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										842
									],
									"body": {
										"id": 1003,
										"nodeType": "Block",
										"src": "4760:53:5",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 997,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 877,
															"src": "4778:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 999,
														"indexExpression": {
															"id": 998,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 989,
															"src": "4790:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4778:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1001,
													"indexExpression": {
														"id": 1000,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 991,
														"src": "4797:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4778:27:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 996,
												"id": 1002,
												"nodeType": "Return",
												"src": "4771:34:5"
											}
										]
									},
									"documentation": {
										"id": 987,
										"nodeType": "StructuredDocumentation",
										"src": "4362:294:5",
										"text": " @notice Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom} \n default 0\n @param owner owner token address\n @param spender spender address\n @return remaining allowance"
									},
									"functionSelector": "dd62ed3e",
									"id": 1004,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "4671:9:5",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 993,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4733:8:5"
									},
									"parameters": {
										"id": 992,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 989,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4689:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1004,
												"src": "4681:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 988,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4681:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 991,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4704:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1004,
												"src": "4696:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 990,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4696:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4680:32:5"
									},
									"returnParameters": {
										"id": 996,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 995,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1004,
												"src": "4751:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 994,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4751:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4750:9:5"
									},
									"scope": 1285,
									"src": "4662:151:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										852
									],
									"body": {
										"id": 1028,
										"nodeType": "Block",
										"src": "5192:110:5",
										"statements": [
											{
												"assignments": [
													1016
												],
												"declarations": [
													{
														"constant": false,
														"id": 1016,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "5211:5:5",
														"nodeType": "VariableDeclaration",
														"scope": 1028,
														"src": "5203:13:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1015,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5203:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1019,
												"initialValue": {
													"expression": {
														"id": 1017,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "5219:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1018,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "5223:6:5",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "5219:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5203:26:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1021,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1016,
															"src": "5249:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1022,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1007,
															"src": "5256:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1023,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1009,
															"src": "5265:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1020,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1241,
														"src": "5240:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1024,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5240:32:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1025,
												"nodeType": "ExpressionStatement",
												"src": "5240:32:5"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1026,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5290:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1014,
												"id": 1027,
												"nodeType": "Return",
												"src": "5283:11:5"
											}
										]
									},
									"documentation": {
										"id": 1005,
										"nodeType": "StructuredDocumentation",
										"src": "4821:276:5",
										"text": " @notice Sets `amount` as the allowance of `spender` over the caller's tokens.\n @param spender spender address\n @param amount tokens amount to allow.\n @return A ~ succesful boolean value\n @dev _approve emits the {Approval} event"
									},
									"functionSelector": "095ea7b3",
									"id": 1029,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "5112:7:5",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1011,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5168:8:5"
									},
									"parameters": {
										"id": 1010,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1007,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5128:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1029,
												"src": "5120:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1006,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5120:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1009,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5145:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1029,
												"src": "5137:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1008,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5137:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5119:33:5"
									},
									"returnParameters": {
										"id": 1014,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1013,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1029,
												"src": "5186:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1012,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5186:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5185:6:5"
									},
									"scope": 1285,
									"src": "5103:199:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										864
									],
									"body": {
										"id": 1061,
										"nodeType": "Block",
										"src": "5838:156:5",
										"statements": [
											{
												"assignments": [
													1043
												],
												"declarations": [
													{
														"constant": false,
														"id": 1043,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "5857:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 1061,
														"src": "5849:15:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1042,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5849:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1046,
												"initialValue": {
													"expression": {
														"id": 1044,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "5867:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1045,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "5871:6:5",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "5867:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5849:28:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1048,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1032,
															"src": "5904:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1049,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1043,
															"src": "5910:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1050,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1036,
															"src": "5919:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1047,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1284,
														"src": "5888:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1051,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5888:38:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1052,
												"nodeType": "ExpressionStatement",
												"src": "5888:38:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1054,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1032,
															"src": "5947:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1055,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1034,
															"src": "5953:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1056,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1036,
															"src": "5957:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1053,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1127,
														"src": "5937:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1057,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5937:27:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1058,
												"nodeType": "ExpressionStatement",
												"src": "5937:27:5"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1059,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5982:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1041,
												"id": 1060,
												"nodeType": "Return",
												"src": "5975:11:5"
											}
										]
									},
									"documentation": {
										"id": 1030,
										"nodeType": "StructuredDocumentation",
										"src": "5310:385:5",
										"text": " @notice Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance\n @param from msg sender address\n @param to recipient address\n @param amount tokens amount to transfer\n @return A ~succesful boolean value\n @dev _transfer emits a {Transfer} event"
									},
									"functionSelector": "23b872dd",
									"id": 1062,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5710:12:5",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1038,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5814:8:5"
									},
									"parameters": {
										"id": 1037,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1032,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5741:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1062,
												"src": "5733:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1031,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5733:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1034,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5764:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1062,
												"src": "5756:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1033,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5756:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1036,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5785:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1062,
												"src": "5777:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1035,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5777:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5722:76:5"
									},
									"returnParameters": {
										"id": 1041,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1040,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1062,
												"src": "5832:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1039,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5832:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5831:6:5"
									},
									"scope": 1285,
									"src": "5701:293:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1126,
										"nodeType": "Block",
										"src": "6511:577:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1078,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1073,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1065,
																"src": "6530:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1076,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6546:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1075,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6538:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1074,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6538:7:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 1077,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6538:10:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "6530:18:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e736665722066726f6d20616464726573732030",
															"id": 1079,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6550:25:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7d79078ae789ab4c477aa2fd5708f247777d35469b9b56847e43bb56bb8a9596",
																"typeString": "literal_string \"Transfer from address 0\""
															},
															"value": "Transfer from address 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7d79078ae789ab4c477aa2fd5708f247777d35469b9b56847e43bb56bb8a9596",
																"typeString": "literal_string \"Transfer from address 0\""
															}
														],
														"id": 1072,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6522:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1080,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6522:54:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1081,
												"nodeType": "ExpressionStatement",
												"src": "6522:54:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1088,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1083,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1067,
																"src": "6595:2:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1086,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6609:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1085,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6601:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1084,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6601:7:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 1087,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6601:10:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "6595:16:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e7366657220746f20616464726573732030",
															"id": 1089,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6613:23:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5a98b1b7aea43f8d2c5e7374d83247c617d61e309a25e04b2d187396e80e2f33",
																"typeString": "literal_string \"Transfer to address 0\""
															},
															"value": "Transfer to address 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5a98b1b7aea43f8d2c5e7374d83247c617d61e309a25e04b2d187396e80e2f33",
																"typeString": "literal_string \"Transfer to address 0\""
															}
														],
														"id": 1082,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6587:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1090,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6587:50:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1091,
												"nodeType": "ExpressionStatement",
												"src": "6587:50:5"
											},
											{
												"assignments": [
													1093
												],
												"declarations": [
													{
														"constant": false,
														"id": 1093,
														"mutability": "mutable",
														"name": "fromBalance",
														"nameLocation": "6658:11:5",
														"nodeType": "VariableDeclaration",
														"scope": 1126,
														"src": "6650:19:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1092,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6650:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1097,
												"initialValue": {
													"baseExpression": {
														"id": 1094,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 871,
														"src": "6672:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1096,
													"indexExpression": {
														"id": 1095,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1065,
														"src": "6682:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6672:15:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6650:37:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1101,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1099,
																"name": "fromBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1093,
																"src": "6706:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1100,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1069,
																"src": "6721:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6706:21:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "42616c616e6365206578636565646564",
															"id": 1102,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6729:18:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_651eb56b4057abdaf2e587df909bfa283fd53bb02e7bec01c656b90461b28a33",
																"typeString": "literal_string \"Balance exceeded\""
															},
															"value": "Balance exceeded"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_651eb56b4057abdaf2e587df909bfa283fd53bb02e7bec01c656b90461b28a33",
																"typeString": "literal_string \"Balance exceeded\""
															}
														],
														"id": 1098,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6698:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6698:50:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1104,
												"nodeType": "ExpressionStatement",
												"src": "6698:50:5"
											},
											{
												"id": 1119,
												"nodeType": "UncheckedBlock",
												"src": "6759:278:5",
												"statements": [
													{
														"expression": {
															"id": 1111,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1105,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 871,
																	"src": "6784:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1107,
																"indexExpression": {
																	"id": 1106,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1065,
																	"src": "6794:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "6784:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1110,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1108,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1093,
																	"src": "6802:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 1109,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1069,
																	"src": "6816:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6802:20:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6784:38:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1112,
														"nodeType": "ExpressionStatement",
														"src": "6784:38:5"
													},
													{
														"expression": {
															"id": 1117,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1113,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 871,
																	"src": "7002:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1115,
																"indexExpression": {
																	"id": 1114,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1067,
																	"src": "7012:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "7002:13:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 1116,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1069,
																"src": "7019:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7002:23:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1118,
														"nodeType": "ExpressionStatement",
														"src": "7002:23:5"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1121,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1065,
															"src": "7063:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1122,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1067,
															"src": "7069:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1123,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1069,
															"src": "7073:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1120,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 799,
														"src": "7054:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1124,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7054:26:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1125,
												"nodeType": "EmitStatement",
												"src": "7049:31:5"
											}
										]
									},
									"documentation": {
										"id": 1063,
										"nodeType": "StructuredDocumentation",
										"src": "6002:391:5",
										"text": " @notice Transfers `amount` tokens from `from` to `to`.\n @param from msg sender address\n @param to recipient address\n @param amount tokens amount to transfer\n @dev This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n @dev Emits a {Transfer} event"
									},
									"id": 1127,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "6408:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1070,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1065,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6436:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1127,
												"src": "6428:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1064,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6428:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1067,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6459:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1127,
												"src": "6451:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1066,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6451:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1069,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6480:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1127,
												"src": "6472:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1068,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6472:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6417:76:5"
									},
									"returnParameters": {
										"id": 1071,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6511:0:5"
									},
									"scope": 1285,
									"src": "6399:689:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1156,
										"nodeType": "Block",
										"src": "7401:121:5",
										"statements": [
											{
												"body": {
													"id": 1154,
													"nodeType": "Block",
													"src": "7460:55:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"baseExpression": {
																			"id": 1148,
																			"name": "recipients",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1131,
																			"src": "7481:10:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																				"typeString": "address[] memory"
																			}
																		},
																		"id": 1150,
																		"indexExpression": {
																			"id": 1149,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1137,
																			"src": "7492:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "7481:13:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1151,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1133,
																		"src": "7496:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1147,
																	"name": "_mint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1196,
																	"src": "7475:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 1152,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7475:28:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1153,
															"nodeType": "ExpressionStatement",
															"src": "7475:28:5"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1140,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1137,
														"src": "7432:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1141,
															"name": "recipients",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1131,
															"src": "7436:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 1142,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7447:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "7436:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7432:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1155,
												"initializationExpression": {
													"assignments": [
														1137
													],
													"declarations": [
														{
															"constant": false,
															"id": 1137,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "7425:1:5",
															"nodeType": "VariableDeclaration",
															"scope": 1155,
															"src": "7417:9:5",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1136,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "7417:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1139,
													"initialValue": {
														"hexValue": "30",
														"id": 1138,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7429:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "7417:13:5"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 1145,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "7455:3:5",
														"subExpression": {
															"id": 1144,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1137,
															"src": "7455:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1146,
													"nodeType": "ExpressionStatement",
													"src": "7455:3:5"
												},
												"nodeType": "ForStatement",
												"src": "7412:103:5"
											}
										]
									},
									"documentation": {
										"id": 1128,
										"nodeType": "StructuredDocumentation",
										"src": "7096:218:5",
										"text": " @notice Transfers `amount` tokens from `from` to `to`.\n @param recipients addresses array\n @param amount tokens amount to distribute\n @dev mint tokens _mint emits Transfer event"
									},
									"functionSelector": "256fa241",
									"id": 1157,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "distributeTokens",
									"nameLocation": "7332:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1131,
												"mutability": "mutable",
												"name": "recipients",
												"nameLocation": "7366:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 1157,
												"src": "7349:27:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1129,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "7349:7:5",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1130,
													"nodeType": "ArrayTypeName",
													"src": "7349:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1133,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7386:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1157,
												"src": "7378:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7378:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7348:45:5"
									},
									"returnParameters": {
										"id": 1135,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7401:0:5"
									},
									"scope": 1285,
									"src": "7323:199:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1195,
										"nodeType": "Block",
										"src": "7875:350:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1171,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1166,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1160,
																"src": "7894:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1169,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7913:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1168,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7905:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1167,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7905:7:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 1170,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7905:10:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7894:21:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6d696e7420746f2074686520302061646472657373",
															"id": 1172,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7917:23:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ad685e5f39ea8e4d673810c314cd17a816075806a69a16cb331cf4108f5f47f5",
																"typeString": "literal_string \"mint to the 0 address\""
															},
															"value": "mint to the 0 address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ad685e5f39ea8e4d673810c314cd17a816075806a69a16cb331cf4108f5f47f5",
																"typeString": "literal_string \"mint to the 0 address\""
															}
														],
														"id": 1165,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7886:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1173,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7886:55:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1174,
												"nodeType": "ExpressionStatement",
												"src": "7886:55:5"
											},
											{
												"expression": {
													"id": 1177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1175,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 879,
														"src": "7954:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1176,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1162,
														"src": "7970:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7954:22:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1178,
												"nodeType": "ExpressionStatement",
												"src": "7954:22:5"
											},
											{
												"id": 1185,
												"nodeType": "UncheckedBlock",
												"src": "7987:178:5",
												"statements": [
													{
														"expression": {
															"id": 1183,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1179,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 871,
																	"src": "8125:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1181,
																"indexExpression": {
																	"id": 1180,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1160,
																	"src": "8135:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "8125:18:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 1182,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1162,
																"src": "8147:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8125:28:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1184,
														"nodeType": "ExpressionStatement",
														"src": "8125:28:5"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1189,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8197:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1188,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8189:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1187,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8189:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 1190,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8189:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1191,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1160,
															"src": "8201:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1192,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1162,
															"src": "8210:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1186,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 799,
														"src": "8180:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1193,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8180:37:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1194,
												"nodeType": "EmitStatement",
												"src": "8175:42:5"
											}
										]
									},
									"documentation": {
										"id": 1158,
										"nodeType": "StructuredDocumentation",
										"src": "7530:274:5",
										"text": "@notice Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n @param account recipient address\n @param amount tokens amount to create\n @dev Emits a {Transfer} event with `from` set to the zero address."
									},
									"id": 1196,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7819:5:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1160,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7833:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1196,
												"src": "7825:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1159,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7825:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1162,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7850:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1196,
												"src": "7842:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1161,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7842:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7824:33:5"
									},
									"returnParameters": {
										"id": 1164,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7875:0:5"
									},
									"scope": 1285,
									"src": "7810:415:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1240,
										"nodeType": "Block",
										"src": "8652:243:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1212,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1207,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1199,
																"src": "8671:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1210,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8688:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1209,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8680:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1208,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8680:7:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 1211,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8680:10:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8671:19:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "617070726f76652066726f6d2074686520302061646472657373",
															"id": 1213,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8692:28:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7a78c16e238661bc87912c98a6b9c315e675fa3ce0eae8ab62006fa6a2501672",
																"typeString": "literal_string \"approve from the 0 address\""
															},
															"value": "approve from the 0 address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7a78c16e238661bc87912c98a6b9c315e675fa3ce0eae8ab62006fa6a2501672",
																"typeString": "literal_string \"approve from the 0 address\""
															}
														],
														"id": 1206,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8663:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8663:58:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1215,
												"nodeType": "ExpressionStatement",
												"src": "8663:58:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1222,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1217,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1201,
																"src": "8740:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1220,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8759:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1219,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8751:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1218,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8751:7:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 1221,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8751:10:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8740:21:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "617070726f766520746f2074686520302061646472657373",
															"id": 1223,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8763:26:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_60ddc17bfa12607ae34d7f3e2c1a5e5e76d3df1dbd138648938348e49dfcdb83",
																"typeString": "literal_string \"approve to the 0 address\""
															},
															"value": "approve to the 0 address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_60ddc17bfa12607ae34d7f3e2c1a5e5e76d3df1dbd138648938348e49dfcdb83",
																"typeString": "literal_string \"approve to the 0 address\""
															}
														],
														"id": 1216,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8732:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1224,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8732:58:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1225,
												"nodeType": "ExpressionStatement",
												"src": "8732:58:5"
											},
											{
												"expression": {
													"id": 1232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1226,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 877,
																"src": "8803:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1229,
															"indexExpression": {
																"id": 1227,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1199,
																"src": "8815:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "8803:18:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1230,
														"indexExpression": {
															"id": 1228,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1201,
															"src": "8822:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8803:27:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1231,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1203,
														"src": "8833:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8803:36:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1233,
												"nodeType": "ExpressionStatement",
												"src": "8803:36:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1235,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1199,
															"src": "8864:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1236,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1201,
															"src": "8871:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1237,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1203,
															"src": "8880:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1234,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 808,
														"src": "8855:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1238,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8855:32:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1239,
												"nodeType": "EmitStatement",
												"src": "8850:37:5"
											}
										]
									},
									"documentation": {
										"id": 1197,
										"nodeType": "StructuredDocumentation",
										"src": "8233:296:5",
										"text": " @notice Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n @param owner The address of the token owner.\n @param spender The address of the spender.\n @param amount The amount of tokens to allow.\n @dev Emits an {Approval} event."
									},
									"id": 1241,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8544:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1204,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1199,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8571:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1241,
												"src": "8563:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1198,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8563:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1201,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8595:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1241,
												"src": "8587:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1200,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8587:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1203,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8621:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1241,
												"src": "8613:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1202,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8613:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8552:82:5"
									},
									"returnParameters": {
										"id": 1205,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8652:0:5"
									},
									"scope": 1285,
									"src": "8535:360:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1283,
										"nodeType": "Block",
										"src": "9224:322:5",
										"statements": [
											{
												"assignments": [
													1252
												],
												"declarations": [
													{
														"constant": false,
														"id": 1252,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "9243:16:5",
														"nodeType": "VariableDeclaration",
														"scope": 1283,
														"src": "9235:24:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1251,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9235:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1257,
												"initialValue": {
													"arguments": [
														{
															"id": 1254,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1244,
															"src": "9272:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1255,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1246,
															"src": "9279:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1253,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1004,
														"src": "9262:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 1256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9262:25:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9235:52:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1264,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1258,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1252,
														"src": "9302:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1261,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9327:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1260,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "9327:7:5",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 1259,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "9322:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1262,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9322:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 1263,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "9336:3:5",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "9322:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9302:37:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1282,
												"nodeType": "IfStatement",
												"src": "9298:241:5",
												"trueBody": {
													"id": 1281,
													"nodeType": "Block",
													"src": "9341:198:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1268,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1266,
																			"name": "currentAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1252,
																			"src": "9364:16:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 1267,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1248,
																			"src": "9384:6:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "9364:26:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "696e73756666696369656e7420616c6c6f77616e6365",
																		"id": 1269,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9392:24:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_20dbb1b88f187125d7e634b087bca125fe84cb7576ed5ae599f7ade955801583",
																			"typeString": "literal_string \"insufficient allowance\""
																		},
																		"value": "insufficient allowance"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_20dbb1b88f187125d7e634b087bca125fe84cb7576ed5ae599f7ade955801583",
																			"typeString": "literal_string \"insufficient allowance\""
																		}
																	],
																	"id": 1265,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "9356:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1270,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9356:61:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1271,
															"nodeType": "ExpressionStatement",
															"src": "9356:61:5"
														},
														{
															"id": 1280,
															"nodeType": "UncheckedBlock",
															"src": "9432:96:5",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 1273,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1244,
																				"src": "9470:5:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1274,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1246,
																				"src": "9477:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1277,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1275,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1252,
																					"src": "9486:16:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 1276,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1248,
																					"src": "9505:6:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9486:25:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1272,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1241,
																			"src": "9461:8:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																				"typeString": "function (address,address,uint256)"
																			}
																		},
																		"id": 1278,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9461:51:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1279,
																	"nodeType": "ExpressionStatement",
																	"src": "9461:51:5"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1242,
										"nodeType": "StructuredDocumentation",
										"src": "8903:191:5",
										"text": " @notice Updates `_allowances` during spending\n @param owner token owner address\n @param spender spender address\n @param amount tokens amount to spend"
									},
									"id": 1284,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "9109:15:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1249,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1244,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9143:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1284,
												"src": "9135:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1243,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9135:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1246,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9167:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1284,
												"src": "9159:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1245,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9159:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1248,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "9193:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1284,
												"src": "9185:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1247,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9185:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9124:82:5"
									},
									"returnParameters": {
										"id": 1250,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9224:0:5"
									},
									"scope": 1285,
									"src": "9100:446:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1286,
							"src": "2379:7170:5",
							"usedErrors": [],
							"usedEvents": [
								799,
								808
							]
						}
					],
					"src": "34:9515:5"
				},
				"id": 5
			}
		}
	}
}